// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="array_io_array_io,hls_ip_2021_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.880313,HLS_SYN_LAT=32,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1169,HLS_SYN_LUT=2115,HLS_VERSION=2021_2}" *)

module array_io (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        d_o_din,
        d_o_full_n,
        d_o_write,
        d_i_address0,
        d_i_ce0,
        d_i_q0,
        d_i_address1,
        d_i_ce1,
        d_i_q1
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_state2 = 33'd2;
parameter    ap_ST_fsm_state3 = 33'd4;
parameter    ap_ST_fsm_state4 = 33'd8;
parameter    ap_ST_fsm_state5 = 33'd16;
parameter    ap_ST_fsm_state6 = 33'd32;
parameter    ap_ST_fsm_state7 = 33'd64;
parameter    ap_ST_fsm_state8 = 33'd128;
parameter    ap_ST_fsm_state9 = 33'd256;
parameter    ap_ST_fsm_state10 = 33'd512;
parameter    ap_ST_fsm_state11 = 33'd1024;
parameter    ap_ST_fsm_state12 = 33'd2048;
parameter    ap_ST_fsm_state13 = 33'd4096;
parameter    ap_ST_fsm_state14 = 33'd8192;
parameter    ap_ST_fsm_state15 = 33'd16384;
parameter    ap_ST_fsm_state16 = 33'd32768;
parameter    ap_ST_fsm_state17 = 33'd65536;
parameter    ap_ST_fsm_state18 = 33'd131072;
parameter    ap_ST_fsm_state19 = 33'd262144;
parameter    ap_ST_fsm_state20 = 33'd524288;
parameter    ap_ST_fsm_state21 = 33'd1048576;
parameter    ap_ST_fsm_state22 = 33'd2097152;
parameter    ap_ST_fsm_state23 = 33'd4194304;
parameter    ap_ST_fsm_state24 = 33'd8388608;
parameter    ap_ST_fsm_state25 = 33'd16777216;
parameter    ap_ST_fsm_state26 = 33'd33554432;
parameter    ap_ST_fsm_state27 = 33'd67108864;
parameter    ap_ST_fsm_state28 = 33'd134217728;
parameter    ap_ST_fsm_state29 = 33'd268435456;
parameter    ap_ST_fsm_state30 = 33'd536870912;
parameter    ap_ST_fsm_state31 = 33'd1073741824;
parameter    ap_ST_fsm_state32 = 33'd2147483648;
parameter    ap_ST_fsm_state33 = 33'd4294967296;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] d_o_din;
input   d_o_full_n;
output   d_o_write;
output  [4:0] d_i_address0;
output   d_i_ce0;
input  [15:0] d_i_q0;
output  [4:0] d_i_address1;
output   d_i_ce1;
input  [15:0] d_i_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] d_o_din;
reg d_o_write;
reg[4:0] d_i_address0;
reg d_i_ce0;
reg[4:0] d_i_address1;
reg d_i_ce1;

(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] acc_0;
reg   [31:0] acc_1;
reg   [31:0] acc_2;
reg   [31:0] acc_3;
reg   [31:0] acc_4;
reg   [31:0] acc_5;
reg   [31:0] acc_6;
reg   [31:0] acc_7;
reg    d_o_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
reg  signed [15:0] d_i_load_reg_1055;
wire   [15:0] add_ln69_fu_416_p2;
reg   [15:0] add_ln69_reg_1060;
reg  signed [15:0] d_i_load_1_reg_1065;
wire   [15:0] add_ln69_1_fu_431_p2;
reg   [15:0] add_ln69_1_reg_1084;
reg  signed [15:0] d_i_load_2_reg_1089;
reg  signed [15:0] d_i_load_3_reg_1095;
wire   [15:0] add_ln69_2_fu_445_p2;
reg   [15:0] add_ln69_2_reg_1114;
reg  signed [15:0] d_i_load_4_reg_1119;
reg  signed [15:0] d_i_load_5_reg_1125;
wire   [15:0] add_ln69_3_fu_459_p2;
reg   [15:0] add_ln69_3_reg_1144;
reg  signed [15:0] d_i_load_6_reg_1149;
reg  signed [15:0] d_i_load_7_reg_1155;
wire   [15:0] add_ln69_4_fu_473_p2;
reg   [15:0] add_ln69_4_reg_1174;
reg  signed [15:0] d_i_load_8_reg_1179;
reg  signed [15:0] d_i_load_9_reg_1185;
wire   [15:0] add_ln69_5_fu_487_p2;
reg   [15:0] add_ln69_5_reg_1204;
reg  signed [15:0] d_i_load_10_reg_1209;
reg  signed [15:0] d_i_load_11_reg_1215;
wire   [15:0] add_ln69_6_fu_501_p2;
reg   [15:0] add_ln69_6_reg_1234;
reg  signed [15:0] d_i_load_12_reg_1239;
wire   [15:0] add_ln69_12_fu_507_p2;
reg   [15:0] add_ln69_12_reg_1244;
reg  signed [15:0] d_i_load_13_reg_1250;
wire   [15:0] add_ln69_7_fu_520_p2;
reg   [15:0] add_ln69_7_reg_1269;
reg  signed [15:0] d_i_load_14_reg_1274;
reg  signed [15:0] d_i_load_15_reg_1280;
wire   [15:0] add_ln69_8_fu_526_p2;
reg   [15:0] add_ln69_8_reg_1296;
reg  signed [15:0] d_i_load_16_reg_1301;
reg  signed [15:0] d_i_load_17_reg_1307;
wire   [15:0] add_ln69_9_fu_531_p2;
reg   [15:0] add_ln69_9_reg_1323;
reg  signed [15:0] d_i_load_18_reg_1328;
reg  signed [15:0] d_i_load_19_reg_1334;
wire   [15:0] add_ln69_10_fu_536_p2;
reg   [15:0] add_ln69_10_reg_1350;
reg  signed [15:0] d_i_load_20_reg_1355;
reg  signed [15:0] d_i_load_21_reg_1361;
wire   [15:0] add_ln69_11_fu_541_p2;
reg   [15:0] add_ln69_11_reg_1377;
reg  signed [15:0] d_i_load_22_reg_1382;
reg  signed [15:0] d_i_load_23_reg_1388;
wire   [15:0] add_ln69_16_fu_561_p2;
reg   [15:0] add_ln69_16_reg_1404;
wire   [15:0] add_ln69_17_fu_568_p2;
reg   [15:0] add_ln69_17_reg_1409;
wire   [15:0] add_ln69_24_fu_613_p2;
reg   [15:0] add_ln69_24_reg_1414;
wire   [15:0] add_ln69_25_fu_660_p2;
reg   [15:0] add_ln69_25_reg_1419;
wire   [15:0] add_ln69_13_fu_678_p2;
reg   [15:0] add_ln69_13_reg_1434;
wire   [15:0] add_ln69_18_fu_686_p2;
reg   [15:0] add_ln69_18_reg_1439;
wire   [15:0] add_ln69_19_fu_693_p2;
reg   [15:0] add_ln69_19_reg_1444;
wire   [15:0] add_ln69_26_fu_738_p2;
reg   [15:0] add_ln69_26_reg_1449;
wire   [15:0] add_ln69_27_fu_785_p2;
reg   [15:0] add_ln69_27_reg_1454;
wire   [15:0] add_ln69_14_fu_803_p2;
reg   [15:0] add_ln69_14_reg_1469;
wire   [15:0] add_ln69_20_fu_811_p2;
reg   [15:0] add_ln69_20_reg_1474;
wire   [15:0] add_ln69_21_fu_818_p2;
reg   [15:0] add_ln69_21_reg_1479;
wire   [15:0] add_ln69_28_fu_863_p2;
reg   [15:0] add_ln69_28_reg_1484;
wire   [15:0] add_ln69_29_fu_910_p2;
reg   [15:0] add_ln69_29_reg_1489;
wire   [15:0] add_ln69_22_fu_936_p2;
reg   [15:0] add_ln69_22_reg_1504;
wire   [15:0] add_ln69_23_fu_943_p2;
reg   [15:0] add_ln69_23_reg_1509;
wire   [15:0] add_ln69_30_fu_989_p2;
reg   [15:0] add_ln69_30_reg_1514;
wire   [15:0] add_ln69_31_fu_1036_p2;
reg   [15:0] add_ln69_31_reg_1519;
wire   [31:0] temp_fu_601_p2;
wire   [31:0] temp_1_fu_648_p2;
wire   [31:0] temp_2_fu_726_p2;
wire   [31:0] temp_3_fu_773_p2;
wire   [31:0] temp_4_fu_851_p2;
wire   [31:0] temp_5_fu_898_p2;
wire   [31:0] temp_6_fu_977_p2;
wire   [31:0] temp_7_fu_1024_p2;
wire   [15:0] add_ln69_15_fu_928_p2;
wire  signed [15:0] add_ln69_fu_416_p0;
wire   [15:0] trunc_ln67_fu_412_p1;
wire   [15:0] trunc_ln67_1_fu_427_p1;
wire   [15:0] trunc_ln67_2_fu_441_p1;
wire   [15:0] trunc_ln67_3_fu_455_p1;
wire   [15:0] trunc_ln67_4_fu_469_p1;
wire   [15:0] trunc_ln67_5_fu_483_p1;
wire   [15:0] trunc_ln67_6_fu_497_p1;
wire  signed [15:0] add_ln69_12_fu_507_p0;
wire   [15:0] trunc_ln67_7_fu_516_p1;
wire  signed [15:0] sext_ln67_8_fu_572_p0;
wire  signed [31:0] sext_ln67_fu_546_p1;
wire  signed [16:0] sext_ln69_8_fu_558_p1;
wire  signed [16:0] sext_ln67_8_fu_572_p1;
wire   [16:0] add_ln67_1_fu_581_p2;
wire  signed [17:0] sext_ln67_9_fu_587_p1;
wire  signed [17:0] sext_ln69_fu_552_p1;
wire   [17:0] add_ln67_2_fu_591_p2;
wire  signed [31:0] sext_ln67_10_fu_597_p1;
wire   [31:0] add_ln67_fu_576_p2;
wire  signed [15:0] add_ln69_24_fu_613_p0;
wire  signed [15:0] sext_ln67_11_fu_619_p0;
wire  signed [31:0] sext_ln67_1_fu_549_p1;
wire  signed [16:0] sext_ln69_9_fu_565_p1;
wire  signed [16:0] sext_ln67_11_fu_619_p1;
wire   [16:0] add_ln67_5_fu_628_p2;
wire  signed [17:0] sext_ln67_12_fu_634_p1;
wire  signed [17:0] sext_ln69_1_fu_555_p1;
wire   [17:0] add_ln67_6_fu_638_p2;
wire  signed [31:0] sext_ln67_13_fu_644_p1;
wire   [31:0] add_ln67_4_fu_623_p2;
wire  signed [15:0] add_ln69_25_fu_660_p0;
wire  signed [15:0] sext_ln67_14_fu_697_p0;
wire  signed [31:0] sext_ln67_2_fu_666_p1;
wire  signed [16:0] sext_ln69_10_fu_683_p1;
wire  signed [16:0] sext_ln67_14_fu_697_p1;
wire   [16:0] add_ln67_9_fu_706_p2;
wire  signed [17:0] sext_ln67_15_fu_712_p1;
wire  signed [17:0] sext_ln69_2_fu_672_p1;
wire   [17:0] add_ln67_10_fu_716_p2;
wire  signed [31:0] sext_ln67_16_fu_722_p1;
wire   [31:0] add_ln67_8_fu_701_p2;
wire  signed [15:0] add_ln69_26_fu_738_p0;
wire  signed [15:0] sext_ln67_17_fu_744_p0;
wire  signed [31:0] sext_ln67_3_fu_669_p1;
wire  signed [16:0] sext_ln69_11_fu_690_p1;
wire  signed [16:0] sext_ln67_17_fu_744_p1;
wire   [16:0] add_ln67_13_fu_753_p2;
wire  signed [17:0] sext_ln67_18_fu_759_p1;
wire  signed [17:0] sext_ln69_3_fu_675_p1;
wire   [17:0] add_ln67_14_fu_763_p2;
wire  signed [31:0] sext_ln67_19_fu_769_p1;
wire   [31:0] add_ln67_12_fu_748_p2;
wire  signed [15:0] add_ln69_27_fu_785_p0;
wire  signed [15:0] sext_ln67_20_fu_822_p0;
wire  signed [31:0] sext_ln67_4_fu_791_p1;
wire  signed [16:0] sext_ln69_12_fu_808_p1;
wire  signed [16:0] sext_ln67_20_fu_822_p1;
wire   [16:0] add_ln67_17_fu_831_p2;
wire  signed [17:0] sext_ln67_21_fu_837_p1;
wire  signed [17:0] sext_ln69_4_fu_797_p1;
wire   [17:0] add_ln67_18_fu_841_p2;
wire  signed [31:0] sext_ln67_22_fu_847_p1;
wire   [31:0] add_ln67_16_fu_826_p2;
wire  signed [15:0] add_ln69_28_fu_863_p0;
wire  signed [15:0] sext_ln67_23_fu_869_p0;
wire  signed [31:0] sext_ln67_5_fu_794_p1;
wire  signed [16:0] sext_ln69_13_fu_815_p1;
wire  signed [16:0] sext_ln67_23_fu_869_p1;
wire   [16:0] add_ln67_21_fu_878_p2;
wire  signed [17:0] sext_ln67_24_fu_884_p1;
wire  signed [17:0] sext_ln69_5_fu_800_p1;
wire   [17:0] add_ln67_22_fu_888_p2;
wire  signed [31:0] sext_ln67_25_fu_894_p1;
wire   [31:0] add_ln67_20_fu_873_p2;
wire  signed [15:0] add_ln69_29_fu_910_p0;
wire  signed [15:0] sext_ln67_26_fu_948_p0;
wire  signed [31:0] sext_ln67_6_fu_916_p1;
wire  signed [16:0] sext_ln69_14_fu_933_p1;
wire  signed [16:0] sext_ln67_26_fu_948_p1;
wire   [16:0] add_ln67_25_fu_957_p2;
wire  signed [17:0] sext_ln67_27_fu_963_p1;
wire  signed [17:0] sext_ln69_6_fu_922_p1;
wire   [17:0] add_ln67_26_fu_967_p2;
wire  signed [31:0] sext_ln67_28_fu_973_p1;
wire   [31:0] add_ln67_24_fu_952_p2;
wire  signed [15:0] add_ln69_30_fu_989_p0;
wire  signed [15:0] sext_ln67_29_fu_995_p0;
wire  signed [31:0] sext_ln67_7_fu_919_p1;
wire  signed [16:0] sext_ln69_15_fu_940_p1;
wire  signed [16:0] sext_ln67_29_fu_995_p1;
wire   [16:0] add_ln67_29_fu_1004_p2;
wire  signed [17:0] sext_ln67_30_fu_1010_p1;
wire  signed [17:0] sext_ln69_7_fu_925_p1;
wire   [17:0] add_ln67_30_fu_1014_p2;
wire  signed [31:0] sext_ln67_31_fu_1020_p1;
wire   [31:0] add_ln67_28_fu_999_p2;
wire  signed [15:0] add_ln69_31_fu_1036_p0;
reg   [32:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
reg    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
reg    ap_ST_fsm_state24_blk;
reg    ap_ST_fsm_state25_blk;
reg    ap_ST_fsm_state26_blk;
reg    ap_ST_fsm_state27_blk;
reg    ap_ST_fsm_state28_blk;
reg    ap_ST_fsm_state29_blk;
reg    ap_ST_fsm_state30_blk;
reg    ap_ST_fsm_state31_blk;
reg    ap_ST_fsm_state32_blk;
reg    ap_ST_fsm_state33_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 33'd1;
#0 acc_0 = 32'd0;
#0 acc_1 = 32'd0;
#0 acc_2 = 32'd0;
#0 acc_3 = 32'd0;
#0 acc_4 = 32'd0;
#0 acc_5 = 32'd0;
#0 acc_6 = 32'd0;
#0 acc_7 = 32'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        acc_0 <= temp_fu_601_p2;
        acc_1 <= temp_1_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        acc_2 <= temp_2_fu_726_p2;
        acc_3 <= temp_3_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        acc_4 <= temp_4_fu_851_p2;
        acc_5 <= temp_5_fu_898_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        acc_6 <= temp_6_fu_977_p2;
        acc_7 <= temp_7_fu_1024_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln69_10_reg_1350 <= add_ln69_10_fu_536_p2;
        d_i_load_20_reg_1355 <= d_i_q1;
        d_i_load_21_reg_1361 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln69_11_reg_1377 <= add_ln69_11_fu_541_p2;
        d_i_load_22_reg_1382 <= d_i_q1;
        d_i_load_23_reg_1388 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln69_12_reg_1244 <= add_ln69_12_fu_507_p2;
        add_ln69_6_reg_1234 <= add_ln69_6_fu_501_p2;
        d_i_load_12_reg_1239 <= d_i_q1;
        d_i_load_13_reg_1250 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln69_13_reg_1434 <= add_ln69_13_fu_678_p2;
        add_ln69_18_reg_1439 <= add_ln69_18_fu_686_p2;
        add_ln69_19_reg_1444 <= add_ln69_19_fu_693_p2;
        add_ln69_26_reg_1449 <= add_ln69_26_fu_738_p2;
        add_ln69_27_reg_1454 <= add_ln69_27_fu_785_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln69_14_reg_1469 <= add_ln69_14_fu_803_p2;
        add_ln69_20_reg_1474 <= add_ln69_20_fu_811_p2;
        add_ln69_21_reg_1479 <= add_ln69_21_fu_818_p2;
        add_ln69_28_reg_1484 <= add_ln69_28_fu_863_p2;
        add_ln69_29_reg_1489 <= add_ln69_29_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln69_16_reg_1404 <= add_ln69_16_fu_561_p2;
        add_ln69_17_reg_1409 <= add_ln69_17_fu_568_p2;
        add_ln69_24_reg_1414 <= add_ln69_24_fu_613_p2;
        add_ln69_25_reg_1419 <= add_ln69_25_fu_660_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln69_1_reg_1084 <= add_ln69_1_fu_431_p2;
        d_i_load_2_reg_1089 <= d_i_q1;
        d_i_load_3_reg_1095 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln69_22_reg_1504 <= add_ln69_22_fu_936_p2;
        add_ln69_23_reg_1509 <= add_ln69_23_fu_943_p2;
        add_ln69_30_reg_1514 <= add_ln69_30_fu_989_p2;
        add_ln69_31_reg_1519 <= add_ln69_31_fu_1036_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln69_2_reg_1114 <= add_ln69_2_fu_445_p2;
        d_i_load_4_reg_1119 <= d_i_q1;
        d_i_load_5_reg_1125 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln69_3_reg_1144 <= add_ln69_3_fu_459_p2;
        d_i_load_6_reg_1149 <= d_i_q1;
        d_i_load_7_reg_1155 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln69_4_reg_1174 <= add_ln69_4_fu_473_p2;
        d_i_load_8_reg_1179 <= d_i_q1;
        d_i_load_9_reg_1185 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln69_5_reg_1204 <= add_ln69_5_fu_487_p2;
        d_i_load_10_reg_1209 <= d_i_q1;
        d_i_load_11_reg_1215 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln69_7_reg_1269 <= add_ln69_7_fu_520_p2;
        d_i_load_14_reg_1274 <= d_i_q1;
        d_i_load_15_reg_1280 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln69_8_reg_1296 <= add_ln69_8_fu_526_p2;
        d_i_load_16_reg_1301 <= d_i_q1;
        d_i_load_17_reg_1307 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln69_9_reg_1323 <= add_ln69_9_fu_531_p2;
        d_i_load_18_reg_1328 <= d_i_q1;
        d_i_load_19_reg_1334 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln69_reg_1060 <= add_ln69_fu_416_p2;
        d_i_load_1_reg_1065 <= d_i_q0;
        d_i_load_reg_1055 <= d_i_q1;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state22_blk = 1'b1;
    end else begin
        ap_ST_fsm_state22_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state24_blk = 1'b1;
    end else begin
        ap_ST_fsm_state24_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state25_blk = 1'b1;
    end else begin
        ap_ST_fsm_state25_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state26_blk = 1'b1;
    end else begin
        ap_ST_fsm_state26_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state27_blk = 1'b1;
    end else begin
        ap_ST_fsm_state27_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state28_blk = 1'b1;
    end else begin
        ap_ST_fsm_state28_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state29_blk = 1'b1;
    end else begin
        ap_ST_fsm_state29_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state30_blk = 1'b1;
    end else begin
        ap_ST_fsm_state30_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state31_blk = 1'b1;
    end else begin
        ap_ST_fsm_state31_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state32_blk = 1'b1;
    end else begin
        ap_ST_fsm_state32_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state33_blk = 1'b1;
    end else begin
        ap_ST_fsm_state33_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        d_i_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        d_i_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        d_i_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        d_i_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        d_i_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        d_i_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_i_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_i_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_address0 = 64'd1;
    end else begin
        d_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        d_i_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        d_i_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        d_i_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        d_i_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        d_i_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        d_i_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_i_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_i_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_address1 = 64'd0;
    end else begin
        d_i_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        d_i_ce0 = 1'b1;
    end else begin
        d_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        d_i_ce1 = 1'b1;
    end else begin
        d_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        d_o_blk_n = d_o_full_n;
    end else begin
        d_o_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((d_o_full_n == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state33)) begin
            d_o_din = add_ln69_31_reg_1519;
        end else if ((1'b1 == ap_CS_fsm_state32)) begin
            d_o_din = add_ln69_30_reg_1514;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            d_o_din = add_ln69_29_reg_1489;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            d_o_din = add_ln69_28_reg_1484;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            d_o_din = add_ln69_27_reg_1454;
        end else if ((1'b1 == ap_CS_fsm_state28)) begin
            d_o_din = add_ln69_26_reg_1449;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            d_o_din = add_ln69_25_reg_1419;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            d_o_din = add_ln69_24_reg_1414;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            d_o_din = add_ln69_23_reg_1509;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            d_o_din = add_ln69_22_reg_1504;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            d_o_din = add_ln69_21_reg_1479;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            d_o_din = add_ln69_20_reg_1474;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            d_o_din = add_ln69_19_reg_1444;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            d_o_din = add_ln69_18_reg_1439;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            d_o_din = add_ln69_17_reg_1409;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            d_o_din = add_ln69_16_reg_1404;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            d_o_din = add_ln69_15_fu_928_p2;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            d_o_din = add_ln69_14_fu_803_p2;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            d_o_din = add_ln69_13_fu_678_p2;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            d_o_din = add_ln69_12_reg_1244;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            d_o_din = add_ln69_11_fu_541_p2;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            d_o_din = add_ln69_10_fu_536_p2;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            d_o_din = add_ln69_9_fu_531_p2;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            d_o_din = add_ln69_8_fu_526_p2;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            d_o_din = add_ln69_7_fu_520_p2;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            d_o_din = add_ln69_6_fu_501_p2;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            d_o_din = add_ln69_5_fu_487_p2;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            d_o_din = add_ln69_4_fu_473_p2;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            d_o_din = add_ln69_3_fu_459_p2;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            d_o_din = add_ln69_2_fu_445_p2;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            d_o_din = add_ln69_1_fu_431_p2;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            d_o_din = add_ln69_fu_416_p2;
        end else begin
            d_o_din = 'bx;
        end
    end else begin
        d_o_din = 'bx;
    end
end

always @ (*) begin
    if ((((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state33)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state31)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state30)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state29)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        d_o_write = 1'b1;
    end else begin
        d_o_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((d_o_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln67_10_fu_716_p2 = ($signed(sext_ln67_15_fu_712_p1) + $signed(sext_ln69_2_fu_672_p1));

assign add_ln67_12_fu_748_p2 = ($signed(acc_3) + $signed(sext_ln67_3_fu_669_p1));

assign add_ln67_13_fu_753_p2 = ($signed(sext_ln69_11_fu_690_p1) + $signed(sext_ln67_17_fu_744_p1));

assign add_ln67_14_fu_763_p2 = ($signed(sext_ln67_18_fu_759_p1) + $signed(sext_ln69_3_fu_675_p1));

assign add_ln67_16_fu_826_p2 = ($signed(acc_4) + $signed(sext_ln67_4_fu_791_p1));

assign add_ln67_17_fu_831_p2 = ($signed(sext_ln69_12_fu_808_p1) + $signed(sext_ln67_20_fu_822_p1));

assign add_ln67_18_fu_841_p2 = ($signed(sext_ln67_21_fu_837_p1) + $signed(sext_ln69_4_fu_797_p1));

assign add_ln67_1_fu_581_p2 = ($signed(sext_ln69_8_fu_558_p1) + $signed(sext_ln67_8_fu_572_p1));

assign add_ln67_20_fu_873_p2 = ($signed(acc_5) + $signed(sext_ln67_5_fu_794_p1));

assign add_ln67_21_fu_878_p2 = ($signed(sext_ln69_13_fu_815_p1) + $signed(sext_ln67_23_fu_869_p1));

assign add_ln67_22_fu_888_p2 = ($signed(sext_ln67_24_fu_884_p1) + $signed(sext_ln69_5_fu_800_p1));

assign add_ln67_24_fu_952_p2 = ($signed(acc_6) + $signed(sext_ln67_6_fu_916_p1));

assign add_ln67_25_fu_957_p2 = ($signed(sext_ln69_14_fu_933_p1) + $signed(sext_ln67_26_fu_948_p1));

assign add_ln67_26_fu_967_p2 = ($signed(sext_ln67_27_fu_963_p1) + $signed(sext_ln69_6_fu_922_p1));

assign add_ln67_28_fu_999_p2 = ($signed(acc_7) + $signed(sext_ln67_7_fu_919_p1));

assign add_ln67_29_fu_1004_p2 = ($signed(sext_ln69_15_fu_940_p1) + $signed(sext_ln67_29_fu_995_p1));

assign add_ln67_2_fu_591_p2 = ($signed(sext_ln67_9_fu_587_p1) + $signed(sext_ln69_fu_552_p1));

assign add_ln67_30_fu_1014_p2 = ($signed(sext_ln67_30_fu_1010_p1) + $signed(sext_ln69_7_fu_925_p1));

assign add_ln67_4_fu_623_p2 = ($signed(acc_1) + $signed(sext_ln67_1_fu_549_p1));

assign add_ln67_5_fu_628_p2 = ($signed(sext_ln69_9_fu_565_p1) + $signed(sext_ln67_11_fu_619_p1));

assign add_ln67_6_fu_638_p2 = ($signed(sext_ln67_12_fu_634_p1) + $signed(sext_ln69_1_fu_555_p1));

assign add_ln67_8_fu_701_p2 = ($signed(acc_2) + $signed(sext_ln67_2_fu_666_p1));

assign add_ln67_9_fu_706_p2 = ($signed(sext_ln69_10_fu_683_p1) + $signed(sext_ln67_14_fu_697_p1));

assign add_ln67_fu_576_p2 = ($signed(acc_0) + $signed(sext_ln67_fu_546_p1));

assign add_ln69_10_fu_536_p2 = ($signed(d_i_load_10_reg_1209) + $signed(add_ln69_2_reg_1114));

assign add_ln69_11_fu_541_p2 = ($signed(d_i_load_11_reg_1215) + $signed(add_ln69_3_reg_1144));

assign add_ln69_12_fu_507_p0 = d_i_q1;

assign add_ln69_12_fu_507_p2 = ($signed(add_ln69_12_fu_507_p0) + $signed(add_ln69_4_reg_1174));

assign add_ln69_13_fu_678_p2 = ($signed(d_i_load_13_reg_1250) + $signed(add_ln69_5_reg_1204));

assign add_ln69_14_fu_803_p2 = ($signed(d_i_load_14_reg_1274) + $signed(add_ln69_6_reg_1234));

assign add_ln69_15_fu_928_p2 = ($signed(d_i_load_15_reg_1280) + $signed(add_ln69_7_reg_1269));

assign add_ln69_16_fu_561_p2 = ($signed(d_i_load_16_reg_1301) + $signed(add_ln69_8_reg_1296));

assign add_ln69_17_fu_568_p2 = ($signed(d_i_load_17_reg_1307) + $signed(add_ln69_9_reg_1323));

assign add_ln69_18_fu_686_p2 = ($signed(d_i_load_18_reg_1328) + $signed(add_ln69_10_reg_1350));

assign add_ln69_19_fu_693_p2 = ($signed(d_i_load_19_reg_1334) + $signed(add_ln69_11_reg_1377));

assign add_ln69_1_fu_431_p2 = ($signed(d_i_load_1_reg_1065) + $signed(trunc_ln67_1_fu_427_p1));

assign add_ln69_20_fu_811_p2 = ($signed(d_i_load_20_reg_1355) + $signed(add_ln69_12_reg_1244));

assign add_ln69_21_fu_818_p2 = ($signed(d_i_load_21_reg_1361) + $signed(add_ln69_13_reg_1434));

assign add_ln69_22_fu_936_p2 = ($signed(d_i_load_22_reg_1382) + $signed(add_ln69_14_reg_1469));

assign add_ln69_23_fu_943_p2 = ($signed(d_i_load_23_reg_1388) + $signed(add_ln69_15_fu_928_p2));

assign add_ln69_24_fu_613_p0 = d_i_q1;

assign add_ln69_24_fu_613_p2 = ($signed(add_ln69_24_fu_613_p0) + $signed(add_ln69_16_fu_561_p2));

assign add_ln69_25_fu_660_p0 = d_i_q0;

assign add_ln69_25_fu_660_p2 = ($signed(add_ln69_25_fu_660_p0) + $signed(add_ln69_17_fu_568_p2));

assign add_ln69_26_fu_738_p0 = d_i_q1;

assign add_ln69_26_fu_738_p2 = ($signed(add_ln69_26_fu_738_p0) + $signed(add_ln69_18_fu_686_p2));

assign add_ln69_27_fu_785_p0 = d_i_q0;

assign add_ln69_27_fu_785_p2 = ($signed(add_ln69_27_fu_785_p0) + $signed(add_ln69_19_fu_693_p2));

assign add_ln69_28_fu_863_p0 = d_i_q1;

assign add_ln69_28_fu_863_p2 = ($signed(add_ln69_28_fu_863_p0) + $signed(add_ln69_20_fu_811_p2));

assign add_ln69_29_fu_910_p0 = d_i_q0;

assign add_ln69_29_fu_910_p2 = ($signed(add_ln69_29_fu_910_p0) + $signed(add_ln69_21_fu_818_p2));

assign add_ln69_2_fu_445_p2 = ($signed(d_i_load_2_reg_1089) + $signed(trunc_ln67_2_fu_441_p1));

assign add_ln69_30_fu_989_p0 = d_i_q1;

assign add_ln69_30_fu_989_p2 = ($signed(add_ln69_30_fu_989_p0) + $signed(add_ln69_22_fu_936_p2));

assign add_ln69_31_fu_1036_p0 = d_i_q0;

assign add_ln69_31_fu_1036_p2 = ($signed(add_ln69_31_fu_1036_p0) + $signed(add_ln69_23_fu_943_p2));

assign add_ln69_3_fu_459_p2 = ($signed(d_i_load_3_reg_1095) + $signed(trunc_ln67_3_fu_455_p1));

assign add_ln69_4_fu_473_p2 = ($signed(d_i_load_4_reg_1119) + $signed(trunc_ln67_4_fu_469_p1));

assign add_ln69_5_fu_487_p2 = ($signed(d_i_load_5_reg_1125) + $signed(trunc_ln67_5_fu_483_p1));

assign add_ln69_6_fu_501_p2 = ($signed(d_i_load_6_reg_1149) + $signed(trunc_ln67_6_fu_497_p1));

assign add_ln69_7_fu_520_p2 = ($signed(d_i_load_7_reg_1155) + $signed(trunc_ln67_7_fu_516_p1));

assign add_ln69_8_fu_526_p2 = ($signed(d_i_load_8_reg_1179) + $signed(add_ln69_reg_1060));

assign add_ln69_9_fu_531_p2 = ($signed(d_i_load_9_reg_1185) + $signed(add_ln69_1_reg_1084));

assign add_ln69_fu_416_p0 = d_i_q1;

assign add_ln69_fu_416_p2 = ($signed(add_ln69_fu_416_p0) + $signed(trunc_ln67_fu_412_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

assign sext_ln67_10_fu_597_p1 = $signed(add_ln67_2_fu_591_p2);

assign sext_ln67_11_fu_619_p0 = d_i_q0;

assign sext_ln67_11_fu_619_p1 = sext_ln67_11_fu_619_p0;

assign sext_ln67_12_fu_634_p1 = $signed(add_ln67_5_fu_628_p2);

assign sext_ln67_13_fu_644_p1 = $signed(add_ln67_6_fu_638_p2);

assign sext_ln67_14_fu_697_p0 = d_i_q1;

assign sext_ln67_14_fu_697_p1 = sext_ln67_14_fu_697_p0;

assign sext_ln67_15_fu_712_p1 = $signed(add_ln67_9_fu_706_p2);

assign sext_ln67_16_fu_722_p1 = $signed(add_ln67_10_fu_716_p2);

assign sext_ln67_17_fu_744_p0 = d_i_q0;

assign sext_ln67_17_fu_744_p1 = sext_ln67_17_fu_744_p0;

assign sext_ln67_18_fu_759_p1 = $signed(add_ln67_13_fu_753_p2);

assign sext_ln67_19_fu_769_p1 = $signed(add_ln67_14_fu_763_p2);

assign sext_ln67_1_fu_549_p1 = d_i_load_1_reg_1065;

assign sext_ln67_20_fu_822_p0 = d_i_q1;

assign sext_ln67_20_fu_822_p1 = sext_ln67_20_fu_822_p0;

assign sext_ln67_21_fu_837_p1 = $signed(add_ln67_17_fu_831_p2);

assign sext_ln67_22_fu_847_p1 = $signed(add_ln67_18_fu_841_p2);

assign sext_ln67_23_fu_869_p0 = d_i_q0;

assign sext_ln67_23_fu_869_p1 = sext_ln67_23_fu_869_p0;

assign sext_ln67_24_fu_884_p1 = $signed(add_ln67_21_fu_878_p2);

assign sext_ln67_25_fu_894_p1 = $signed(add_ln67_22_fu_888_p2);

assign sext_ln67_26_fu_948_p0 = d_i_q1;

assign sext_ln67_26_fu_948_p1 = sext_ln67_26_fu_948_p0;

assign sext_ln67_27_fu_963_p1 = $signed(add_ln67_25_fu_957_p2);

assign sext_ln67_28_fu_973_p1 = $signed(add_ln67_26_fu_967_p2);

assign sext_ln67_29_fu_995_p0 = d_i_q0;

assign sext_ln67_29_fu_995_p1 = sext_ln67_29_fu_995_p0;

assign sext_ln67_2_fu_666_p1 = d_i_load_2_reg_1089;

assign sext_ln67_30_fu_1010_p1 = $signed(add_ln67_29_fu_1004_p2);

assign sext_ln67_31_fu_1020_p1 = $signed(add_ln67_30_fu_1014_p2);

assign sext_ln67_3_fu_669_p1 = d_i_load_3_reg_1095;

assign sext_ln67_4_fu_791_p1 = d_i_load_4_reg_1119;

assign sext_ln67_5_fu_794_p1 = d_i_load_5_reg_1125;

assign sext_ln67_6_fu_916_p1 = d_i_load_6_reg_1149;

assign sext_ln67_7_fu_919_p1 = d_i_load_7_reg_1155;

assign sext_ln67_8_fu_572_p0 = d_i_q1;

assign sext_ln67_8_fu_572_p1 = sext_ln67_8_fu_572_p0;

assign sext_ln67_9_fu_587_p1 = $signed(add_ln67_1_fu_581_p2);

assign sext_ln67_fu_546_p1 = d_i_load_reg_1055;

assign sext_ln69_10_fu_683_p1 = d_i_load_18_reg_1328;

assign sext_ln69_11_fu_690_p1 = d_i_load_19_reg_1334;

assign sext_ln69_12_fu_808_p1 = d_i_load_20_reg_1355;

assign sext_ln69_13_fu_815_p1 = d_i_load_21_reg_1361;

assign sext_ln69_14_fu_933_p1 = d_i_load_22_reg_1382;

assign sext_ln69_15_fu_940_p1 = d_i_load_23_reg_1388;

assign sext_ln69_1_fu_555_p1 = d_i_load_9_reg_1185;

assign sext_ln69_2_fu_672_p1 = d_i_load_10_reg_1209;

assign sext_ln69_3_fu_675_p1 = d_i_load_11_reg_1215;

assign sext_ln69_4_fu_797_p1 = d_i_load_12_reg_1239;

assign sext_ln69_5_fu_800_p1 = d_i_load_13_reg_1250;

assign sext_ln69_6_fu_922_p1 = d_i_load_14_reg_1274;

assign sext_ln69_7_fu_925_p1 = d_i_load_15_reg_1280;

assign sext_ln69_8_fu_558_p1 = d_i_load_16_reg_1301;

assign sext_ln69_9_fu_565_p1 = d_i_load_17_reg_1307;

assign sext_ln69_fu_552_p1 = d_i_load_8_reg_1179;

assign temp_1_fu_648_p2 = ($signed(sext_ln67_13_fu_644_p1) + $signed(add_ln67_4_fu_623_p2));

assign temp_2_fu_726_p2 = ($signed(sext_ln67_16_fu_722_p1) + $signed(add_ln67_8_fu_701_p2));

assign temp_3_fu_773_p2 = ($signed(sext_ln67_19_fu_769_p1) + $signed(add_ln67_12_fu_748_p2));

assign temp_4_fu_851_p2 = ($signed(sext_ln67_22_fu_847_p1) + $signed(add_ln67_16_fu_826_p2));

assign temp_5_fu_898_p2 = ($signed(sext_ln67_25_fu_894_p1) + $signed(add_ln67_20_fu_873_p2));

assign temp_6_fu_977_p2 = ($signed(sext_ln67_28_fu_973_p1) + $signed(add_ln67_24_fu_952_p2));

assign temp_7_fu_1024_p2 = ($signed(sext_ln67_31_fu_1020_p1) + $signed(add_ln67_28_fu_999_p2));

assign temp_fu_601_p2 = ($signed(sext_ln67_10_fu_597_p1) + $signed(add_ln67_fu_576_p2));

assign trunc_ln67_1_fu_427_p1 = acc_1[15:0];

assign trunc_ln67_2_fu_441_p1 = acc_2[15:0];

assign trunc_ln67_3_fu_455_p1 = acc_3[15:0];

assign trunc_ln67_4_fu_469_p1 = acc_4[15:0];

assign trunc_ln67_5_fu_483_p1 = acc_5[15:0];

assign trunc_ln67_6_fu_497_p1 = acc_6[15:0];

assign trunc_ln67_7_fu_516_p1 = acc_7[15:0];

assign trunc_ln67_fu_412_p1 = acc_0[15:0];

endmodule //array_io
