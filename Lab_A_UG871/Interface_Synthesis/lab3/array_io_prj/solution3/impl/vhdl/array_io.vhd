-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity array_io is
port (
    ap_local_block : OUT STD_LOGIC;
    ap_local_deadlock : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    d_o_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_0_full_n : IN STD_LOGIC;
    d_o_0_write : OUT STD_LOGIC;
    d_o_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_1_full_n : IN STD_LOGIC;
    d_o_1_write : OUT STD_LOGIC;
    d_o_2_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_2_full_n : IN STD_LOGIC;
    d_o_2_write : OUT STD_LOGIC;
    d_o_3_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_3_full_n : IN STD_LOGIC;
    d_o_3_write : OUT STD_LOGIC;
    d_i_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_0_ce0 : OUT STD_LOGIC;
    d_i_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_0_ce1 : OUT STD_LOGIC;
    d_i_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_1_ce0 : OUT STD_LOGIC;
    d_i_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_1_ce1 : OUT STD_LOGIC;
    d_i_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of array_io is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "array_io_array_io,hls_ip_2021_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.942000,HLS_SYN_LAT=8,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=265,HLS_SYN_LUT=2124,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal acc_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal d_o_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal d_o_1_blk_n : STD_LOGIC;
    signal d_o_2_blk_n : STD_LOGIC;
    signal d_o_3_blk_n : STD_LOGIC;
    signal temp_fu_485_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal temp_1_fu_575_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal temp_2_fu_665_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal temp_3_fu_755_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state5 : BOOLEAN;
    signal temp_4_fu_845_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state6 : BOOLEAN;
    signal temp_5_fu_935_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state7 : BOOLEAN;
    signal temp_6_fu_1025_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state8 : BOOLEAN;
    signal temp_7_fu_1115_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state9 : BOOLEAN;
    signal add_ln69_fu_426_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_1_fu_516_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_2_fu_606_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_3_fu_696_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_4_fu_786_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_5_fu_876_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_6_fu_966_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_7_fu_1056_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_8_fu_437_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_9_fu_527_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_10_fu_617_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_11_fu_707_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_12_fu_797_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_13_fu_887_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_14_fu_977_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_15_fu_1067_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_16_fu_448_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_17_fu_538_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_18_fu_628_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_19_fu_718_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_20_fu_808_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_21_fu_898_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_22_fu_988_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_23_fu_1078_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_24_fu_497_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_25_fu_587_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_26_fu_677_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_27_fu_767_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_28_fu_857_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_29_fu_947_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_30_fu_1037_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_31_fu_1127_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_fu_418_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_fu_426_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_fu_422_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_fu_433_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_8_fu_437_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_8_fu_444_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_16_fu_448_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_8_fu_455_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_fu_418_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln69_8_fu_444_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_8_fu_455_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_1_fu_465_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_9_fu_471_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_fu_433_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_2_fu_475_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_10_fu_481_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_fu_459_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln69_24_fu_497_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_1_fu_508_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_1_fu_516_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_1_fu_512_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_1_fu_523_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_9_fu_527_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_9_fu_534_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_17_fu_538_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_11_fu_545_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_1_fu_508_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln69_9_fu_534_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_11_fu_545_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_5_fu_555_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_12_fu_561_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_1_fu_523_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_6_fu_565_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_13_fu_571_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_4_fu_549_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln69_25_fu_587_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_2_fu_598_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_2_fu_606_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_2_fu_602_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_2_fu_613_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_10_fu_617_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_10_fu_624_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_18_fu_628_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_14_fu_635_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_2_fu_598_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln69_10_fu_624_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_14_fu_635_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_9_fu_645_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_15_fu_651_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_2_fu_613_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_10_fu_655_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_16_fu_661_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_8_fu_639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln69_26_fu_677_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_3_fu_688_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_3_fu_696_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_3_fu_692_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_3_fu_703_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_11_fu_707_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_11_fu_714_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_19_fu_718_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_17_fu_725_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_3_fu_688_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln69_11_fu_714_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_17_fu_725_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_13_fu_735_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_18_fu_741_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_3_fu_703_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_14_fu_745_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_19_fu_751_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_12_fu_729_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln69_27_fu_767_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_4_fu_778_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_4_fu_786_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_4_fu_782_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_4_fu_793_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_12_fu_797_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_12_fu_804_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_20_fu_808_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_20_fu_815_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_4_fu_778_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln69_12_fu_804_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_20_fu_815_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_17_fu_825_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_21_fu_831_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_4_fu_793_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_18_fu_835_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_22_fu_841_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_16_fu_819_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln69_28_fu_857_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_5_fu_868_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_5_fu_876_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_5_fu_872_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_5_fu_883_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_13_fu_887_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_13_fu_894_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_21_fu_898_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_23_fu_905_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_5_fu_868_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln69_13_fu_894_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_23_fu_905_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_21_fu_915_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_24_fu_921_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_5_fu_883_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_22_fu_925_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_25_fu_931_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_20_fu_909_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln69_29_fu_947_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_6_fu_958_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_6_fu_966_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_6_fu_962_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_6_fu_973_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_14_fu_977_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_14_fu_984_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_22_fu_988_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_26_fu_995_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_6_fu_958_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln69_14_fu_984_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_26_fu_995_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_25_fu_1005_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_27_fu_1011_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_6_fu_973_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_26_fu_1015_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_28_fu_1021_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_24_fu_999_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln69_30_fu_1037_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_7_fu_1048_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_7_fu_1056_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_7_fu_1052_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_7_fu_1063_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_15_fu_1067_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_15_fu_1074_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_23_fu_1078_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_29_fu_1085_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_7_fu_1048_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln69_15_fu_1074_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_29_fu_1085_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_29_fu_1095_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_30_fu_1101_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_7_fu_1063_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_30_fu_1105_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_31_fu_1111_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_28_fu_1089_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln69_31_fu_1127_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_condition_213 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                acc_0 <= temp_fu_485_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                acc_1 <= temp_1_fu_575_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                acc_2 <= temp_2_fu_665_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                acc_3 <= temp_3_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                acc_4 <= temp_4_fu_845_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                acc_5 <= temp_5_fu_935_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                acc_6 <= temp_6_fu_1025_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                acc_7 <= temp_7_fu_1115_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln67_10_fu_655_p2 <= std_logic_vector(signed(sext_ln67_15_fu_651_p1) + signed(sext_ln69_2_fu_613_p1));
    add_ln67_12_fu_729_p2 <= std_logic_vector(unsigned(acc_3) + unsigned(sext_ln67_3_fu_688_p1));
    add_ln67_13_fu_735_p2 <= std_logic_vector(signed(sext_ln69_11_fu_714_p1) + signed(sext_ln67_17_fu_725_p1));
    add_ln67_14_fu_745_p2 <= std_logic_vector(signed(sext_ln67_18_fu_741_p1) + signed(sext_ln69_3_fu_703_p1));
    add_ln67_16_fu_819_p2 <= std_logic_vector(unsigned(acc_4) + unsigned(sext_ln67_4_fu_778_p1));
    add_ln67_17_fu_825_p2 <= std_logic_vector(signed(sext_ln69_12_fu_804_p1) + signed(sext_ln67_20_fu_815_p1));
    add_ln67_18_fu_835_p2 <= std_logic_vector(signed(sext_ln67_21_fu_831_p1) + signed(sext_ln69_4_fu_793_p1));
    add_ln67_1_fu_465_p2 <= std_logic_vector(signed(sext_ln69_8_fu_444_p1) + signed(sext_ln67_8_fu_455_p1));
    add_ln67_20_fu_909_p2 <= std_logic_vector(unsigned(acc_5) + unsigned(sext_ln67_5_fu_868_p1));
    add_ln67_21_fu_915_p2 <= std_logic_vector(signed(sext_ln69_13_fu_894_p1) + signed(sext_ln67_23_fu_905_p1));
    add_ln67_22_fu_925_p2 <= std_logic_vector(signed(sext_ln67_24_fu_921_p1) + signed(sext_ln69_5_fu_883_p1));
    add_ln67_24_fu_999_p2 <= std_logic_vector(unsigned(acc_6) + unsigned(sext_ln67_6_fu_958_p1));
    add_ln67_25_fu_1005_p2 <= std_logic_vector(signed(sext_ln69_14_fu_984_p1) + signed(sext_ln67_26_fu_995_p1));
    add_ln67_26_fu_1015_p2 <= std_logic_vector(signed(sext_ln67_27_fu_1011_p1) + signed(sext_ln69_6_fu_973_p1));
    add_ln67_28_fu_1089_p2 <= std_logic_vector(unsigned(acc_7) + unsigned(sext_ln67_7_fu_1048_p1));
    add_ln67_29_fu_1095_p2 <= std_logic_vector(signed(sext_ln69_15_fu_1074_p1) + signed(sext_ln67_29_fu_1085_p1));
    add_ln67_2_fu_475_p2 <= std_logic_vector(signed(sext_ln67_9_fu_471_p1) + signed(sext_ln69_fu_433_p1));
    add_ln67_30_fu_1105_p2 <= std_logic_vector(signed(sext_ln67_30_fu_1101_p1) + signed(sext_ln69_7_fu_1063_p1));
    add_ln67_4_fu_549_p2 <= std_logic_vector(unsigned(acc_1) + unsigned(sext_ln67_1_fu_508_p1));
    add_ln67_5_fu_555_p2 <= std_logic_vector(signed(sext_ln69_9_fu_534_p1) + signed(sext_ln67_11_fu_545_p1));
    add_ln67_6_fu_565_p2 <= std_logic_vector(signed(sext_ln67_12_fu_561_p1) + signed(sext_ln69_1_fu_523_p1));
    add_ln67_8_fu_639_p2 <= std_logic_vector(unsigned(acc_2) + unsigned(sext_ln67_2_fu_598_p1));
    add_ln67_9_fu_645_p2 <= std_logic_vector(signed(sext_ln69_10_fu_624_p1) + signed(sext_ln67_14_fu_635_p1));
    add_ln67_fu_459_p2 <= std_logic_vector(unsigned(acc_0) + unsigned(sext_ln67_fu_418_p1));
    add_ln69_10_fu_617_p0 <= d_i_0_q0;
    add_ln69_10_fu_617_p2 <= std_logic_vector(signed(add_ln69_10_fu_617_p0) + signed(add_ln69_2_fu_606_p2));
    add_ln69_11_fu_707_p0 <= d_i_0_q0;
    add_ln69_11_fu_707_p2 <= std_logic_vector(signed(add_ln69_11_fu_707_p0) + signed(add_ln69_3_fu_696_p2));
    add_ln69_12_fu_797_p0 <= d_i_0_q0;
    add_ln69_12_fu_797_p2 <= std_logic_vector(signed(add_ln69_12_fu_797_p0) + signed(add_ln69_4_fu_786_p2));
    add_ln69_13_fu_887_p0 <= d_i_0_q0;
    add_ln69_13_fu_887_p2 <= std_logic_vector(signed(add_ln69_13_fu_887_p0) + signed(add_ln69_5_fu_876_p2));
    add_ln69_14_fu_977_p0 <= d_i_0_q0;
    add_ln69_14_fu_977_p2 <= std_logic_vector(signed(add_ln69_14_fu_977_p0) + signed(add_ln69_6_fu_966_p2));
    add_ln69_15_fu_1067_p0 <= d_i_0_q0;
    add_ln69_15_fu_1067_p2 <= std_logic_vector(signed(add_ln69_15_fu_1067_p0) + signed(add_ln69_7_fu_1056_p2));
    add_ln69_16_fu_448_p0 <= d_i_1_q1;
    add_ln69_16_fu_448_p2 <= std_logic_vector(signed(add_ln69_16_fu_448_p0) + signed(add_ln69_8_fu_437_p2));
    add_ln69_17_fu_538_p0 <= d_i_1_q1;
    add_ln69_17_fu_538_p2 <= std_logic_vector(signed(add_ln69_17_fu_538_p0) + signed(add_ln69_9_fu_527_p2));
    add_ln69_18_fu_628_p0 <= d_i_1_q1;
    add_ln69_18_fu_628_p2 <= std_logic_vector(signed(add_ln69_18_fu_628_p0) + signed(add_ln69_10_fu_617_p2));
    add_ln69_19_fu_718_p0 <= d_i_1_q1;
    add_ln69_19_fu_718_p2 <= std_logic_vector(signed(add_ln69_19_fu_718_p0) + signed(add_ln69_11_fu_707_p2));
    add_ln69_1_fu_516_p0 <= d_i_0_q1;
    add_ln69_1_fu_516_p2 <= std_logic_vector(signed(add_ln69_1_fu_516_p0) + signed(trunc_ln67_1_fu_512_p1));
    add_ln69_20_fu_808_p0 <= d_i_1_q1;
    add_ln69_20_fu_808_p2 <= std_logic_vector(signed(add_ln69_20_fu_808_p0) + signed(add_ln69_12_fu_797_p2));
    add_ln69_21_fu_898_p0 <= d_i_1_q1;
    add_ln69_21_fu_898_p2 <= std_logic_vector(signed(add_ln69_21_fu_898_p0) + signed(add_ln69_13_fu_887_p2));
    add_ln69_22_fu_988_p0 <= d_i_1_q1;
    add_ln69_22_fu_988_p2 <= std_logic_vector(signed(add_ln69_22_fu_988_p0) + signed(add_ln69_14_fu_977_p2));
    add_ln69_23_fu_1078_p0 <= d_i_1_q1;
    add_ln69_23_fu_1078_p2 <= std_logic_vector(signed(add_ln69_23_fu_1078_p0) + signed(add_ln69_15_fu_1067_p2));
    add_ln69_24_fu_497_p0 <= d_i_1_q0;
    add_ln69_24_fu_497_p2 <= std_logic_vector(signed(add_ln69_24_fu_497_p0) + signed(add_ln69_16_fu_448_p2));
    add_ln69_25_fu_587_p0 <= d_i_1_q0;
    add_ln69_25_fu_587_p2 <= std_logic_vector(signed(add_ln69_25_fu_587_p0) + signed(add_ln69_17_fu_538_p2));
    add_ln69_26_fu_677_p0 <= d_i_1_q0;
    add_ln69_26_fu_677_p2 <= std_logic_vector(signed(add_ln69_26_fu_677_p0) + signed(add_ln69_18_fu_628_p2));
    add_ln69_27_fu_767_p0 <= d_i_1_q0;
    add_ln69_27_fu_767_p2 <= std_logic_vector(signed(add_ln69_27_fu_767_p0) + signed(add_ln69_19_fu_718_p2));
    add_ln69_28_fu_857_p0 <= d_i_1_q0;
    add_ln69_28_fu_857_p2 <= std_logic_vector(signed(add_ln69_28_fu_857_p0) + signed(add_ln69_20_fu_808_p2));
    add_ln69_29_fu_947_p0 <= d_i_1_q0;
    add_ln69_29_fu_947_p2 <= std_logic_vector(signed(add_ln69_29_fu_947_p0) + signed(add_ln69_21_fu_898_p2));
    add_ln69_2_fu_606_p0 <= d_i_0_q1;
    add_ln69_2_fu_606_p2 <= std_logic_vector(signed(add_ln69_2_fu_606_p0) + signed(trunc_ln67_2_fu_602_p1));
    add_ln69_30_fu_1037_p0 <= d_i_1_q0;
    add_ln69_30_fu_1037_p2 <= std_logic_vector(signed(add_ln69_30_fu_1037_p0) + signed(add_ln69_22_fu_988_p2));
    add_ln69_31_fu_1127_p0 <= d_i_1_q0;
    add_ln69_31_fu_1127_p2 <= std_logic_vector(signed(add_ln69_31_fu_1127_p0) + signed(add_ln69_23_fu_1078_p2));
    add_ln69_3_fu_696_p0 <= d_i_0_q1;
    add_ln69_3_fu_696_p2 <= std_logic_vector(signed(add_ln69_3_fu_696_p0) + signed(trunc_ln67_3_fu_692_p1));
    add_ln69_4_fu_786_p0 <= d_i_0_q1;
    add_ln69_4_fu_786_p2 <= std_logic_vector(signed(add_ln69_4_fu_786_p0) + signed(trunc_ln67_4_fu_782_p1));
    add_ln69_5_fu_876_p0 <= d_i_0_q1;
    add_ln69_5_fu_876_p2 <= std_logic_vector(signed(add_ln69_5_fu_876_p0) + signed(trunc_ln67_5_fu_872_p1));
    add_ln69_6_fu_966_p0 <= d_i_0_q1;
    add_ln69_6_fu_966_p2 <= std_logic_vector(signed(add_ln69_6_fu_966_p0) + signed(trunc_ln67_6_fu_962_p1));
    add_ln69_7_fu_1056_p0 <= d_i_0_q1;
    add_ln69_7_fu_1056_p2 <= std_logic_vector(signed(add_ln69_7_fu_1056_p0) + signed(trunc_ln67_7_fu_1052_p1));
    add_ln69_8_fu_437_p0 <= d_i_0_q0;
    add_ln69_8_fu_437_p2 <= std_logic_vector(signed(add_ln69_8_fu_437_p0) + signed(add_ln69_fu_426_p2));
    add_ln69_9_fu_527_p0 <= d_i_0_q0;
    add_ln69_9_fu_527_p2 <= std_logic_vector(signed(add_ln69_9_fu_527_p0) + signed(add_ln69_1_fu_516_p2));
    add_ln69_fu_426_p0 <= d_i_0_q1;
    add_ln69_fu_426_p2 <= std_logic_vector(signed(add_ln69_fu_426_p0) + signed(trunc_ln67_fu_422_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state2_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state2 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state3 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state4 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state5 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state6 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state7 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state8 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state9_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state9 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_condition_213_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_condition_213 <= not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state9)
    begin
        if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_logic_0;

    ap_ready_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state9)
    begin
        if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    d_i_0_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_0_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_0_address0 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_0_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_0_address0 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_0_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_0_address0 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_0_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_0_address0 <= ap_const_lv64_8(4 - 1 downto 0);
        else 
            d_i_0_address0 <= "XXXX";
        end if; 
    end process;


    d_i_0_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_0_address1 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_0_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_0_address1 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_0_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_0_address1 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_0_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_0_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_0_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            d_i_0_address1 <= "XXXX";
        end if; 
    end process;


    d_i_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_i_0_ce0 <= ap_const_logic_1;
        else 
            d_i_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_0_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_i_0_ce1 <= ap_const_logic_1;
        else 
            d_i_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_1_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_1_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_1_address0 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_1_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_1_address0 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_1_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_1_address0 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_1_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_1_address0 <= ap_const_lv64_8(4 - 1 downto 0);
        else 
            d_i_1_address0 <= "XXXX";
        end if; 
    end process;


    d_i_1_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_1_address1 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_1_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_1_address1 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_1_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_1_address1 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_1_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_1_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_1_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            d_i_1_address1 <= "XXXX";
        end if; 
    end process;


    d_i_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_i_1_ce0 <= ap_const_logic_1;
        else 
            d_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_1_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_i_1_ce1 <= ap_const_logic_1;
        else 
            d_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_0_blk_n_assign_proc : process(d_o_0_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            d_o_0_blk_n <= d_o_0_full_n;
        else 
            d_o_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_0_din_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, add_ln69_fu_426_p2, add_ln69_1_fu_516_p2, add_ln69_2_fu_606_p2, add_ln69_3_fu_696_p2, add_ln69_4_fu_786_p2, add_ln69_5_fu_876_p2, add_ln69_6_fu_966_p2, add_ln69_7_fu_1056_p2, ap_condition_213)
    begin
        if ((ap_const_boolean_1 = ap_condition_213)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_0_din <= add_ln69_7_fu_1056_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_0_din <= add_ln69_6_fu_966_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_0_din <= add_ln69_5_fu_876_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_0_din <= add_ln69_4_fu_786_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_0_din <= add_ln69_3_fu_696_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_0_din <= add_ln69_2_fu_606_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                d_o_0_din <= add_ln69_1_fu_516_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                d_o_0_din <= add_ln69_fu_426_p2;
            else 
                d_o_0_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_0_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_0_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_o_0_write <= ap_const_logic_1;
        else 
            d_o_0_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_1_blk_n_assign_proc : process(d_o_1_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            d_o_1_blk_n <= d_o_1_full_n;
        else 
            d_o_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_1_din_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, add_ln69_8_fu_437_p2, add_ln69_9_fu_527_p2, add_ln69_10_fu_617_p2, add_ln69_11_fu_707_p2, add_ln69_12_fu_797_p2, add_ln69_13_fu_887_p2, add_ln69_14_fu_977_p2, add_ln69_15_fu_1067_p2, ap_condition_213)
    begin
        if ((ap_const_boolean_1 = ap_condition_213)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_1_din <= add_ln69_15_fu_1067_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_1_din <= add_ln69_14_fu_977_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_1_din <= add_ln69_13_fu_887_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_1_din <= add_ln69_12_fu_797_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_1_din <= add_ln69_11_fu_707_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_1_din <= add_ln69_10_fu_617_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                d_o_1_din <= add_ln69_9_fu_527_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                d_o_1_din <= add_ln69_8_fu_437_p2;
            else 
                d_o_1_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_1_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_1_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_o_1_write <= ap_const_logic_1;
        else 
            d_o_1_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_2_blk_n_assign_proc : process(d_o_2_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            d_o_2_blk_n <= d_o_2_full_n;
        else 
            d_o_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_2_din_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, add_ln69_16_fu_448_p2, add_ln69_17_fu_538_p2, add_ln69_18_fu_628_p2, add_ln69_19_fu_718_p2, add_ln69_20_fu_808_p2, add_ln69_21_fu_898_p2, add_ln69_22_fu_988_p2, add_ln69_23_fu_1078_p2, ap_condition_213)
    begin
        if ((ap_const_boolean_1 = ap_condition_213)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_2_din <= add_ln69_23_fu_1078_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_2_din <= add_ln69_22_fu_988_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_2_din <= add_ln69_21_fu_898_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_2_din <= add_ln69_20_fu_808_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_2_din <= add_ln69_19_fu_718_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_2_din <= add_ln69_18_fu_628_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                d_o_2_din <= add_ln69_17_fu_538_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                d_o_2_din <= add_ln69_16_fu_448_p2;
            else 
                d_o_2_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_2_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_2_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_o_2_write <= ap_const_logic_1;
        else 
            d_o_2_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_3_blk_n_assign_proc : process(d_o_3_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            d_o_3_blk_n <= d_o_3_full_n;
        else 
            d_o_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_3_din_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, add_ln69_24_fu_497_p2, add_ln69_25_fu_587_p2, add_ln69_26_fu_677_p2, add_ln69_27_fu_767_p2, add_ln69_28_fu_857_p2, add_ln69_29_fu_947_p2, add_ln69_30_fu_1037_p2, add_ln69_31_fu_1127_p2, ap_condition_213)
    begin
        if ((ap_const_boolean_1 = ap_condition_213)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_3_din <= add_ln69_31_fu_1127_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_3_din <= add_ln69_30_fu_1037_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_3_din <= add_ln69_29_fu_947_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_3_din <= add_ln69_28_fu_857_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_3_din <= add_ln69_27_fu_767_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_3_din <= add_ln69_26_fu_677_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                d_o_3_din <= add_ln69_25_fu_587_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                d_o_3_din <= add_ln69_24_fu_497_p2;
            else 
                d_o_3_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_3_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_3_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            d_o_3_write <= ap_const_logic_1;
        else 
            d_o_3_write <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln67_10_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_2_fu_475_p2),32));

    sext_ln67_11_fu_545_p0 <= d_i_1_q0;
        sext_ln67_11_fu_545_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_11_fu_545_p0),17));

        sext_ln67_12_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_5_fu_555_p2),18));

        sext_ln67_13_fu_571_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_6_fu_565_p2),32));

    sext_ln67_14_fu_635_p0 <= d_i_1_q0;
        sext_ln67_14_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_14_fu_635_p0),17));

        sext_ln67_15_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_9_fu_645_p2),18));

        sext_ln67_16_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_10_fu_655_p2),32));

    sext_ln67_17_fu_725_p0 <= d_i_1_q0;
        sext_ln67_17_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_17_fu_725_p0),17));

        sext_ln67_18_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_13_fu_735_p2),18));

        sext_ln67_19_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_14_fu_745_p2),32));

    sext_ln67_1_fu_508_p0 <= d_i_0_q1;
        sext_ln67_1_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_1_fu_508_p0),32));

    sext_ln67_20_fu_815_p0 <= d_i_1_q0;
        sext_ln67_20_fu_815_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_20_fu_815_p0),17));

        sext_ln67_21_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_17_fu_825_p2),18));

        sext_ln67_22_fu_841_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_18_fu_835_p2),32));

    sext_ln67_23_fu_905_p0 <= d_i_1_q0;
        sext_ln67_23_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_23_fu_905_p0),17));

        sext_ln67_24_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_21_fu_915_p2),18));

        sext_ln67_25_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_22_fu_925_p2),32));

    sext_ln67_26_fu_995_p0 <= d_i_1_q0;
        sext_ln67_26_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_26_fu_995_p0),17));

        sext_ln67_27_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_25_fu_1005_p2),18));

        sext_ln67_28_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_26_fu_1015_p2),32));

    sext_ln67_29_fu_1085_p0 <= d_i_1_q0;
        sext_ln67_29_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_29_fu_1085_p0),17));

    sext_ln67_2_fu_598_p0 <= d_i_0_q1;
        sext_ln67_2_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_2_fu_598_p0),32));

        sext_ln67_30_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_29_fu_1095_p2),18));

        sext_ln67_31_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_30_fu_1105_p2),32));

    sext_ln67_3_fu_688_p0 <= d_i_0_q1;
        sext_ln67_3_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_3_fu_688_p0),32));

    sext_ln67_4_fu_778_p0 <= d_i_0_q1;
        sext_ln67_4_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_4_fu_778_p0),32));

    sext_ln67_5_fu_868_p0 <= d_i_0_q1;
        sext_ln67_5_fu_868_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_5_fu_868_p0),32));

    sext_ln67_6_fu_958_p0 <= d_i_0_q1;
        sext_ln67_6_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_6_fu_958_p0),32));

    sext_ln67_7_fu_1048_p0 <= d_i_0_q1;
        sext_ln67_7_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_7_fu_1048_p0),32));

    sext_ln67_8_fu_455_p0 <= d_i_1_q0;
        sext_ln67_8_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_8_fu_455_p0),17));

        sext_ln67_9_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_1_fu_465_p2),18));

    sext_ln67_fu_418_p0 <= d_i_0_q1;
        sext_ln67_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_fu_418_p0),32));

    sext_ln69_10_fu_624_p0 <= d_i_1_q1;
        sext_ln69_10_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_10_fu_624_p0),17));

    sext_ln69_11_fu_714_p0 <= d_i_1_q1;
        sext_ln69_11_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_11_fu_714_p0),17));

    sext_ln69_12_fu_804_p0 <= d_i_1_q1;
        sext_ln69_12_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_12_fu_804_p0),17));

    sext_ln69_13_fu_894_p0 <= d_i_1_q1;
        sext_ln69_13_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_13_fu_894_p0),17));

    sext_ln69_14_fu_984_p0 <= d_i_1_q1;
        sext_ln69_14_fu_984_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_14_fu_984_p0),17));

    sext_ln69_15_fu_1074_p0 <= d_i_1_q1;
        sext_ln69_15_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_15_fu_1074_p0),17));

    sext_ln69_1_fu_523_p0 <= d_i_0_q0;
        sext_ln69_1_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_1_fu_523_p0),18));

    sext_ln69_2_fu_613_p0 <= d_i_0_q0;
        sext_ln69_2_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_2_fu_613_p0),18));

    sext_ln69_3_fu_703_p0 <= d_i_0_q0;
        sext_ln69_3_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_3_fu_703_p0),18));

    sext_ln69_4_fu_793_p0 <= d_i_0_q0;
        sext_ln69_4_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_4_fu_793_p0),18));

    sext_ln69_5_fu_883_p0 <= d_i_0_q0;
        sext_ln69_5_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_5_fu_883_p0),18));

    sext_ln69_6_fu_973_p0 <= d_i_0_q0;
        sext_ln69_6_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_6_fu_973_p0),18));

    sext_ln69_7_fu_1063_p0 <= d_i_0_q0;
        sext_ln69_7_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_7_fu_1063_p0),18));

    sext_ln69_8_fu_444_p0 <= d_i_1_q1;
        sext_ln69_8_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_8_fu_444_p0),17));

    sext_ln69_9_fu_534_p0 <= d_i_1_q1;
        sext_ln69_9_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_9_fu_534_p0),17));

    sext_ln69_fu_433_p0 <= d_i_0_q0;
        sext_ln69_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln69_fu_433_p0),18));

    temp_1_fu_575_p2 <= std_logic_vector(signed(sext_ln67_13_fu_571_p1) + signed(add_ln67_4_fu_549_p2));
    temp_2_fu_665_p2 <= std_logic_vector(signed(sext_ln67_16_fu_661_p1) + signed(add_ln67_8_fu_639_p2));
    temp_3_fu_755_p2 <= std_logic_vector(signed(sext_ln67_19_fu_751_p1) + signed(add_ln67_12_fu_729_p2));
    temp_4_fu_845_p2 <= std_logic_vector(signed(sext_ln67_22_fu_841_p1) + signed(add_ln67_16_fu_819_p2));
    temp_5_fu_935_p2 <= std_logic_vector(signed(sext_ln67_25_fu_931_p1) + signed(add_ln67_20_fu_909_p2));
    temp_6_fu_1025_p2 <= std_logic_vector(signed(sext_ln67_28_fu_1021_p1) + signed(add_ln67_24_fu_999_p2));
    temp_7_fu_1115_p2 <= std_logic_vector(signed(sext_ln67_31_fu_1111_p1) + signed(add_ln67_28_fu_1089_p2));
    temp_fu_485_p2 <= std_logic_vector(signed(sext_ln67_10_fu_481_p1) + signed(add_ln67_fu_459_p2));
    trunc_ln67_1_fu_512_p1 <= acc_1(16 - 1 downto 0);
    trunc_ln67_2_fu_602_p1 <= acc_2(16 - 1 downto 0);
    trunc_ln67_3_fu_692_p1 <= acc_3(16 - 1 downto 0);
    trunc_ln67_4_fu_782_p1 <= acc_4(16 - 1 downto 0);
    trunc_ln67_5_fu_872_p1 <= acc_5(16 - 1 downto 0);
    trunc_ln67_6_fu_962_p1 <= acc_6(16 - 1 downto 0);
    trunc_ln67_7_fu_1052_p1 <= acc_7(16 - 1 downto 0);
    trunc_ln67_fu_422_p1 <= acc_0(16 - 1 downto 0);
end behav;
