// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matrixmul_matrixmul,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.492000,HLS_SYN_LAT=10,HLS_SYN_TPT=5,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=632,HLS_SYN_LUT=560,HLS_VERSION=2021_2}" *)

module matrixmul (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_address0,
        a_ce0,
        a_q0,
        a_address1,
        a_ce1,
        a_q1,
        b_address0,
        b_ce0,
        b_q0,
        b_address1,
        b_ce1,
        b_q1,
        res_address0,
        res_ce0,
        res_we0,
        res_d0,
        res_address1,
        res_ce1,
        res_we1,
        res_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] a_address0;
output   a_ce0;
input  [23:0] a_q0;
output  [1:0] a_address1;
output   a_ce1;
input  [23:0] a_q1;
output  [1:0] b_address0;
output   b_ce0;
input  [23:0] b_q0;
output  [1:0] b_address1;
output   b_ce1;
input  [23:0] b_q1;
output  [3:0] res_address0;
output   res_ce0;
output   res_we0;
output  [15:0] res_d0;
output  [3:0] res_address1;
output   res_ce1;
output   res_we1;
output  [15:0] res_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] a_address0;
reg a_ce0;
reg a_ce1;
reg[1:0] b_address0;
reg b_ce0;
reg b_ce1;
reg[3:0] res_address0;
reg res_ce0;
reg res_we0;
reg[15:0] res_d0;
reg[3:0] res_address1;
reg res_ce1;
reg res_we1;
reg[15:0] res_d1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire  signed [15:0] sext_ln60_fu_262_p1;
reg  signed [15:0] sext_ln60_reg_566;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire  signed [15:0] sext_ln60_1_fu_266_p1;
reg  signed [15:0] sext_ln60_1_reg_571;
wire   [15:0] mul_ln60_fu_270_p2;
reg  signed [15:0] mul_ln60_reg_577;
reg   [7:0] tmp_2_reg_582;
reg  signed [7:0] tmp_3_reg_587;
wire  signed [15:0] sext_ln60_4_fu_316_p1;
reg  signed [15:0] sext_ln60_4_reg_592;
wire  signed [15:0] sext_ln60_5_fu_320_p1;
reg  signed [15:0] sext_ln60_5_reg_599;
wire  signed [15:0] sext_ln60_6_fu_328_p1;
reg  signed [15:0] sext_ln60_6_reg_606;
wire   [15:0] mul_ln60_3_fu_332_p2;
reg  signed [15:0] mul_ln60_3_reg_612;
reg  signed [7:0] tmp_7_reg_617;
wire  signed [15:0] sext_ln60_8_fu_338_p1;
reg  signed [15:0] sext_ln60_8_reg_622;
wire   [7:0] trunc_ln60_4_fu_342_p1;
reg  signed [7:0] trunc_ln60_4_reg_634;
reg   [7:0] tmp_6_reg_639;
wire  signed [15:0] sext_ln60_14_fu_346_p1;
reg  signed [15:0] sext_ln60_14_reg_644;
wire  signed [15:0] sext_ln60_9_fu_354_p1;
reg  signed [15:0] sext_ln60_9_reg_656;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [15:0] mul_ln60_6_fu_358_p2;
reg  signed [15:0] mul_ln60_6_reg_662;
reg  signed [7:0] tmp_s_reg_667;
wire  signed [15:0] sext_ln60_11_fu_363_p1;
reg  signed [15:0] sext_ln60_11_reg_672;
wire  signed [15:0] sext_ln60_12_fu_367_p1;
reg  signed [15:0] sext_ln60_12_reg_679;
wire   [15:0] mul_ln60_9_fu_370_p2;
reg  signed [15:0] mul_ln60_9_reg_685;
wire   [7:0] trunc_ln60_5_fu_375_p1;
reg   [7:0] trunc_ln60_5_reg_690;
reg  signed [7:0] tmp_10_reg_695;
wire  signed [15:0] sext_ln60_17_fu_379_p1;
reg  signed [15:0] sext_ln60_17_reg_700;
wire  signed [15:0] sext_ln60_2_fu_383_p1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire  signed [15:0] sext_ln60_3_fu_386_p1;
reg  signed [15:0] sext_ln60_3_reg_714;
wire  signed [15:0] sext_ln60_7_fu_389_p1;
reg  signed [15:0] sext_ln60_7_reg_721;
wire  signed [15:0] sext_ln60_10_fu_392_p1;
reg  signed [15:0] sext_ln60_10_reg_728;
wire  signed [15:0] mul_ln60_12_fu_395_p2;
wire   [15:0] mul_ln60_15_fu_399_p2;
reg  signed [15:0] mul_ln60_15_reg_740;
wire  signed [15:0] grp_fu_426_p3;
reg   [15:0] add_ln60_reg_745;
wire    ap_block_pp0_stage4_11001;
wire  signed [15:0] grp_fu_433_p3;
reg   [15:0] add_ln60_2_reg_750;
wire  signed [15:0] sext_ln60_13_fu_403_p1;
wire  signed [15:0] grp_fu_440_p3;
reg   [15:0] add_ln60_6_reg_762;
wire  signed [15:0] grp_fu_447_p3;
reg   [15:0] add_ln60_8_reg_767;
wire  signed [15:0] sext_ln60_15_fu_406_p1;
reg  signed [15:0] sext_ln60_15_reg_772;
wire  signed [15:0] mul_ln60_18_fu_409_p2;
wire  signed [15:0] sext_ln60_16_fu_414_p1;
reg  signed [15:0] sext_ln60_16_reg_782;
wire  signed [15:0] mul_ln60_21_fu_417_p2;
wire   [15:0] grp_fu_455_p3;
wire  signed [15:0] grp_fu_461_p3;
reg   [15:0] add_ln60_10_reg_799;
wire  signed [15:0] grp_fu_467_p3;
reg   [15:0] add_ln60_12_reg_804;
wire  signed [15:0] grp_fu_474_p3;
reg   [15:0] add_ln60_14_reg_809;
wire  signed [15:0] mul_ln60_24_fu_422_p2;
wire   [15:0] grp_fu_497_p3;
reg  signed [15:0] add_ln60_5_reg_819;
wire  signed [15:0] grp_fu_505_p3;
reg   [15:0] add_ln60_16_reg_824;
wire   [15:0] grp_fu_518_p3;
reg  signed [15:0] add_ln60_9_reg_829;
wire   [15:0] grp_fu_524_p3;
reg  signed [15:0] add_ln60_11_reg_834;
wire   [15:0] grp_fu_530_p3;
reg  signed [15:0] add_ln60_13_reg_839;
wire   [15:0] grp_fu_536_p3;
reg  signed [15:0] add_ln60_15_reg_844;
wire   [15:0] grp_fu_541_p3;
reg  signed [15:0] add_ln60_17_reg_849;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire   [15:0] grp_fu_481_p3;
wire   [15:0] grp_fu_489_p3;
wire   [15:0] grp_fu_511_p3;
wire   [7:0] trunc_ln60_fu_254_p1;
wire  signed [7:0] trunc_ln60_1_fu_258_p1;
wire  signed [7:0] mul_ln60_fu_270_p1;
wire   [7:0] tmp_4_fu_296_p4;
wire   [7:0] tmp_5_fu_306_p4;
wire  signed [7:0] trunc_ln60_2_fu_324_p1;
wire  signed [7:0] mul_ln60_3_fu_332_p1;
wire   [7:0] grp_fu_224_p4;
wire   [7:0] grp_fu_244_p4;
wire  signed [7:0] trunc_ln60_3_fu_350_p1;
wire  signed [7:0] mul_ln60_6_fu_358_p1;
wire  signed [7:0] mul_ln60_9_fu_370_p1;
wire  signed [7:0] mul_ln60_12_fu_395_p0;
wire  signed [7:0] mul_ln60_12_fu_395_p1;
wire  signed [7:0] mul_ln60_15_fu_399_p0;
wire  signed [7:0] mul_ln60_15_fu_399_p1;
wire  signed [7:0] mul_ln60_18_fu_409_p0;
wire  signed [7:0] mul_ln60_18_fu_409_p1;
wire  signed [7:0] mul_ln60_21_fu_417_p0;
wire  signed [7:0] mul_ln60_21_fu_417_p1;
wire  signed [7:0] mul_ln60_24_fu_422_p0;
wire  signed [7:0] mul_ln60_24_fu_422_p1;
wire  signed [7:0] grp_fu_426_p0;
wire  signed [7:0] grp_fu_426_p1;
wire  signed [7:0] grp_fu_433_p0;
wire  signed [7:0] grp_fu_433_p1;
wire  signed [7:0] grp_fu_440_p0;
wire  signed [7:0] grp_fu_440_p1;
wire  signed [7:0] grp_fu_447_p0;
wire  signed [7:0] grp_fu_447_p1;
wire  signed [7:0] grp_fu_455_p0;
wire  signed [7:0] grp_fu_455_p1;
wire  signed [7:0] grp_fu_461_p0;
wire  signed [7:0] grp_fu_461_p1;
wire  signed [7:0] grp_fu_467_p0;
wire  signed [7:0] grp_fu_467_p1;
wire  signed [7:0] grp_fu_474_p0;
wire  signed [7:0] grp_fu_474_p1;
wire  signed [7:0] grp_fu_481_p1;
wire  signed [7:0] grp_fu_489_p1;
wire  signed [7:0] grp_fu_497_p1;
wire  signed [7:0] grp_fu_505_p0;
wire  signed [7:0] grp_fu_505_p1;
wire  signed [7:0] grp_fu_511_p0;
wire  signed [7:0] grp_fu_511_p1;
wire  signed [7:0] grp_fu_518_p0;
wire  signed [7:0] grp_fu_518_p1;
wire  signed [7:0] grp_fu_524_p0;
wire  signed [7:0] grp_fu_524_p1;
wire  signed [7:0] grp_fu_530_p1;
wire  signed [7:0] grp_fu_536_p0;
wire  signed [7:0] grp_fu_536_p1;
wire  signed [7:0] grp_fu_541_p0;
wire  signed [7:0] grp_fu_541_p1;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U1(
    .din0(trunc_ln60_1_fu_258_p1),
    .din1(mul_ln60_fu_270_p1),
    .dout(mul_ln60_fu_270_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U2(
    .din0(trunc_ln60_2_fu_324_p1),
    .din1(mul_ln60_3_fu_332_p1),
    .dout(mul_ln60_3_fu_332_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U3(
    .din0(trunc_ln60_3_fu_350_p1),
    .din1(mul_ln60_6_fu_358_p1),
    .dout(mul_ln60_6_fu_358_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U4(
    .din0(trunc_ln60_4_reg_634),
    .din1(mul_ln60_9_fu_370_p1),
    .dout(mul_ln60_9_fu_370_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U5(
    .din0(mul_ln60_12_fu_395_p0),
    .din1(mul_ln60_12_fu_395_p1),
    .dout(mul_ln60_12_fu_395_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U6(
    .din0(mul_ln60_15_fu_399_p0),
    .din1(mul_ln60_15_fu_399_p1),
    .dout(mul_ln60_15_fu_399_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U7(
    .din0(mul_ln60_18_fu_409_p0),
    .din1(mul_ln60_18_fu_409_p1),
    .dout(mul_ln60_18_fu_409_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U8(
    .din0(mul_ln60_21_fu_417_p0),
    .din1(mul_ln60_21_fu_417_p1),
    .dout(mul_ln60_21_fu_417_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U9(
    .din0(mul_ln60_24_fu_422_p0),
    .din1(mul_ln60_24_fu_422_p1),
    .dout(mul_ln60_24_fu_422_p2)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_426_p0),
    .din1(grp_fu_426_p1),
    .din2(mul_ln60_reg_577),
    .ce(1'b1),
    .dout(grp_fu_426_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_433_p0),
    .din1(grp_fu_433_p1),
    .din2(mul_ln60_3_reg_612),
    .ce(1'b1),
    .dout(grp_fu_433_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_440_p0),
    .din1(grp_fu_440_p1),
    .din2(mul_ln60_9_reg_685),
    .ce(1'b1),
    .dout(grp_fu_440_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_447_p0),
    .din1(grp_fu_447_p1),
    .din2(mul_ln60_12_fu_395_p2),
    .ce(1'b1),
    .dout(grp_fu_447_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_455_p0),
    .din1(grp_fu_455_p1),
    .din2(mul_ln60_6_reg_662),
    .ce(1'b1),
    .dout(grp_fu_455_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_461_p0),
    .din1(grp_fu_461_p1),
    .din2(mul_ln60_15_reg_740),
    .ce(1'b1),
    .dout(grp_fu_461_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_467_p0),
    .din1(grp_fu_467_p1),
    .din2(mul_ln60_18_fu_409_p2),
    .ce(1'b1),
    .dout(grp_fu_467_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_474_p0),
    .din1(grp_fu_474_p1),
    .din2(mul_ln60_21_fu_417_p2),
    .ce(1'b1),
    .dout(grp_fu_474_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_reg_587),
    .din1(grp_fu_481_p1),
    .din2(add_ln60_reg_745),
    .ce(1'b1),
    .dout(grp_fu_481_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_reg_617),
    .din1(grp_fu_489_p1),
    .din2(add_ln60_2_reg_750),
    .ce(1'b1),
    .dout(grp_fu_489_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_667),
    .din1(grp_fu_497_p1),
    .din2(grp_fu_455_p3),
    .ce(1'b1),
    .dout(grp_fu_497_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_505_p0),
    .din1(grp_fu_505_p1),
    .din2(mul_ln60_24_fu_422_p2),
    .ce(1'b1),
    .dout(grp_fu_505_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_511_p0),
    .din1(grp_fu_511_p1),
    .din2(add_ln60_6_reg_762),
    .ce(1'b1),
    .dout(grp_fu_511_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_518_p0),
    .din1(grp_fu_518_p1),
    .din2(add_ln60_8_reg_767),
    .ce(1'b1),
    .dout(grp_fu_518_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_524_p0),
    .din1(grp_fu_524_p1),
    .din2(add_ln60_10_reg_799),
    .ce(1'b1),
    .dout(grp_fu_524_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_10_reg_695),
    .din1(grp_fu_530_p1),
    .din2(add_ln60_12_reg_804),
    .ce(1'b1),
    .dout(grp_fu_530_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_536_p0),
    .din1(grp_fu_536_p1),
    .din2(add_ln60_14_reg_809),
    .ce(1'b1),
    .dout(grp_fu_536_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_541_p0),
    .din1(grp_fu_541_p1),
    .din2(add_ln60_16_reg_824),
    .ce(1'b1),
    .dout(grp_fu_541_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        add_ln60_10_reg_799 <= grp_fu_461_p3;
        add_ln60_12_reg_804 <= grp_fu_467_p3;
        add_ln60_14_reg_809 <= grp_fu_474_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        add_ln60_11_reg_834 <= grp_fu_524_p3;
        add_ln60_13_reg_839 <= grp_fu_530_p3;
        add_ln60_9_reg_829 <= grp_fu_518_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        add_ln60_15_reg_844 <= grp_fu_536_p3;
        add_ln60_17_reg_849 <= grp_fu_541_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        add_ln60_16_reg_824 <= grp_fu_505_p3;
        add_ln60_5_reg_819 <= grp_fu_497_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln60_2_reg_750 <= grp_fu_433_p3;
        add_ln60_6_reg_762 <= grp_fu_440_p3;
        add_ln60_8_reg_767 <= grp_fu_447_p3;
        add_ln60_reg_745 <= grp_fu_426_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul_ln60_15_reg_740 <= mul_ln60_15_fu_399_p2;
        sext_ln60_10_reg_728 <= sext_ln60_10_fu_392_p1;
        sext_ln60_3_reg_714 <= sext_ln60_3_fu_386_p1;
        sext_ln60_7_reg_721 <= sext_ln60_7_fu_389_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul_ln60_3_reg_612 <= mul_ln60_3_fu_332_p2;
        mul_ln60_reg_577 <= mul_ln60_fu_270_p2;
        sext_ln60_14_reg_644 <= sext_ln60_14_fu_346_p1;
        sext_ln60_1_reg_571 <= sext_ln60_1_fu_266_p1;
        sext_ln60_4_reg_592 <= sext_ln60_4_fu_316_p1;
        sext_ln60_5_reg_599 <= sext_ln60_5_fu_320_p1;
        sext_ln60_6_reg_606 <= sext_ln60_6_fu_328_p1;
        sext_ln60_8_reg_622 <= sext_ln60_8_fu_338_p1;
        sext_ln60_reg_566 <= sext_ln60_fu_262_p1;
        tmp_2_reg_582 <= {{a_q1[15:8]}};
        tmp_3_reg_587 <= {{b_q1[15:8]}};
        trunc_ln60_4_reg_634 <= trunc_ln60_4_fu_342_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul_ln60_6_reg_662 <= mul_ln60_6_fu_358_p2;
        mul_ln60_9_reg_685 <= mul_ln60_9_fu_370_p2;
        sext_ln60_11_reg_672 <= sext_ln60_11_fu_363_p1;
        sext_ln60_12_reg_679 <= sext_ln60_12_fu_367_p1;
        sext_ln60_17_reg_700 <= sext_ln60_17_fu_379_p1;
        sext_ln60_9_reg_656 <= sext_ln60_9_fu_354_p1;
        trunc_ln60_5_reg_690 <= trunc_ln60_5_fu_375_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        sext_ln60_15_reg_772 <= sext_ln60_15_fu_406_p1;
        sext_ln60_16_reg_782 <= sext_ln60_16_fu_414_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_10_reg_695 <= {{a_q0[15:8]}};
        tmp_s_reg_667 <= {{b_q0[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_6_reg_639 <= {{a_q0[15:8]}};
        tmp_7_reg_617 <= {{b_q0[15:8]}};
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            a_address0 = 64'd2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            a_address0 = 64'd1;
        end else begin
            a_address0 = 'bx;
        end
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        a_ce1 = 1'b1;
    end else begin
        a_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            b_address0 = 64'd2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            b_address0 = 64'd1;
        end else begin
            b_address0 = 'bx;
        end
    end else begin
        b_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        b_ce0 = 1'b1;
    end else begin
        b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        b_ce1 = 1'b1;
    end else begin
        b_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_address0 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res_address0 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res_address0 = 64'd1;
    end else begin
        res_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            res_address1 = 64'd7;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            res_address1 = 64'd5;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            res_address1 = 64'd3;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            res_address1 = 64'd0;
        end else begin
            res_address1 = 'bx;
        end
    end else begin
        res_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res_ce0 = 1'b1;
    end else begin
        res_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res_ce1 = 1'b1;
    end else begin
        res_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_d0 = add_ln60_17_reg_849;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res_d0 = add_ln60_13_reg_839;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res_d0 = add_ln60_9_reg_829;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res_d0 = add_ln60_5_reg_819;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res_d0 = grp_fu_489_p3;
    end else begin
        res_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            res_d1 = add_ln60_15_reg_844;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            res_d1 = add_ln60_11_reg_834;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            res_d1 = grp_fu_511_p3;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            res_d1 = grp_fu_481_p3;
        end else begin
            res_d1 = 'bx;
        end
    end else begin
        res_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res_we0 = 1'b1;
    end else begin
        res_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res_we1 = 1'b1;
    end else begin
        res_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_idle_pp0_1to2 == 1'b1) & (ap_start == 1'b0)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_address1 = 64'd0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

assign b_address1 = 64'd0;

assign grp_fu_224_p4 = {{b_q0[23:16]}};

assign grp_fu_244_p4 = {{a_q0[23:16]}};

assign grp_fu_426_p0 = sext_ln60_5_fu_320_p1;

assign grp_fu_426_p1 = sext_ln60_4_fu_316_p1;

assign grp_fu_433_p0 = sext_ln60_8_fu_338_p1;

assign grp_fu_433_p1 = sext_ln60_4_fu_316_p1;

assign grp_fu_440_p0 = sext_ln60_14_fu_346_p1;

assign grp_fu_440_p1 = sext_ln60_5_fu_320_p1;

assign grp_fu_447_p0 = sext_ln60_14_fu_346_p1;

assign grp_fu_447_p1 = sext_ln60_8_fu_338_p1;

assign grp_fu_455_p0 = sext_ln60_11_fu_363_p1;

assign grp_fu_455_p1 = sext_ln60_4_reg_592;

assign grp_fu_461_p0 = sext_ln60_14_reg_644;

assign grp_fu_461_p1 = sext_ln60_11_fu_363_p1;

assign grp_fu_467_p0 = sext_ln60_17_fu_379_p1;

assign grp_fu_467_p1 = sext_ln60_5_reg_599;

assign grp_fu_474_p0 = sext_ln60_17_fu_379_p1;

assign grp_fu_474_p1 = sext_ln60_8_reg_622;

assign grp_fu_481_p1 = sext_ln60_2_fu_383_p1;

assign grp_fu_489_p1 = sext_ln60_2_fu_383_p1;

assign grp_fu_497_p1 = sext_ln60_2_fu_383_p1;

assign grp_fu_505_p0 = sext_ln60_17_reg_700;

assign grp_fu_505_p1 = sext_ln60_11_reg_672;

assign grp_fu_511_p0 = sext_ln60_13_fu_403_p1;

assign grp_fu_511_p1 = sext_ln60_3_reg_714;

assign grp_fu_518_p0 = sext_ln60_13_fu_403_p1;

assign grp_fu_518_p1 = sext_ln60_7_reg_721;

assign grp_fu_524_p0 = sext_ln60_13_fu_403_p1;

assign grp_fu_524_p1 = sext_ln60_10_reg_728;

assign grp_fu_530_p1 = sext_ln60_3_reg_714;

assign grp_fu_536_p0 = sext_ln60_16_reg_782;

assign grp_fu_536_p1 = sext_ln60_7_reg_721;

assign grp_fu_541_p0 = sext_ln60_16_reg_782;

assign grp_fu_541_p1 = sext_ln60_10_reg_728;

assign mul_ln60_12_fu_395_p0 = sext_ln60_12_reg_679;

assign mul_ln60_12_fu_395_p1 = sext_ln60_6_reg_606;

assign mul_ln60_15_fu_399_p0 = sext_ln60_12_reg_679;

assign mul_ln60_15_fu_399_p1 = sext_ln60_9_reg_656;

assign mul_ln60_18_fu_409_p0 = sext_ln60_15_fu_406_p1;

assign mul_ln60_18_fu_409_p1 = sext_ln60_1_reg_571;

assign mul_ln60_21_fu_417_p0 = sext_ln60_15_fu_406_p1;

assign mul_ln60_21_fu_417_p1 = sext_ln60_6_reg_606;

assign mul_ln60_24_fu_422_p0 = sext_ln60_15_reg_772;

assign mul_ln60_24_fu_422_p1 = sext_ln60_9_reg_656;

assign mul_ln60_3_fu_332_p1 = sext_ln60_fu_262_p1;

assign mul_ln60_6_fu_358_p1 = sext_ln60_reg_566;

assign mul_ln60_9_fu_370_p1 = sext_ln60_1_reg_571;

assign mul_ln60_fu_270_p1 = sext_ln60_fu_262_p1;

assign sext_ln60_10_fu_392_p1 = tmp_s_reg_667;

assign sext_ln60_11_fu_363_p1 = $signed(grp_fu_224_p4);

assign sext_ln60_12_fu_367_p1 = trunc_ln60_4_reg_634;

assign sext_ln60_13_fu_403_p1 = $signed(tmp_6_reg_639);

assign sext_ln60_14_fu_346_p1 = $signed(grp_fu_244_p4);

assign sext_ln60_15_fu_406_p1 = $signed(trunc_ln60_5_reg_690);

assign sext_ln60_16_fu_414_p1 = tmp_10_reg_695;

assign sext_ln60_17_fu_379_p1 = $signed(grp_fu_244_p4);

assign sext_ln60_1_fu_266_p1 = trunc_ln60_1_fu_258_p1;

assign sext_ln60_2_fu_383_p1 = $signed(tmp_2_reg_582);

assign sext_ln60_3_fu_386_p1 = tmp_3_reg_587;

assign sext_ln60_4_fu_316_p1 = $signed(tmp_4_fu_296_p4);

assign sext_ln60_5_fu_320_p1 = $signed(tmp_5_fu_306_p4);

assign sext_ln60_6_fu_328_p1 = trunc_ln60_2_fu_324_p1;

assign sext_ln60_7_fu_389_p1 = tmp_7_reg_617;

assign sext_ln60_8_fu_338_p1 = $signed(grp_fu_224_p4);

assign sext_ln60_9_fu_354_p1 = trunc_ln60_3_fu_350_p1;

assign sext_ln60_fu_262_p1 = $signed(trunc_ln60_fu_254_p1);

assign tmp_4_fu_296_p4 = {{a_q1[23:16]}};

assign tmp_5_fu_306_p4 = {{b_q1[23:16]}};

assign trunc_ln60_1_fu_258_p1 = b_q1[7:0];

assign trunc_ln60_2_fu_324_p1 = b_q0[7:0];

assign trunc_ln60_3_fu_350_p1 = b_q0[7:0];

assign trunc_ln60_4_fu_342_p1 = a_q0[7:0];

assign trunc_ln60_5_fu_375_p1 = a_q0[7:0];

assign trunc_ln60_fu_254_p1 = a_q1[7:0];

endmodule //matrixmul
