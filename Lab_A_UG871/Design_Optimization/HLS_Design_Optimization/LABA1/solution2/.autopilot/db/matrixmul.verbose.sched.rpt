

================================================================
== Vitis HLS Report for 'matrixmul'
================================================================
* Date:           Sat Mar 26 19:00:28 2022

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        LABA1
* Solution:       solution2 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.061 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       34|       34|  0.340 us|  0.340 us|   35|   35|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Row_Col_Product  |       32|       32|         7|          1|          1|    27|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 1
  Pipeline-0 : II = 1, D = 7, States = { 1 2 3 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.34>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 10 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 11 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 12 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 13 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 14 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%indvar_flatten15 = alloca i32 1"   --->   Operation 15 'alloca' 'indvar_flatten15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 16 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %a, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %a"   --->   Operation 18 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %b, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 19 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %b"   --->   Operation 20 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %res, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 21 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %res"   --->   Operation 22 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.58ns)   --->   "%store_ln54 = store i5 0, i5 %indvar_flatten15" [matrixmul.cpp:54]   --->   Operation 23 'store' 'store_ln54' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 24 [1/1] (1.58ns)   --->   "%store_ln54 = store i2 0, i2 %i" [matrixmul.cpp:54]   --->   Operation 24 'store' 'store_ln54' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 25 [1/1] (1.58ns)   --->   "%store_ln54 = store i4 0, i4 %indvar_flatten" [matrixmul.cpp:54]   --->   Operation 25 'store' 'store_ln54' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%store_ln54 = store i2 0, i2 %j" [matrixmul.cpp:54]   --->   Operation 26 'store' 'store_ln54' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 27 [1/1] (1.58ns)   --->   "%store_ln54 = store i2 0, i2 %k" [matrixmul.cpp:54]   --->   Operation 27 'store' 'store_ln54' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 28 [1/1] (1.58ns)   --->   "%store_ln54 = store i16 0, i16 %empty" [matrixmul.cpp:54]   --->   Operation 28 'store' 'store_ln54' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln54 = br void" [matrixmul.cpp:54]   --->   Operation 29 'br' 'br_ln54' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%indvar_flatten15_load = load i5 %indvar_flatten15" [matrixmul.cpp:54]   --->   Operation 30 'load' 'indvar_flatten15_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.36ns)   --->   "%icmp_ln54 = icmp_eq  i5 %indvar_flatten15_load, i5 27" [matrixmul.cpp:54]   --->   Operation 31 'icmp' 'icmp_ln54' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.78ns)   --->   "%add_ln54_1 = add i5 %indvar_flatten15_load, i5 1" [matrixmul.cpp:54]   --->   Operation 32 'add' 'add_ln54_1' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln54 = br i1 %icmp_ln54, void %.split4, void" [matrixmul.cpp:54]   --->   Operation 33 'br' 'br_ln54' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%indvar_flatten_load_1 = load i4 %indvar_flatten" [matrixmul.cpp:56]   --->   Operation 34 'load' 'indvar_flatten_load_1' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (1.30ns)   --->   "%icmp_ln56 = icmp_eq  i4 %indvar_flatten_load_1, i4 9" [matrixmul.cpp:56]   --->   Operation 35 'icmp' 'icmp_ln56' <Predicate = (!icmp_ln54)> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i4 %indvar_flatten" [matrixmul.cpp:56]   --->   Operation 36 'load' 'indvar_flatten_load' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (1.73ns)   --->   "%add_ln56_1 = add i4 %indvar_flatten_load, i4 1" [matrixmul.cpp:56]   --->   Operation 37 'add' 'add_ln56_1' <Predicate = (!icmp_ln54)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (1.02ns)   --->   "%select_ln56_3 = select i1 %icmp_ln56, i4 1, i4 %add_ln56_1" [matrixmul.cpp:56]   --->   Operation 38 'select' 'select_ln56_3' <Predicate = (!icmp_ln54)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (1.58ns)   --->   "%store_ln54 = store i5 %add_ln54_1, i5 %indvar_flatten15" [matrixmul.cpp:54]   --->   Operation 39 'store' 'store_ln54' <Predicate = (!icmp_ln54)> <Delay = 1.58>
ST_1 : Operation 40 [1/1] (1.58ns)   --->   "%store_ln56 = store i4 %select_ln56_3, i4 %indvar_flatten" [matrixmul.cpp:56]   --->   Operation 40 'store' 'store_ln56' <Predicate = (!icmp_ln54)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 7.06>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%k_load = load i2 %k" [matrixmul.cpp:59]   --->   Operation 41 'load' 'k_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%j_load = load i2 %j" [matrixmul.cpp:54]   --->   Operation 42 'load' 'j_load' <Predicate = (!icmp_ln56)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%i_load = load i2 %i" [matrixmul.cpp:54]   --->   Operation 43 'load' 'i_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (1.56ns)   --->   "%add_ln54 = add i2 %i_load, i2 1" [matrixmul.cpp:54]   --->   Operation 44 'add' 'add_ln54' <Predicate = (icmp_ln56)> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.99ns)   --->   "%select_ln54 = select i1 %icmp_ln56, i2 0, i2 %j_load" [matrixmul.cpp:54]   --->   Operation 45 'select' 'select_ln54' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.99ns)   --->   "%select_ln54_1 = select i1 %icmp_ln56, i2 %add_ln54, i2 %i_load" [matrixmul.cpp:54]   --->   Operation 46 'select' 'select_ln54_1' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node and_ln54)   --->   "%xor_ln54 = xor i1 %icmp_ln56, i1 1" [matrixmul.cpp:54]   --->   Operation 47 'xor' 'xor_ln54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.95ns)   --->   "%icmp_ln59 = icmp_eq  i2 %k_load, i2 3" [matrixmul.cpp:59]   --->   Operation 48 'icmp' 'icmp_ln59' <Predicate = true> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln54 = and i1 %icmp_ln59, i1 %xor_ln54" [matrixmul.cpp:54]   --->   Operation 49 'and' 'and_ln54' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (1.56ns)   --->   "%add_ln56 = add i2 %select_ln54, i2 1" [matrixmul.cpp:56]   --->   Operation 50 'add' 'add_ln56' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.97ns)   --->   "%or_ln56 = or i1 %and_ln54, i1 %icmp_ln56" [matrixmul.cpp:56]   --->   Operation 51 'or' 'or_ln56' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.99ns)   --->   "%select_ln56 = select i1 %or_ln56, i2 0, i2 %k_load" [matrixmul.cpp:56]   --->   Operation 52 'select' 'select_ln56' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.99ns)   --->   "%select_ln56_2 = select i1 %and_ln54, i2 %add_ln56, i2 %select_ln54" [matrixmul.cpp:56]   --->   Operation 53 'select' 'select_ln56_2' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (1.56ns)   --->   "%add_ln59 = add i2 %select_ln56, i2 1" [matrixmul.cpp:59]   --->   Operation 54 'add' 'add_ln59' <Predicate = true> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.95ns)   --->   "%icmp_ln59_1 = icmp_eq  i2 %add_ln59, i2 3" [matrixmul.cpp:59]   --->   Operation 55 'icmp' 'icmp_ln59_1' <Predicate = true> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%br_ln59 = br i1 %icmp_ln59_1, void %ifFalse, void %ifTrue" [matrixmul.cpp:59]   --->   Operation 56 'br' 'br_ln59' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (1.58ns)   --->   "%store_ln54 = store i2 %select_ln54_1, i2 %i" [matrixmul.cpp:54]   --->   Operation 57 'store' 'store_ln54' <Predicate = true> <Delay = 1.58>
ST_2 : Operation 58 [1/1] (1.58ns)   --->   "%store_ln56 = store i2 %select_ln56_2, i2 %j" [matrixmul.cpp:56]   --->   Operation 58 'store' 'store_ln56' <Predicate = true> <Delay = 1.58>
ST_2 : Operation 59 [1/1] (1.58ns)   --->   "%store_ln59 = store i2 %add_ln59, i2 %k" [matrixmul.cpp:59]   --->   Operation 59 'store' 'store_ln59' <Predicate = true> <Delay = 1.58>

State 3 <SV = 2> <Delay = 5.79>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln60 = zext i2 %select_ln54_1" [matrixmul.cpp:60]   --->   Operation 60 'zext' 'zext_ln60' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i2.i2, i2 %select_ln54_1, i2 0" [matrixmul.cpp:60]   --->   Operation 61 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (1.73ns)   --->   "%sub_ln60 = sub i4 %tmp, i4 %zext_ln60" [matrixmul.cpp:60]   --->   Operation 62 'sub' 'sub_ln60' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln57 = zext i2 %select_ln56_2" [matrixmul.cpp:57]   --->   Operation 63 'zext' 'zext_ln57' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (1.73ns)   --->   "%add_ln57 = add i4 %sub_ln60, i4 %zext_ln57" [matrixmul.cpp:57]   --->   Operation 64 'add' 'add_ln57' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln60_1 = zext i2 %select_ln56" [matrixmul.cpp:60]   --->   Operation 65 'zext' 'zext_ln60_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (1.73ns)   --->   "%add_ln60_1 = add i4 %sub_ln60, i4 %zext_ln60_1" [matrixmul.cpp:60]   --->   Operation 66 'add' 'add_ln60_1' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln60_2 = zext i4 %add_ln60_1" [matrixmul.cpp:60]   --->   Operation 67 'zext' 'zext_ln60_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%a_addr = getelementptr i8 %a, i64 0, i64 %zext_ln60_2" [matrixmul.cpp:60]   --->   Operation 68 'getelementptr' 'a_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i2.i2, i2 %select_ln56, i2 0" [matrixmul.cpp:60]   --->   Operation 69 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln60_1 = sub i4 %tmp_1, i4 %zext_ln60_1" [matrixmul.cpp:60]   --->   Operation 70 'sub' 'sub_ln60_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 71 [1/1] (3.31ns) (root node of TernaryAdder)   --->   "%add_ln60_2 = add i4 %sub_ln60_1, i4 %zext_ln57" [matrixmul.cpp:60]   --->   Operation 71 'add' 'add_ln60_2' <Predicate = true> <Delay = 3.31> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln60_3 = zext i4 %add_ln60_2" [matrixmul.cpp:60]   --->   Operation 72 'zext' 'zext_ln60_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%b_addr = getelementptr i8 %b, i64 0, i64 %zext_ln60_3" [matrixmul.cpp:60]   --->   Operation 73 'getelementptr' 'b_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [2/2] (2.32ns)   --->   "%a_load = load i4 %a_addr" [matrixmul.cpp:60]   --->   Operation 74 'load' 'a_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9> <RAM>
ST_3 : Operation 75 [2/2] (2.32ns)   --->   "%b_load = load i4 %b_addr" [matrixmul.cpp:60]   --->   Operation 75 'load' 'b_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9> <RAM>

State 4 <SV = 3> <Delay = 3.37>
ST_4 : Operation 76 [1/2] (2.32ns)   --->   "%a_load = load i4 %a_addr" [matrixmul.cpp:60]   --->   Operation 76 'load' 'a_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9> <RAM>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%sext_ln60 = sext i8 %a_load" [matrixmul.cpp:60]   --->   Operation 77 'sext' 'sext_ln60' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 78 [1/2] (2.32ns)   --->   "%b_load = load i4 %b_addr" [matrixmul.cpp:60]   --->   Operation 78 'load' 'b_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9> <RAM>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%sext_ln60_1 = sext i8 %b_load" [matrixmul.cpp:60]   --->   Operation 79 'sext' 'sext_ln60_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 80 [3/3] (1.05ns) (grouped into DSP with root node add_ln60)   --->   "%mul_ln60 = mul i16 %sext_ln60_1, i16 %sext_ln60" [matrixmul.cpp:60]   --->   Operation 80 'mul' 'mul_ln60' <Predicate = true> <Delay = 1.05> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 1.05>
ST_5 : Operation 81 [2/3] (1.05ns) (grouped into DSP with root node add_ln60)   --->   "%mul_ln60 = mul i16 %sext_ln60_1, i16 %sext_ln60" [matrixmul.cpp:60]   --->   Operation 81 'mul' 'mul_ln60' <Predicate = true> <Delay = 1.05> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 6 <SV = 5> <Delay = 2.90>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%p_load = load i16 %empty" [matrixmul.cpp:56]   --->   Operation 82 'load' 'p_load' <Predicate = (!or_ln56)> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (0.80ns)   --->   "%select_ln56_1 = select i1 %or_ln56, i16 0, i16 %p_load" [matrixmul.cpp:56]   --->   Operation 83 'select' 'select_ln56_1' <Predicate = true> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 84 [1/3] (0.00ns) (grouped into DSP with root node add_ln60)   --->   "%mul_ln60 = mul i16 %sext_ln60_1, i16 %sext_ln60" [matrixmul.cpp:60]   --->   Operation 84 'mul' 'mul_ln60' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 85 [2/2] (2.10ns) (root node of the DSP)   --->   "%add_ln60 = add i16 %mul_ln60, i16 %select_ln56_1" [matrixmul.cpp:60]   --->   Operation 85 'add' 'add_ln60' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "%ret_ln65 = ret" [matrixmul.cpp:65]   --->   Operation 98 'ret' 'ret_ln65' <Predicate = (icmp_ln54)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 4.42>
ST_7 : Operation 86 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @Row_Col_Product_str"   --->   Operation 86 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 87 [1/1] (0.00ns)   --->   "%empty_6 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 27, i64 27, i64 27"   --->   Operation 87 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @Col_Product_str"   --->   Operation 88 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln57_1 = zext i4 %add_ln57" [matrixmul.cpp:57]   --->   Operation 89 'zext' 'zext_ln57_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 90 [1/1] (0.00ns)   --->   "%res_addr = getelementptr i16 %res, i64 0, i64 %zext_ln57_1" [matrixmul.cpp:57]   --->   Operation 90 'getelementptr' 'res_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 91 [1/1] (0.00ns)   --->   "%specpipeline_ln59 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [matrixmul.cpp:59]   --->   Operation 91 'specpipeline' 'specpipeline_ln59' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 92 [1/1] (0.00ns)   --->   "%specloopname_ln59 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [matrixmul.cpp:59]   --->   Operation 92 'specloopname' 'specloopname_ln59' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 93 [1/2] (2.10ns) (root node of the DSP)   --->   "%add_ln60 = add i16 %mul_ln60, i16 %select_ln56_1" [matrixmul.cpp:60]   --->   Operation 93 'add' 'add_ln60' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 94 [1/1] (2.32ns)   --->   "%store_ln60 = store i16 %add_ln60, i4 %res_addr" [matrixmul.cpp:60]   --->   Operation 94 'store' 'store_ln60' <Predicate = (icmp_ln59_1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_7 : Operation 95 [1/1] (0.00ns)   --->   "%br_ln0 = br void %ifFalse"   --->   Operation 95 'br' 'br_ln0' <Predicate = (icmp_ln59_1)> <Delay = 0.00>
ST_7 : Operation 96 [1/1] (1.58ns)   --->   "%store_ln60 = store i16 %add_ln60, i16 %empty" [matrixmul.cpp:60]   --->   Operation 96 'store' 'store_ln60' <Predicate = true> <Delay = 1.58>
ST_7 : Operation 97 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 97 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.35ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten') [7]  (0 ns)
	'load' operation ('indvar_flatten_load', matrixmul.cpp:56) on local variable 'indvar_flatten' [81]  (0 ns)
	'add' operation ('add_ln56_1', matrixmul.cpp:56) [82]  (1.74 ns)
	'select' operation ('select_ln56_3', matrixmul.cpp:56) [83]  (1.02 ns)
	'store' operation ('store_ln56', matrixmul.cpp:56) of variable 'select_ln56_3', matrixmul.cpp:56 on local variable 'indvar_flatten' [86]  (1.59 ns)

 <State 2>: 7.06ns
The critical path consists of the following:
	'load' operation ('k_load', matrixmul.cpp:59) on local variable 'k' [31]  (0 ns)
	'icmp' operation ('icmp_ln59', matrixmul.cpp:59) [45]  (0.959 ns)
	'and' operation ('and_ln54', matrixmul.cpp:54) [46]  (0.978 ns)
	'or' operation ('or_ln56', matrixmul.cpp:56) [49]  (0.978 ns)
	'select' operation ('select_ln56', matrixmul.cpp:56) [50]  (0.993 ns)
	'add' operation ('add_ln59', matrixmul.cpp:59) [74]  (1.56 ns)
	'store' operation ('store_ln59', matrixmul.cpp:59) of variable 'add_ln59', matrixmul.cpp:59 on local variable 'k' [88]  (1.59 ns)

 <State 3>: 5.79ns
The critical path consists of the following:
	'sub' operation ('sub_ln60', matrixmul.cpp:60) [43]  (1.74 ns)
	'add' operation ('add_ln60_1', matrixmul.cpp:60) [58]  (1.74 ns)
	'getelementptr' operation ('a_addr', matrixmul.cpp:60) [60]  (0 ns)
	'load' operation ('a_load', matrixmul.cpp:60) on array 'a' [68]  (2.32 ns)

 <State 4>: 3.37ns
The critical path consists of the following:
	'load' operation ('a_load', matrixmul.cpp:60) on array 'a' [68]  (2.32 ns)
	'mul' operation of DSP[73] ('mul_ln60', matrixmul.cpp:60) [72]  (1.05 ns)

 <State 5>: 1.05ns
The critical path consists of the following:
	'mul' operation of DSP[73] ('mul_ln60', matrixmul.cpp:60) [72]  (1.05 ns)

 <State 6>: 2.91ns
The critical path consists of the following:
	'load' operation ('p_load', matrixmul.cpp:56) on local variable 'empty' [30]  (0 ns)
	'select' operation ('select_ln56_1', matrixmul.cpp:56) [51]  (0.805 ns)
	'add' operation of DSP[73] ('add_ln60', matrixmul.cpp:60) [73]  (2.1 ns)

 <State 7>: 4.42ns
The critical path consists of the following:
	'add' operation of DSP[73] ('add_ln60', matrixmul.cpp:60) [73]  (2.1 ns)
	'store' operation ('store_ln60', matrixmul.cpp:60) of variable 'add_ln60', matrixmul.cpp:60 on array 'res' [78]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
