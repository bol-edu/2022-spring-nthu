

================================================================
== Vitis HLS Report for 'matrixmul'
================================================================
* Date:           Sat Mar 26 22:03:21 2022

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        LABA2
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.559 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                 Pipeline                 |
    |   min   |   max   |    min   |    max   | min | max |                   Type                   |
    +---------+---------+----------+----------+-----+-----+------------------------------------------+
    |       13|       14|  0.130 us|  0.140 us|    9|    9|  loop rewind stp(delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------+---------+---------+----------+-----------+-----------+------+----------+
        |           |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Row_Col  |       13|       13|         6|          1|          1|     9|       yes|
        +-----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 1
  Pipeline-0 : II = 1, D = 6, States = { 2 3 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%a_row = alloca i32 1"   --->   Operation 8 'alloca' 'a_row' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%a_row_1 = alloca i32 1"   --->   Operation 9 'alloca' 'a_row_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%a_row_2 = alloca i32 1"   --->   Operation 10 'alloca' 'a_row_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%b_copy_2_2_1 = alloca i32 1"   --->   Operation 11 'alloca' 'b_copy_2_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%b_copy_2_2_2 = alloca i32 1"   --->   Operation 12 'alloca' 'b_copy_2_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%b_copy_2_2_3 = alloca i32 1"   --->   Operation 13 'alloca' 'b_copy_2_2_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%b_copy_1_2_1 = alloca i32 1"   --->   Operation 14 'alloca' 'b_copy_1_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%b_copy_1_2_2 = alloca i32 1"   --->   Operation 15 'alloca' 'b_copy_1_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%b_copy_1_2_3 = alloca i32 1"   --->   Operation 16 'alloca' 'b_copy_1_2_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%b_copy_0_2_1 = alloca i32 1"   --->   Operation 17 'alloca' 'b_copy_0_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%b_copy_0_2_2 = alloca i32 1"   --->   Operation 18 'alloca' 'b_copy_0_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%b_copy_0_2_3 = alloca i32 1"   --->   Operation 19 'alloca' 'b_copy_0_2_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i24 %a, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 20 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i24 %b, void @empty_1, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 21 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %res, void @empty_1, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 22 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.46ns)   --->   "%br_ln0 = br void %rewind_header"   --->   Operation 23 'br' 'br_ln0' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 2.47>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%do_init = phi i1 1, void, i1 0, void %._crit_edge..split7_crit_edge, i1 1, void"   --->   Operation 24 'phi' 'do_init' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%add_ln6319 = phi i2 1, void, i2 %add_ln63, void %._crit_edge..split7_crit_edge, i2 1, void" [matrixmul.cpp:63]   --->   Operation 25 'phi' 'add_ln6319' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%icmp_ln6518 = phi i1 0, void, i1 %icmp_ln65, void %._crit_edge..split7_crit_edge, i1 0, void" [matrixmul.cpp:65]   --->   Operation 26 'phi' 'icmp_ln6518' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%cmp817 = phi i1 1, void, i1 %cmp8, void %._crit_edge..split7_crit_edge, i1 1, void" [matrixmul.cpp:63]   --->   Operation 27 'phi' 'cmp817' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%j13 = phi i2 0, void, i2 %j, void %._crit_edge..split7_crit_edge, i2 0, void"   --->   Operation 28 'phi' 'j13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%i3 = phi i2 0, void, i2 %i, void %._crit_edge..split7_crit_edge, i2 0, void"   --->   Operation 29 'phi' 'i3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%indvar_flatten2 = phi i4 0, void, i4 %add_ln63_1, void %._crit_edge..split7_crit_edge, i4 0, void" [matrixmul.cpp:63]   --->   Operation 30 'phi' 'indvar_flatten2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %do_init, void %.split7, void %rewind_init"   --->   Operation 31 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_2"   --->   Operation 32 'spectopmodule' 'spectopmodule_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i24 %a"   --->   Operation 33 'specbitsmap' 'specbitsmap_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i24 %b"   --->   Operation 34 'specbitsmap' 'specbitsmap_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %res"   --->   Operation 35 'specbitsmap' 'specbitsmap_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.split7"   --->   Operation 36 'br' 'br_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.34ns)   --->   "%select_ln63 = select i1 %icmp_ln6518, i2 0, i2 %j13" [matrixmul.cpp:63]   --->   Operation 37 'select' 'select_ln63' <Predicate = true> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.34ns)   --->   "%i = select i1 %icmp_ln6518, i2 %add_ln6319, i2 %i3" [matrixmul.cpp:63]   --->   Operation 38 'select' 'i' <Predicate = true> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i2 %i" [matrixmul.cpp:63]   --->   Operation 39 'zext' 'zext_ln63' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.39ns)   --->   "%cmp8_mid1 = icmp_eq  i2 %add_ln6319, i2 0" [matrixmul.cpp:63]   --->   Operation 40 'icmp' 'cmp8_mid1' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.34ns)   --->   "%select_ln63_2 = select i1 %icmp_ln6518, i1 %cmp8_mid1, i1 %cmp817" [matrixmul.cpp:63]   --->   Operation 41 'select' 'select_ln63_2' <Predicate = true> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.39ns)   --->   "%icmp_ln70 = icmp_eq  i2 %select_ln63, i2 0" [matrixmul.cpp:70]   --->   Operation 42 'icmp' 'icmp_ln70' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%a_addr = getelementptr i24 %a, i64 0, i64 %zext_ln63" [matrixmul.cpp:72]   --->   Operation 43 'getelementptr' 'a_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [2/2] (0.73ns)   --->   "%a_load = load i2 %a_addr" [matrixmul.cpp:72]   --->   Operation 44 'load' 'a_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 3> <RAM>
ST_2 : Operation 45 [1/1] (0.80ns)   --->   "%add_ln63_1 = add i4 %indvar_flatten2, i4 1" [matrixmul.cpp:63]   --->   Operation 45 'add' 'add_ln63_1' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln75 = br i1 %select_ln63_2, void %._crit_edge, void %_ifconv" [matrixmul.cpp:75]   --->   Operation 46 'br' 'br_ln75' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%b_copy_2_2_1_load = load i8 %b_copy_2_2_1" [matrixmul.cpp:77]   --->   Operation 47 'load' 'b_copy_2_2_1_load' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%b_copy_2_2_2_load = load i8 %b_copy_2_2_2" [matrixmul.cpp:77]   --->   Operation 48 'load' 'b_copy_2_2_2_load' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%b_copy_2_2_3_load = load i8 %b_copy_2_2_3" [matrixmul.cpp:77]   --->   Operation 49 'load' 'b_copy_2_2_3_load' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%b_copy_1_2_1_load = load i8 %b_copy_1_2_1" [matrixmul.cpp:77]   --->   Operation 50 'load' 'b_copy_1_2_1_load' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%b_copy_1_2_2_load = load i8 %b_copy_1_2_2" [matrixmul.cpp:77]   --->   Operation 51 'load' 'b_copy_1_2_2_load' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%b_copy_1_2_3_load = load i8 %b_copy_1_2_3" [matrixmul.cpp:77]   --->   Operation 52 'load' 'b_copy_1_2_3_load' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%b_copy_0_2_1_load = load i8 %b_copy_0_2_1" [matrixmul.cpp:77]   --->   Operation 53 'load' 'b_copy_0_2_1_load' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%b_copy_0_2_2_load = load i8 %b_copy_0_2_2" [matrixmul.cpp:77]   --->   Operation 54 'load' 'b_copy_0_2_2_load' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%b_copy_0_2_3_load = load i8 %b_copy_0_2_3" [matrixmul.cpp:77]   --->   Operation 55 'load' 'b_copy_0_2_3_load' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (1.72ns)   --->   "%b_read = read i24 @_ssdm_op_Read.ap_fifo.volatile.i24P0A, i24 %b" [matrixmul.cpp:77]   --->   Operation 56 'read' 'b_read' <Predicate = (select_ln63_2)> <Delay = 1.72> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 1.72> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 24> <Depth = -1> <FIFO>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%b_copy_0_2_10 = trunc i24 %b_read" [matrixmul.cpp:77]   --->   Operation 57 'trunc' 'b_copy_0_2_10' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%b_copy_1_2_10 = partselect i8 @_ssdm_op_PartSelect.i8.i24.i32.i32, i24 %b_read, i32 8, i32 15" [matrixmul.cpp:77]   --->   Operation 58 'partselect' 'b_copy_1_2_10' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%b_copy_2_2_10 = partselect i8 @_ssdm_op_PartSelect.i8.i24.i32.i32, i24 %b_read, i32 16, i32 23" [matrixmul.cpp:77]   --->   Operation 59 'partselect' 'b_copy_2_2_10' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.39ns)   --->   "%icmp_ln77 = icmp_eq  i2 %select_ln63, i2 1" [matrixmul.cpp:77]   --->   Operation 60 'icmp' 'icmp_ln77' <Predicate = (select_ln63_2)> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node b_copy_2_2_5)   --->   "%b_copy_2_2 = select i1 %icmp_ln77, i8 %b_copy_2_2_1_load, i8 %b_copy_2_2_10" [matrixmul.cpp:77]   --->   Operation 61 'select' 'b_copy_2_2' <Predicate = (select_ln63_2)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.40ns) (out node of the LUT)   --->   "%b_copy_2_2_5 = select i1 %icmp_ln70, i8 %b_copy_2_2_1_load, i8 %b_copy_2_2" [matrixmul.cpp:77]   --->   Operation 62 'select' 'b_copy_2_2_5' <Predicate = (select_ln63_2)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node b_copy_2_2_7)   --->   "%b_copy_2_2_6 = select i1 %icmp_ln77, i8 %b_copy_2_2_10, i8 %b_copy_2_2_2_load" [matrixmul.cpp:77]   --->   Operation 63 'select' 'b_copy_2_2_6' <Predicate = (select_ln63_2)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.40ns) (out node of the LUT)   --->   "%b_copy_2_2_7 = select i1 %icmp_ln70, i8 %b_copy_2_2_2_load, i8 %b_copy_2_2_6" [matrixmul.cpp:77]   --->   Operation 64 'select' 'b_copy_2_2_7' <Predicate = (select_ln63_2)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.40ns)   --->   "%b_copy_2_2_9 = select i1 %icmp_ln70, i8 %b_copy_2_2_10, i8 %b_copy_2_2_3_load" [matrixmul.cpp:77]   --->   Operation 65 'select' 'b_copy_2_2_9' <Predicate = (select_ln63_2)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node b_copy_1_2_5)   --->   "%b_copy_1_2 = select i1 %icmp_ln77, i8 %b_copy_1_2_1_load, i8 %b_copy_1_2_10" [matrixmul.cpp:77]   --->   Operation 66 'select' 'b_copy_1_2' <Predicate = (select_ln63_2)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.40ns) (out node of the LUT)   --->   "%b_copy_1_2_5 = select i1 %icmp_ln70, i8 %b_copy_1_2_1_load, i8 %b_copy_1_2" [matrixmul.cpp:77]   --->   Operation 67 'select' 'b_copy_1_2_5' <Predicate = (select_ln63_2)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node b_copy_1_2_7)   --->   "%b_copy_1_2_6 = select i1 %icmp_ln77, i8 %b_copy_1_2_10, i8 %b_copy_1_2_2_load" [matrixmul.cpp:77]   --->   Operation 68 'select' 'b_copy_1_2_6' <Predicate = (select_ln63_2)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.40ns) (out node of the LUT)   --->   "%b_copy_1_2_7 = select i1 %icmp_ln70, i8 %b_copy_1_2_2_load, i8 %b_copy_1_2_6" [matrixmul.cpp:77]   --->   Operation 69 'select' 'b_copy_1_2_7' <Predicate = (select_ln63_2)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.40ns)   --->   "%b_copy_1_2_9 = select i1 %icmp_ln70, i8 %b_copy_1_2_10, i8 %b_copy_1_2_3_load" [matrixmul.cpp:77]   --->   Operation 70 'select' 'b_copy_1_2_9' <Predicate = (select_ln63_2)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node b_copy_0_2_5)   --->   "%b_copy_0_2 = select i1 %icmp_ln77, i8 %b_copy_0_2_1_load, i8 %b_copy_0_2_10" [matrixmul.cpp:77]   --->   Operation 71 'select' 'b_copy_0_2' <Predicate = (select_ln63_2)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.40ns) (out node of the LUT)   --->   "%b_copy_0_2_5 = select i1 %icmp_ln70, i8 %b_copy_0_2_1_load, i8 %b_copy_0_2" [matrixmul.cpp:77]   --->   Operation 72 'select' 'b_copy_0_2_5' <Predicate = (select_ln63_2)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node b_copy_0_2_7)   --->   "%b_copy_0_2_6 = select i1 %icmp_ln77, i8 %b_copy_0_2_10, i8 %b_copy_0_2_2_load" [matrixmul.cpp:77]   --->   Operation 73 'select' 'b_copy_0_2_6' <Predicate = (select_ln63_2)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.40ns) (out node of the LUT)   --->   "%b_copy_0_2_7 = select i1 %icmp_ln70, i8 %b_copy_0_2_2_load, i8 %b_copy_0_2_6" [matrixmul.cpp:77]   --->   Operation 74 'select' 'b_copy_0_2_7' <Predicate = (select_ln63_2)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.40ns)   --->   "%b_copy_0_2_9 = select i1 %icmp_ln70, i8 %b_copy_0_2_10, i8 %b_copy_0_2_3_load" [matrixmul.cpp:77]   --->   Operation 75 'select' 'b_copy_0_2_9' <Predicate = (select_ln63_2)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%store_ln77 = store i8 %b_copy_0_2_9, i8 %b_copy_0_2_3" [matrixmul.cpp:77]   --->   Operation 76 'store' 'store_ln77' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%store_ln77 = store i8 %b_copy_0_2_7, i8 %b_copy_0_2_2" [matrixmul.cpp:77]   --->   Operation 77 'store' 'store_ln77' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%store_ln77 = store i8 %b_copy_0_2_5, i8 %b_copy_0_2_1" [matrixmul.cpp:77]   --->   Operation 78 'store' 'store_ln77' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%store_ln77 = store i8 %b_copy_1_2_9, i8 %b_copy_1_2_3" [matrixmul.cpp:77]   --->   Operation 79 'store' 'store_ln77' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%store_ln77 = store i8 %b_copy_1_2_7, i8 %b_copy_1_2_2" [matrixmul.cpp:77]   --->   Operation 80 'store' 'store_ln77' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%store_ln77 = store i8 %b_copy_1_2_5, i8 %b_copy_1_2_1" [matrixmul.cpp:77]   --->   Operation 81 'store' 'store_ln77' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%store_ln77 = store i8 %b_copy_2_2_9, i8 %b_copy_2_2_3" [matrixmul.cpp:77]   --->   Operation 82 'store' 'store_ln77' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%store_ln77 = store i8 %b_copy_2_2_7, i8 %b_copy_2_2_2" [matrixmul.cpp:77]   --->   Operation 83 'store' 'store_ln77' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%store_ln77 = store i8 %b_copy_2_2_5, i8 %b_copy_2_2_1" [matrixmul.cpp:77]   --->   Operation 84 'store' 'store_ln77' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%br_ln77 = br void %._crit_edge" [matrixmul.cpp:77]   --->   Operation 85 'br' 'br_ln77' <Predicate = (select_ln63_2)> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (0.62ns)   --->   "%j = add i2 %select_ln63, i2 1" [matrixmul.cpp:65]   --->   Operation 86 'add' 'j' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 87 [1/1] (0.39ns)   --->   "%cmp8 = icmp_eq  i2 %i, i2 0" [matrixmul.cpp:63]   --->   Operation 87 'icmp' 'cmp8' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 88 [1/1] (0.39ns)   --->   "%icmp_ln65 = icmp_eq  i2 %j, i2 3" [matrixmul.cpp:65]   --->   Operation 88 'icmp' 'icmp_ln65' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 89 [1/1] (0.62ns)   --->   "%add_ln63 = add i2 %i, i2 1" [matrixmul.cpp:63]   --->   Operation 89 'add' 'add_ln63' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 90 [1/1] (0.72ns)   --->   "%icmp_ln63 = icmp_eq  i4 %indvar_flatten2, i4 8" [matrixmul.cpp:63]   --->   Operation 90 'icmp' 'icmp_ln63' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%br_ln63 = br i1 %icmp_ln63, void %._crit_edge..split7_crit_edge, void" [matrixmul.cpp:63]   --->   Operation 91 'br' 'br_ln63' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "%br_ln0 = br void %rewind_header"   --->   Operation 92 'br' 'br_ln0' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "%br_ln85 = br void %rewind_header" [matrixmul.cpp:85]   --->   Operation 93 'br' 'br_ln85' <Predicate = (icmp_ln63)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.21>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%a_row_load = load i8 %a_row" [matrixmul.cpp:70]   --->   Operation 94 'load' 'a_row_load' <Predicate = (!icmp_ln70)> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%a_row_1_load = load i8 %a_row_1" [matrixmul.cpp:70]   --->   Operation 95 'load' 'a_row_1_load' <Predicate = (!icmp_ln70)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%a_row_2_load = load i8 %a_row_2" [matrixmul.cpp:70]   --->   Operation 96 'load' 'a_row_2_load' <Predicate = (!icmp_ln70)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @Row_Col_str"   --->   Operation 97 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 9, i64 9, i64 9"   --->   Operation 98 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%specpipeline_ln58 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [matrixmul.cpp:58]   --->   Operation 99 'specpipeline' 'specpipeline_ln58' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%specloopname_ln58 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [matrixmul.cpp:58]   --->   Operation 100 'specloopname' 'specloopname_ln58' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 101 [1/2] (0.73ns)   --->   "%a_load = load i2 %a_addr" [matrixmul.cpp:72]   --->   Operation 101 'load' 'a_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 3> <RAM>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%a_row_8 = trunc i24 %a_load" [matrixmul.cpp:72]   --->   Operation 102 'trunc' 'a_row_8' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "%a_row_4 = partselect i8 @_ssdm_op_PartSelect.i8.i24.i32.i32, i24 %a_load, i32 8, i32 15" [matrixmul.cpp:72]   --->   Operation 103 'partselect' 'a_row_4' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "%a_row_5 = partselect i8 @_ssdm_op_PartSelect.i8.i24.i32.i32, i24 %a_load, i32 16, i32 23" [matrixmul.cpp:72]   --->   Operation 104 'partselect' 'a_row_5' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (0.40ns)   --->   "%a_row_11 = select i1 %icmp_ln70, i8 %a_row_5, i8 %a_row_load" [matrixmul.cpp:70]   --->   Operation 105 'select' 'a_row_11' <Predicate = true> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 106 [1/1] (0.40ns)   --->   "%a_row_10 = select i1 %icmp_ln70, i8 %a_row_4, i8 %a_row_1_load" [matrixmul.cpp:70]   --->   Operation 106 'select' 'a_row_10' <Predicate = true> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 107 [1/1] (0.40ns)   --->   "%a_row_9 = select i1 %icmp_ln70, i8 %a_row_8, i8 %a_row_2_load" [matrixmul.cpp:70]   --->   Operation 107 'select' 'a_row_9' <Predicate = true> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 108 [1/1] (0.00ns)   --->   "%b_copy_2_2_1_load_1 = load i8 %b_copy_2_2_1"   --->   Operation 108 'load' 'b_copy_2_2_1_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 109 [1/1] (0.00ns)   --->   "%b_copy_2_2_2_load_1 = load i8 %b_copy_2_2_2"   --->   Operation 109 'load' 'b_copy_2_2_2_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "%b_copy_2_2_11 = load i8 %b_copy_2_2_3"   --->   Operation 110 'load' 'b_copy_2_2_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 111 [1/1] (0.00ns)   --->   "%b_copy_1_2_1_load_1 = load i8 %b_copy_1_2_1"   --->   Operation 111 'load' 'b_copy_1_2_1_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 112 [1/1] (0.00ns)   --->   "%b_copy_1_2_2_load_1 = load i8 %b_copy_1_2_2"   --->   Operation 112 'load' 'b_copy_1_2_2_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 113 [1/1] (0.00ns)   --->   "%b_copy_1_2_11 = load i8 %b_copy_1_2_3"   --->   Operation 113 'load' 'b_copy_1_2_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 114 [1/1] (0.00ns)   --->   "%b_copy_0_2_1_load_1 = load i8 %b_copy_0_2_1"   --->   Operation 114 'load' 'b_copy_0_2_1_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 115 [1/1] (0.00ns)   --->   "%b_copy_0_2_2_load_1 = load i8 %b_copy_0_2_2"   --->   Operation 115 'load' 'b_copy_0_2_2_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 116 [1/1] (0.00ns)   --->   "%b_copy_0_2_11 = load i8 %b_copy_0_2_3"   --->   Operation 116 'load' 'b_copy_0_2_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 117 [1/1] (0.50ns)   --->   "%tmp_1 = mux i8 @_ssdm_op_Mux.ap_auto.3i8.i2, i8 %b_copy_0_2_11, i8 %b_copy_0_2_2_load_1, i8 %b_copy_0_2_1_load_1, i2 %select_ln63" [matrixmul.cpp:80]   --->   Operation 117 'mux' 'tmp_1' <Predicate = true> <Delay = 0.50> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.50> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 118 [1/1] (0.50ns)   --->   "%tmp_2 = mux i8 @_ssdm_op_Mux.ap_auto.3i8.i2, i8 %b_copy_1_2_11, i8 %b_copy_1_2_2_load_1, i8 %b_copy_1_2_1_load_1, i2 %select_ln63" [matrixmul.cpp:80]   --->   Operation 118 'mux' 'tmp_2' <Predicate = true> <Delay = 0.50> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.50> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 119 [1/1] (0.00ns)   --->   "%sext_ln82_4 = sext i8 %a_row_11" [matrixmul.cpp:82]   --->   Operation 119 'sext' 'sext_ln82_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 120 [1/1] (0.50ns)   --->   "%tmp_3 = mux i8 @_ssdm_op_Mux.ap_auto.3i8.i2, i8 %b_copy_2_2_11, i8 %b_copy_2_2_2_load_1, i8 %b_copy_2_2_1_load_1, i2 %select_ln63" [matrixmul.cpp:80]   --->   Operation 120 'mux' 'tmp_3' <Predicate = true> <Delay = 0.50> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.50> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 121 [1/1] (0.00ns)   --->   "%sext_ln82_5 = sext i8 %tmp_3" [matrixmul.cpp:82]   --->   Operation 121 'sext' 'sext_ln82_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 122 [3/3] (1.08ns) (grouped into DSP with root node add_ln82)   --->   "%mul_ln82_2 = mul i16 %sext_ln82_5, i16 %sext_ln82_4" [matrixmul.cpp:82]   --->   Operation 122 'mul' 'mul_ln82_2' <Predicate = true> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 123 [1/1] (0.00ns)   --->   "%store_ln70 = store i8 %a_row_9, i8 %a_row_2" [matrixmul.cpp:70]   --->   Operation 123 'store' 'store_ln70' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_3 : Operation 124 [1/1] (0.00ns)   --->   "%store_ln70 = store i8 %a_row_10, i8 %a_row_1" [matrixmul.cpp:70]   --->   Operation 124 'store' 'store_ln70' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_3 : Operation 125 [1/1] (0.00ns)   --->   "%store_ln70 = store i8 %a_row_11, i8 %a_row" [matrixmul.cpp:70]   --->   Operation 125 'store' 'store_ln70' <Predicate = (!icmp_ln63)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.08>
ST_4 : Operation 126 [1/1] (0.00ns)   --->   "%sext_ln82_2 = sext i8 %a_row_10" [matrixmul.cpp:82]   --->   Operation 126 'sext' 'sext_ln82_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 127 [1/1] (0.00ns)   --->   "%sext_ln82_3 = sext i8 %tmp_2" [matrixmul.cpp:82]   --->   Operation 127 'sext' 'sext_ln82_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 128 [3/3] (1.08ns) (grouped into DSP with root node add_ln82_1)   --->   "%mul_ln82_1 = mul i16 %sext_ln82_3, i16 %sext_ln82_2" [matrixmul.cpp:82]   --->   Operation 128 'mul' 'mul_ln82_1' <Predicate = true> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 129 [2/3] (1.08ns) (grouped into DSP with root node add_ln82)   --->   "%mul_ln82_2 = mul i16 %sext_ln82_5, i16 %sext_ln82_4" [matrixmul.cpp:82]   --->   Operation 129 'mul' 'mul_ln82_2' <Predicate = true> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 2.52>
ST_5 : Operation 130 [1/1] (0.00ns)   --->   "%sext_ln82 = sext i8 %a_row_9" [matrixmul.cpp:82]   --->   Operation 130 'sext' 'sext_ln82' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 131 [1/1] (0.00ns)   --->   "%sext_ln82_1 = sext i8 %tmp_1" [matrixmul.cpp:82]   --->   Operation 131 'sext' 'sext_ln82_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 132 [1/1] (1.69ns)   --->   "%mul_ln82 = mul i16 %sext_ln82_1, i16 %sext_ln82" [matrixmul.cpp:82]   --->   Operation 132 'mul' 'mul_ln82' <Predicate = true> <Delay = 1.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 133 [2/3] (1.08ns) (grouped into DSP with root node add_ln82_1)   --->   "%mul_ln82_1 = mul i16 %sext_ln82_3, i16 %sext_ln82_2" [matrixmul.cpp:82]   --->   Operation 133 'mul' 'mul_ln82_1' <Predicate = true> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 134 [1/3] (0.00ns) (grouped into DSP with root node add_ln82)   --->   "%mul_ln82_2 = mul i16 %sext_ln82_5, i16 %sext_ln82_4" [matrixmul.cpp:82]   --->   Operation 134 'mul' 'mul_ln82_2' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 135 [2/2] (0.83ns) (root node of the DSP)   --->   "%add_ln82 = add i16 %mul_ln82, i16 %mul_ln82_2" [matrixmul.cpp:82]   --->   Operation 135 'add' 'add_ln82' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 6 <SV = 5> <Delay = 1.66>
ST_6 : Operation 136 [1/3] (0.00ns) (grouped into DSP with root node add_ln82_1)   --->   "%mul_ln82_1 = mul i16 %sext_ln82_3, i16 %sext_ln82_2" [matrixmul.cpp:82]   --->   Operation 136 'mul' 'mul_ln82_1' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 137 [1/2] (0.83ns) (root node of the DSP)   --->   "%add_ln82 = add i16 %mul_ln82, i16 %mul_ln82_2" [matrixmul.cpp:82]   --->   Operation 137 'add' 'add_ln82' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 138 [2/2] (0.83ns) (root node of the DSP)   --->   "%add_ln82_1 = add i16 %add_ln82, i16 %mul_ln82_1" [matrixmul.cpp:82]   --->   Operation 138 'add' 'add_ln82_1' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 2.55>
ST_7 : Operation 139 [1/2] (0.83ns) (root node of the DSP)   --->   "%add_ln82_1 = add i16 %add_ln82, i16 %mul_ln82_1" [matrixmul.cpp:82]   --->   Operation 139 'add' 'add_ln82_1' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 140 [1/1] (1.72ns)   --->   "%write_ln82 = write void @_ssdm_op_Write.ap_fifo.volatile.i16P0A, i16 %res, i16 %add_ln82_1" [matrixmul.cpp:82]   --->   Operation 140 'write' 'write_ln82' <Predicate = true> <Delay = 1.72> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 1.72> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = -1> <FIFO>
ST_7 : Operation 141 [1/1] (0.00ns)   --->   "%return_ln85 = return void @_ssdm_op_Return" [matrixmul.cpp:85]   --->   Operation 141 'return' 'return_ln85' <Predicate = (icmp_ln63)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('do_init') [21]  (0.46 ns)

 <State 2>: 2.47ns
The critical path consists of the following:
	fifo read operation ('b_read', matrixmul.cpp:77) on port 'b' (matrixmul.cpp:77) [69]  (1.73 ns)
	'select' operation ('b_copy[2][2]', matrixmul.cpp:77) [74]  (0 ns)
	'select' operation ('b_copy[2][2]', matrixmul.cpp:77) [75]  (0.4 ns)
	blocking operation 0.344 ns on control path)

 <State 3>: 2.22ns
The critical path consists of the following:
	'load' operation ('a_load', matrixmul.cpp:72) on array 'a' [50]  (0.73 ns)
	'select' operation ('a_row_11', matrixmul.cpp:70) [54]  (0.4 ns)
	'mul' operation of DSP[121] ('mul_ln82_2', matrixmul.cpp:82) [120]  (1.09 ns)

 <State 4>: 1.09ns
The critical path consists of the following:
	'mul' operation of DSP[122] ('mul_ln82_1', matrixmul.cpp:82) [116]  (1.09 ns)

 <State 5>: 2.52ns
The critical path consists of the following:
	'mul' operation ('mul_ln82', matrixmul.cpp:82) [112]  (1.69 ns)
	'add' operation of DSP[121] ('add_ln82', matrixmul.cpp:82) [121]  (0.831 ns)

 <State 6>: 1.66ns
The critical path consists of the following:
	'add' operation of DSP[121] ('add_ln82', matrixmul.cpp:82) [121]  (0.831 ns)
	'add' operation of DSP[122] ('add_ln82_1', matrixmul.cpp:82) [122]  (0.831 ns)

 <State 7>: 2.56ns
The critical path consists of the following:
	'add' operation of DSP[122] ('add_ln82_1', matrixmul.cpp:82) [122]  (0.831 ns)
	fifo write operation ('write_ln82', matrixmul.cpp:82) on port 'res' (matrixmul.cpp:82) [123]  (1.73 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
