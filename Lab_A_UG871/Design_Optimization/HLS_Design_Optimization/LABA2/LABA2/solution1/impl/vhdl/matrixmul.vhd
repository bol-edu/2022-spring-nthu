-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matrixmul is
port (
    ap_local_block : OUT STD_LOGIC;
    ap_local_deadlock : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    b_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    b_empty_n : IN STD_LOGIC;
    b_read : OUT STD_LOGIC;
    res_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_full_n : IN STD_LOGIC;
    res_write : OUT STD_LOGIC;
    a_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    a_ce0 : OUT STD_LOGIC;
    a_q0 : IN STD_LOGIC_VECTOR (23 downto 0) );
end;


architecture behav of matrixmul is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matrixmul_matrixmul,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.559000,HLS_SYN_LAT=13,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=243,HLS_SYN_LUT=539,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln63_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal select_ln63_2_fu_272_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal b_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal res_blk_n : STD_LOGIC;
    signal add_ln6319_reg_161 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln6518_reg_175 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp817_reg_189 : STD_LOGIC_VECTOR (0 downto 0);
    signal j13_reg_203 : STD_LOGIC_VECTOR (1 downto 0);
    signal i3_reg_217 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten2_reg_231 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln63_fu_245_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln63_reg_799 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_fu_253_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_reg_806 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln70_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_reg_814 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln63_1_fu_286_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln63_1_reg_826 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_fu_514_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_831 : STD_LOGIC_VECTOR (1 downto 0);
    signal cmp8_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp8_reg_836 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_reg_841 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln63_fu_532_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln63_reg_846 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln63_reg_851 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_851_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_851_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_851_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_851_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal a_row_10_fu_584_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_row_10_reg_855 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_row_9_fu_591_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_row_9_reg_860 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_row_9_reg_860_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_625_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_reg_865 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_reg_865_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_636_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_reg_870 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln82_fu_693_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_701_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_phi_mux_add_ln6319_phi_fu_165_p6 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_icmp_ln6518_phi_fu_179_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_cmp817_phi_fu_193_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_j13_phi_fu_207_p6 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_i3_phi_fu_221_p6 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_indvar_flatten2_phi_fu_235_p6 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln63_fu_261_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_row_fu_72 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_row_11_fu_577_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_row_1_fu_76 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_row_2_fu_80 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_2_2_1_fu_84 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_2_2_5_fu_357_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_2_2_2_fu_88 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_2_2_7_fu_373_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_2_2_3_fu_92 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_2_2_9_fu_381_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_1_2_1_fu_96 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_1_2_5_fu_397_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_1_2_2_fu_100 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_1_2_7_fu_413_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_1_2_3_fu_104 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_1_2_9_fu_421_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_0_2_1_fu_108 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_0_2_5_fu_437_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_0_2_2_fu_112 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_0_2_7_fu_453_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_0_2_3_fu_116 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_0_2_9_fu_461_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_709_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal cmp8_mid1_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln77_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_copy_2_2_10_fu_333_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_2_2_fu_349_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_2_2_6_fu_365_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_1_2_10_fu_323_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_1_2_fu_389_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_1_2_6_fu_405_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_0_2_10_fu_319_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_0_2_fu_429_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_copy_0_2_6_fu_445_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_row_5_fu_567_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_row_4_fu_557_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_row_8_fu_553_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_651_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_701_ce : STD_LOGIC;
    signal grp_fu_709_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_171 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component matrixmul_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component matrixmul_mul_8s_8s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component matrixmul_mac_muladd_8s_8s_16s_16_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component matrixmul_mac_muladd_8s_8s_16ns_16_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    mux_32_8_1_1_U1 : component matrixmul_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => b_copy_0_2_3_fu_116,
        din1 => b_copy_0_2_2_fu_112,
        din2 => b_copy_0_2_1_fu_108,
        din3 => select_ln63_reg_799,
        dout => tmp_1_fu_625_p5);

    mux_32_8_1_1_U2 : component matrixmul_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => b_copy_1_2_3_fu_104,
        din1 => b_copy_1_2_2_fu_100,
        din2 => b_copy_1_2_1_fu_96,
        din3 => select_ln63_reg_799,
        dout => tmp_2_fu_636_p5);

    mux_32_8_1_1_U3 : component matrixmul_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => b_copy_2_2_3_fu_92,
        din1 => b_copy_2_2_2_fu_88,
        din2 => b_copy_2_2_1_fu_84,
        din3 => select_ln63_reg_799,
        dout => tmp_3_fu_651_p5);

    mul_8s_8s_16_1_1_U4 : component matrixmul_mul_8s_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_1_reg_865_pp0_iter2_reg,
        din1 => a_row_9_reg_860_pp0_iter2_reg,
        dout => mul_ln82_fu_693_p2);

    mac_muladd_8s_8s_16s_16_4_1_U5 : component matrixmul_mac_muladd_8s_8s_16s_16_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_3_fu_651_p5,
        din1 => a_row_11_fu_577_p3,
        din2 => mul_ln82_fu_693_p2,
        ce => grp_fu_701_ce,
        dout => grp_fu_701_p3);

    mac_muladd_8s_8s_16ns_16_4_1_U6 : component matrixmul_mac_muladd_8s_8s_16ns_16_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_2_reg_870,
        din1 => a_row_10_reg_855,
        din2 => grp_fu_701_p3,
        ce => grp_fu_709_ce,
        dout => grp_fu_709_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    add_ln6319_reg_161_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln63_reg_851 = ap_const_lv1_0))) then 
                add_ln6319_reg_161 <= add_ln63_reg_846;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln63_reg_851 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                add_ln6319_reg_161 <= ap_const_lv2_1;
            end if; 
        end if;
    end process;

    cmp817_reg_189_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln63_reg_851 = ap_const_lv1_0))) then 
                cmp817_reg_189 <= cmp8_reg_836;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln63_reg_851 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                cmp817_reg_189 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    i3_reg_217_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln63_reg_851 = ap_const_lv1_0))) then 
                i3_reg_217 <= i_reg_806;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln63_reg_851 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                i3_reg_217 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    icmp_ln6518_reg_175_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln63_reg_851 = ap_const_lv1_0))) then 
                icmp_ln6518_reg_175 <= icmp_ln65_reg_841;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln63_reg_851 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                icmp_ln6518_reg_175 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    indvar_flatten2_reg_231_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln63_reg_851 = ap_const_lv1_0))) then 
                indvar_flatten2_reg_231 <= add_ln63_1_reg_826;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln63_reg_851 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                indvar_flatten2_reg_231 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    j13_reg_203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln63_reg_851 = ap_const_lv1_0))) then 
                j13_reg_203 <= j_reg_831;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln63_reg_851 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                j13_reg_203 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                a_row_10_reg_855 <= a_row_10_fu_584_p3;
                a_row_9_reg_860 <= a_row_9_fu_591_p3;
                icmp_ln63_reg_851 <= icmp_ln63_fu_538_p2;
                icmp_ln63_reg_851_pp0_iter1_reg <= icmp_ln63_reg_851;
                icmp_ln70_reg_814 <= icmp_ln70_fu_280_p2;
                select_ln63_reg_799 <= select_ln63_fu_245_p3;
                tmp_1_reg_865 <= tmp_1_fu_625_p5;
                tmp_2_reg_870 <= tmp_2_fu_636_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln63_reg_851 = ap_const_lv1_0))) then
                a_row_1_fu_76 <= a_row_10_fu_584_p3;
                a_row_2_fu_80 <= a_row_9_fu_591_p3;
                a_row_fu_72 <= a_row_11_fu_577_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                a_row_9_reg_860_pp0_iter2_reg <= a_row_9_reg_860;
                icmp_ln63_reg_851_pp0_iter2_reg <= icmp_ln63_reg_851_pp0_iter1_reg;
                icmp_ln63_reg_851_pp0_iter3_reg <= icmp_ln63_reg_851_pp0_iter2_reg;
                icmp_ln63_reg_851_pp0_iter4_reg <= icmp_ln63_reg_851_pp0_iter3_reg;
                tmp_1_reg_865_pp0_iter2_reg <= tmp_1_reg_865;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then
                add_ln63_1_reg_826 <= add_ln63_1_fu_286_p2;
                add_ln63_reg_846 <= add_ln63_fu_532_p2;
                cmp8_reg_836 <= cmp8_fu_520_p2;
                i_reg_806 <= i_fu_253_p3;
                icmp_ln65_reg_841 <= icmp_ln65_fu_526_p2;
                j_reg_831 <= j_fu_514_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln63_2_fu_272_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1))) then
                b_copy_0_2_1_fu_108 <= b_copy_0_2_5_fu_437_p3;
                b_copy_0_2_2_fu_112 <= b_copy_0_2_7_fu_453_p3;
                b_copy_0_2_3_fu_116 <= b_copy_0_2_9_fu_461_p3;
                b_copy_1_2_1_fu_96 <= b_copy_1_2_5_fu_397_p3;
                b_copy_1_2_2_fu_100 <= b_copy_1_2_7_fu_413_p3;
                b_copy_1_2_3_fu_104 <= b_copy_1_2_9_fu_421_p3;
                b_copy_2_2_1_fu_84 <= b_copy_2_2_5_fu_357_p3;
                b_copy_2_2_2_fu_88 <= b_copy_2_2_7_fu_373_p3;
                b_copy_2_2_3_fu_92 <= b_copy_2_2_9_fu_381_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    a_address0 <= zext_ln63_fu_261_p1(2 - 1 downto 0);

    a_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            a_ce0 <= ap_const_logic_1;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    a_row_10_fu_584_p3 <= 
        a_row_4_fu_557_p4 when (icmp_ln70_reg_814(0) = '1') else 
        a_row_1_fu_76;
    a_row_11_fu_577_p3 <= 
        a_row_5_fu_567_p4 when (icmp_ln70_reg_814(0) = '1') else 
        a_row_fu_72;
    a_row_4_fu_557_p4 <= a_q0(15 downto 8);
    a_row_5_fu_567_p4 <= a_q0(23 downto 16);
    a_row_8_fu_553_p1 <= a_q0(8 - 1 downto 0);
    a_row_9_fu_591_p3 <= 
        a_row_8_fu_553_p1 when (icmp_ln70_reg_814(0) = '1') else 
        a_row_2_fu_80;
    add_ln63_1_fu_286_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten2_phi_fu_235_p6) + unsigned(ap_const_lv4_1));
    add_ln63_fu_532_p2 <= std_logic_vector(unsigned(i_fu_253_p3) + unsigned(ap_const_lv2_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, b_empty_n, select_ln63_2_fu_272_p3, res_full_n, ap_enable_reg_pp0_iter5)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (res_full_n = ap_const_logic_0)) or ((select_ln63_2_fu_272_p3 = ap_const_lv1_1) and (b_empty_n = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, b_empty_n, select_ln63_2_fu_272_p3, res_full_n, ap_enable_reg_pp0_iter5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (res_full_n = ap_const_logic_0)) or ((select_ln63_2_fu_272_p3 = ap_const_lv1_1) and (b_empty_n = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, b_empty_n, select_ln63_2_fu_272_p3, res_full_n, ap_enable_reg_pp0_iter5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (res_full_n = ap_const_logic_0)) or ((select_ln63_2_fu_272_p3 = ap_const_lv1_1) and (b_empty_n = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(b_empty_n, select_ln63_2_fu_272_p3)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((select_ln63_2_fu_272_p3 = ap_const_lv1_1) and (b_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter5_assign_proc : process(res_full_n)
    begin
                ap_block_state7_pp0_stage0_iter5 <= (res_full_n = ap_const_logic_0);
    end process;


    ap_condition_171_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_171 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, icmp_ln63_reg_851_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln63_reg_851_pp0_iter4_reg = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_logic_0;

    ap_phi_mux_add_ln6319_phi_fu_165_p6_assign_proc : process(add_ln6319_reg_161, add_ln63_reg_846, icmp_ln63_reg_851, ap_condition_171)
    begin
        if ((ap_const_boolean_1 = ap_condition_171)) then
            if ((icmp_ln63_reg_851 = ap_const_lv1_1)) then 
                ap_phi_mux_add_ln6319_phi_fu_165_p6 <= ap_const_lv2_1;
            elsif ((icmp_ln63_reg_851 = ap_const_lv1_0)) then 
                ap_phi_mux_add_ln6319_phi_fu_165_p6 <= add_ln63_reg_846;
            else 
                ap_phi_mux_add_ln6319_phi_fu_165_p6 <= add_ln6319_reg_161;
            end if;
        else 
            ap_phi_mux_add_ln6319_phi_fu_165_p6 <= add_ln6319_reg_161;
        end if; 
    end process;


    ap_phi_mux_cmp817_phi_fu_193_p6_assign_proc : process(cmp817_reg_189, cmp8_reg_836, icmp_ln63_reg_851, ap_condition_171)
    begin
        if ((ap_const_boolean_1 = ap_condition_171)) then
            if ((icmp_ln63_reg_851 = ap_const_lv1_1)) then 
                ap_phi_mux_cmp817_phi_fu_193_p6 <= ap_const_lv1_1;
            elsif ((icmp_ln63_reg_851 = ap_const_lv1_0)) then 
                ap_phi_mux_cmp817_phi_fu_193_p6 <= cmp8_reg_836;
            else 
                ap_phi_mux_cmp817_phi_fu_193_p6 <= cmp817_reg_189;
            end if;
        else 
            ap_phi_mux_cmp817_phi_fu_193_p6 <= cmp817_reg_189;
        end if; 
    end process;


    ap_phi_mux_i3_phi_fu_221_p6_assign_proc : process(i3_reg_217, i_reg_806, icmp_ln63_reg_851, ap_condition_171)
    begin
        if ((ap_const_boolean_1 = ap_condition_171)) then
            if ((icmp_ln63_reg_851 = ap_const_lv1_1)) then 
                ap_phi_mux_i3_phi_fu_221_p6 <= ap_const_lv2_0;
            elsif ((icmp_ln63_reg_851 = ap_const_lv1_0)) then 
                ap_phi_mux_i3_phi_fu_221_p6 <= i_reg_806;
            else 
                ap_phi_mux_i3_phi_fu_221_p6 <= i3_reg_217;
            end if;
        else 
            ap_phi_mux_i3_phi_fu_221_p6 <= i3_reg_217;
        end if; 
    end process;


    ap_phi_mux_icmp_ln6518_phi_fu_179_p6_assign_proc : process(icmp_ln6518_reg_175, icmp_ln65_reg_841, icmp_ln63_reg_851, ap_condition_171)
    begin
        if ((ap_const_boolean_1 = ap_condition_171)) then
            if ((icmp_ln63_reg_851 = ap_const_lv1_1)) then 
                ap_phi_mux_icmp_ln6518_phi_fu_179_p6 <= ap_const_lv1_0;
            elsif ((icmp_ln63_reg_851 = ap_const_lv1_0)) then 
                ap_phi_mux_icmp_ln6518_phi_fu_179_p6 <= icmp_ln65_reg_841;
            else 
                ap_phi_mux_icmp_ln6518_phi_fu_179_p6 <= icmp_ln6518_reg_175;
            end if;
        else 
            ap_phi_mux_icmp_ln6518_phi_fu_179_p6 <= icmp_ln6518_reg_175;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten2_phi_fu_235_p6_assign_proc : process(indvar_flatten2_reg_231, add_ln63_1_reg_826, icmp_ln63_reg_851, ap_condition_171)
    begin
        if ((ap_const_boolean_1 = ap_condition_171)) then
            if ((icmp_ln63_reg_851 = ap_const_lv1_1)) then 
                ap_phi_mux_indvar_flatten2_phi_fu_235_p6 <= ap_const_lv4_0;
            elsif ((icmp_ln63_reg_851 = ap_const_lv1_0)) then 
                ap_phi_mux_indvar_flatten2_phi_fu_235_p6 <= add_ln63_1_reg_826;
            else 
                ap_phi_mux_indvar_flatten2_phi_fu_235_p6 <= indvar_flatten2_reg_231;
            end if;
        else 
            ap_phi_mux_indvar_flatten2_phi_fu_235_p6 <= indvar_flatten2_reg_231;
        end if; 
    end process;


    ap_phi_mux_j13_phi_fu_207_p6_assign_proc : process(j13_reg_203, j_reg_831, icmp_ln63_reg_851, ap_condition_171)
    begin
        if ((ap_const_boolean_1 = ap_condition_171)) then
            if ((icmp_ln63_reg_851 = ap_const_lv1_1)) then 
                ap_phi_mux_j13_phi_fu_207_p6 <= ap_const_lv2_0;
            elsif ((icmp_ln63_reg_851 = ap_const_lv1_0)) then 
                ap_phi_mux_j13_phi_fu_207_p6 <= j_reg_831;
            else 
                ap_phi_mux_j13_phi_fu_207_p6 <= j13_reg_203;
            end if;
        else 
            ap_phi_mux_j13_phi_fu_207_p6 <= j13_reg_203;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, icmp_ln63_fu_538_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1) and (icmp_ln63_fu_538_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    b_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, b_empty_n, select_ln63_2_fu_272_p3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln63_2_fu_272_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1))) then 
            b_blk_n <= b_empty_n;
        else 
            b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    b_copy_0_2_10_fu_319_p1 <= b_dout(8 - 1 downto 0);
    b_copy_0_2_5_fu_437_p3 <= 
        b_copy_0_2_1_fu_108 when (icmp_ln70_fu_280_p2(0) = '1') else 
        b_copy_0_2_fu_429_p3;
    b_copy_0_2_6_fu_445_p3 <= 
        b_copy_0_2_10_fu_319_p1 when (icmp_ln77_fu_343_p2(0) = '1') else 
        b_copy_0_2_2_fu_112;
    b_copy_0_2_7_fu_453_p3 <= 
        b_copy_0_2_2_fu_112 when (icmp_ln70_fu_280_p2(0) = '1') else 
        b_copy_0_2_6_fu_445_p3;
    b_copy_0_2_9_fu_461_p3 <= 
        b_copy_0_2_10_fu_319_p1 when (icmp_ln70_fu_280_p2(0) = '1') else 
        b_copy_0_2_3_fu_116;
    b_copy_0_2_fu_429_p3 <= 
        b_copy_0_2_1_fu_108 when (icmp_ln77_fu_343_p2(0) = '1') else 
        b_copy_0_2_10_fu_319_p1;
    b_copy_1_2_10_fu_323_p4 <= b_dout(15 downto 8);
    b_copy_1_2_5_fu_397_p3 <= 
        b_copy_1_2_1_fu_96 when (icmp_ln70_fu_280_p2(0) = '1') else 
        b_copy_1_2_fu_389_p3;
    b_copy_1_2_6_fu_405_p3 <= 
        b_copy_1_2_10_fu_323_p4 when (icmp_ln77_fu_343_p2(0) = '1') else 
        b_copy_1_2_2_fu_100;
    b_copy_1_2_7_fu_413_p3 <= 
        b_copy_1_2_2_fu_100 when (icmp_ln70_fu_280_p2(0) = '1') else 
        b_copy_1_2_6_fu_405_p3;
    b_copy_1_2_9_fu_421_p3 <= 
        b_copy_1_2_10_fu_323_p4 when (icmp_ln70_fu_280_p2(0) = '1') else 
        b_copy_1_2_3_fu_104;
    b_copy_1_2_fu_389_p3 <= 
        b_copy_1_2_1_fu_96 when (icmp_ln77_fu_343_p2(0) = '1') else 
        b_copy_1_2_10_fu_323_p4;
    b_copy_2_2_10_fu_333_p4 <= b_dout(23 downto 16);
    b_copy_2_2_5_fu_357_p3 <= 
        b_copy_2_2_1_fu_84 when (icmp_ln70_fu_280_p2(0) = '1') else 
        b_copy_2_2_fu_349_p3;
    b_copy_2_2_6_fu_365_p3 <= 
        b_copy_2_2_10_fu_333_p4 when (icmp_ln77_fu_343_p2(0) = '1') else 
        b_copy_2_2_2_fu_88;
    b_copy_2_2_7_fu_373_p3 <= 
        b_copy_2_2_2_fu_88 when (icmp_ln70_fu_280_p2(0) = '1') else 
        b_copy_2_2_6_fu_365_p3;
    b_copy_2_2_9_fu_381_p3 <= 
        b_copy_2_2_10_fu_333_p4 when (icmp_ln70_fu_280_p2(0) = '1') else 
        b_copy_2_2_3_fu_92;
    b_copy_2_2_fu_349_p3 <= 
        b_copy_2_2_1_fu_84 when (icmp_ln77_fu_343_p2(0) = '1') else 
        b_copy_2_2_10_fu_333_p4;

    b_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, select_ln63_2_fu_272_p3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln63_2_fu_272_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1))) then 
            b_read <= ap_const_logic_1;
        else 
            b_read <= ap_const_logic_0;
        end if; 
    end process;

    cmp8_fu_520_p2 <= "1" when (i_fu_253_p3 = ap_const_lv2_0) else "0";
    cmp8_mid1_fu_266_p2 <= "1" when (ap_phi_mux_add_ln6319_phi_fu_165_p6 = ap_const_lv2_0) else "0";

    grp_fu_701_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_701_ce <= ap_const_logic_1;
        else 
            grp_fu_701_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_709_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_709_ce <= ap_const_logic_1;
        else 
            grp_fu_709_ce <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_253_p3 <= 
        ap_phi_mux_add_ln6319_phi_fu_165_p6 when (ap_phi_mux_icmp_ln6518_phi_fu_179_p6(0) = '1') else 
        ap_phi_mux_i3_phi_fu_221_p6;
    icmp_ln63_fu_538_p2 <= "1" when (ap_phi_mux_indvar_flatten2_phi_fu_235_p6 = ap_const_lv4_8) else "0";
    icmp_ln65_fu_526_p2 <= "1" when (j_fu_514_p2 = ap_const_lv2_3) else "0";
    icmp_ln70_fu_280_p2 <= "1" when (select_ln63_fu_245_p3 = ap_const_lv2_0) else "0";
    icmp_ln77_fu_343_p2 <= "1" when (select_ln63_fu_245_p3 = ap_const_lv2_1) else "0";
    j_fu_514_p2 <= std_logic_vector(unsigned(select_ln63_fu_245_p3) + unsigned(ap_const_lv2_1));

    res_blk_n_assign_proc : process(res_full_n, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            res_blk_n <= res_full_n;
        else 
            res_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_din <= grp_fu_709_p3;

    res_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            res_write <= ap_const_logic_1;
        else 
            res_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln63_2_fu_272_p3 <= 
        cmp8_mid1_fu_266_p2 when (ap_phi_mux_icmp_ln6518_phi_fu_179_p6(0) = '1') else 
        ap_phi_mux_cmp817_phi_fu_193_p6;
    select_ln63_fu_245_p3 <= 
        ap_const_lv2_0 when (ap_phi_mux_icmp_ln6518_phi_fu_179_p6(0) = '1') else 
        ap_phi_mux_j13_phi_fu_207_p6;
    zext_ln63_fu_261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_253_p3),64));
end behav;
