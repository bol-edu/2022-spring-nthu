// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="aaa_aaa,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.763000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=647,HLS_SYN_LUT=2679,HLS_VERSION=2020_2}" *)

module aaa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0,
        a_1,
        a_2,
        a_3,
        a_4,
        a_5,
        a_6,
        a_7,
        a_8,
        a_9,
        a_10,
        a_11,
        b_0,
        b_1,
        b_2,
        b_3,
        b_4,
        b_5,
        b_6,
        b_7,
        b_8,
        b_9,
        b_10,
        b_11,
        r_0,
        r_0_ap_vld,
        r_1_i,
        r_1_o,
        r_1_o_ap_vld,
        r_2_i,
        r_2_o,
        r_2_o_ap_vld,
        r_3_i,
        r_3_o,
        r_3_o_ap_vld,
        r_4_i,
        r_4_o,
        r_4_o_ap_vld,
        r_5_i,
        r_5_o,
        r_5_o_ap_vld,
        r_6_i,
        r_6_o,
        r_6_o_ap_vld,
        r_7_i,
        r_7_o,
        r_7_o_ap_vld,
        r_8_i,
        r_8_o,
        r_8_o_ap_vld,
        r_9_i,
        r_9_o,
        r_9_o_ap_vld,
        r_10_i,
        r_10_o,
        r_10_o_ap_vld,
        r_11,
        r_11_ap_vld
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] a_0;
input  [31:0] a_1;
input  [31:0] a_2;
input  [31:0] a_3;
input  [31:0] a_4;
input  [31:0] a_5;
input  [31:0] a_6;
input  [31:0] a_7;
input  [31:0] a_8;
input  [31:0] a_9;
input  [31:0] a_10;
input  [31:0] a_11;
input  [31:0] b_0;
input  [31:0] b_1;
input  [31:0] b_2;
input  [31:0] b_3;
input  [31:0] b_4;
input  [31:0] b_5;
input  [31:0] b_6;
input  [31:0] b_7;
input  [31:0] b_8;
input  [31:0] b_9;
input  [31:0] b_10;
input  [31:0] b_11;
output  [31:0] r_0;
output   r_0_ap_vld;
input  [31:0] r_1_i;
output  [31:0] r_1_o;
output   r_1_o_ap_vld;
input  [31:0] r_2_i;
output  [31:0] r_2_o;
output   r_2_o_ap_vld;
input  [31:0] r_3_i;
output  [31:0] r_3_o;
output   r_3_o_ap_vld;
input  [31:0] r_4_i;
output  [31:0] r_4_o;
output   r_4_o_ap_vld;
input  [31:0] r_5_i;
output  [31:0] r_5_o;
output   r_5_o_ap_vld;
input  [31:0] r_6_i;
output  [31:0] r_6_o;
output   r_6_o_ap_vld;
input  [31:0] r_7_i;
output  [31:0] r_7_o;
output   r_7_o_ap_vld;
input  [31:0] r_8_i;
output  [31:0] r_8_o;
output   r_8_o_ap_vld;
input  [31:0] r_9_i;
output  [31:0] r_9_o;
output   r_9_o_ap_vld;
input  [31:0] r_10_i;
output  [31:0] r_10_o;
output   r_10_o_ap_vld;
output  [31:0] r_11;
output   r_11_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg r_0_ap_vld;
reg[31:0] r_1_o;
reg r_1_o_ap_vld;
reg[31:0] r_2_o;
reg r_2_o_ap_vld;
reg[31:0] r_3_o;
reg r_3_o_ap_vld;
reg[31:0] r_4_o;
reg r_4_o_ap_vld;
reg[31:0] r_5_o;
reg r_5_o_ap_vld;
reg[31:0] r_6_o;
reg r_6_o_ap_vld;
reg[31:0] r_7_o;
reg r_7_o_ap_vld;
reg[31:0] r_8_o;
reg r_8_o_ap_vld;
reg[31:0] r_9_o;
reg r_9_o_ap_vld;
reg[31:0] r_10_o;
reg r_10_o_ap_vld;
reg r_11_ap_vld;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] add_ln14_4_fu_482_p2;
reg   [31:0] add_ln14_4_reg_884;
wire   [31:0] add_ln14_9_fu_512_p2;
reg   [31:0] add_ln14_9_reg_889;
wire   [31:0] add_ln14_14_fu_542_p2;
reg   [31:0] add_ln14_14_reg_894;
wire   [31:0] add_ln14_19_fu_572_p2;
reg   [31:0] add_ln14_19_reg_899;
wire   [31:0] add_ln14_24_fu_602_p2;
reg   [31:0] add_ln14_24_reg_904;
wire   [31:0] add_ln14_29_fu_632_p2;
reg   [31:0] add_ln14_29_reg_909;
wire   [31:0] add_ln14_34_fu_662_p2;
reg   [31:0] add_ln14_34_reg_914;
wire   [31:0] add_ln14_39_fu_692_p2;
reg   [31:0] add_ln14_39_reg_919;
wire   [31:0] add_ln14_44_fu_722_p2;
reg   [31:0] add_ln14_44_reg_924;
wire   [31:0] add_ln14_49_fu_752_p2;
reg   [31:0] add_ln14_49_reg_929;
wire   [31:0] add_ln15_fu_758_p2;
reg   [31:0] add_ln15_reg_934;
wire   [31:0] add_ln15_2_fu_764_p2;
reg   [31:0] add_ln15_2_reg_939;
wire   [31:0] add_ln15_4_fu_770_p2;
reg   [31:0] add_ln15_4_reg_944;
wire   [31:0] add_ln15_6_fu_776_p2;
reg   [31:0] add_ln15_6_reg_949;
wire   [31:0] add_ln15_8_fu_782_p2;
reg   [31:0] add_ln15_8_reg_954;
wire   [31:0] add_ln15_10_fu_788_p2;
reg   [31:0] add_ln15_10_reg_959;
wire   [31:0] add_ln15_12_fu_794_p2;
reg   [31:0] add_ln15_12_reg_964;
wire   [31:0] add_ln15_14_fu_800_p2;
reg   [31:0] add_ln15_14_reg_969;
wire   [31:0] add_ln15_16_fu_806_p2;
reg   [31:0] add_ln15_16_reg_974;
wire   [31:0] add_ln15_18_fu_812_p2;
reg   [31:0] add_ln15_18_reg_979;
reg   [3:0] ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20;
wire   [3:0] ap_phi_mux_i_phi_fu_414_p4;
reg   [3:0] i_reg_410;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln11_fu_878_p2;
wire   [31:0] add_ln15_15_fu_830_p2;
wire   [31:0] add_ln15_19_fu_818_p2;
wire   [31:0] add_ln15_13_fu_836_p2;
wire   [31:0] add_ln15_17_fu_824_p2;
wire   [31:0] add_ln15_11_fu_842_p2;
wire   [31:0] add_ln15_9_fu_848_p2;
wire   [31:0] add_ln15_7_fu_854_p2;
wire   [31:0] add_ln15_5_fu_860_p2;
wire   [31:0] add_ln15_1_fu_872_p2;
wire   [31:0] add_ln14_fu_458_p2;
wire   [31:0] add_ln14_2_fu_470_p2;
wire   [31:0] add_ln14_3_fu_476_p2;
wire   [31:0] add_ln14_1_fu_464_p2;
wire   [31:0] add_ln14_5_fu_488_p2;
wire   [31:0] add_ln14_7_fu_500_p2;
wire   [31:0] add_ln14_8_fu_506_p2;
wire   [31:0] add_ln14_6_fu_494_p2;
wire   [31:0] add_ln14_10_fu_518_p2;
wire   [31:0] add_ln14_12_fu_530_p2;
wire   [31:0] add_ln14_13_fu_536_p2;
wire   [31:0] add_ln14_11_fu_524_p2;
wire   [31:0] add_ln14_15_fu_548_p2;
wire   [31:0] add_ln14_17_fu_560_p2;
wire   [31:0] add_ln14_18_fu_566_p2;
wire   [31:0] add_ln14_16_fu_554_p2;
wire   [31:0] add_ln14_20_fu_578_p2;
wire   [31:0] add_ln14_22_fu_590_p2;
wire   [31:0] add_ln14_23_fu_596_p2;
wire   [31:0] add_ln14_21_fu_584_p2;
wire   [31:0] add_ln14_25_fu_608_p2;
wire   [31:0] add_ln14_27_fu_620_p2;
wire   [31:0] add_ln14_28_fu_626_p2;
wire   [31:0] add_ln14_26_fu_614_p2;
wire   [31:0] add_ln14_30_fu_638_p2;
wire   [31:0] add_ln14_32_fu_650_p2;
wire   [31:0] add_ln14_33_fu_656_p2;
wire   [31:0] add_ln14_31_fu_644_p2;
wire   [31:0] add_ln14_35_fu_668_p2;
wire   [31:0] add_ln14_37_fu_680_p2;
wire   [31:0] add_ln14_38_fu_686_p2;
wire   [31:0] add_ln14_36_fu_674_p2;
wire   [31:0] add_ln14_40_fu_698_p2;
wire   [31:0] add_ln14_42_fu_710_p2;
wire   [31:0] add_ln14_43_fu_716_p2;
wire   [31:0] add_ln14_41_fu_704_p2;
wire   [31:0] add_ln14_45_fu_728_p2;
wire   [31:0] add_ln14_47_fu_740_p2;
wire   [31:0] add_ln14_48_fu_746_p2;
wire   [31:0] add_ln14_46_fu_734_p2;
wire    ap_CS_fsm_state3;
reg   [2:0] ap_NS_fsm;
reg    ap_condition_182;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_410 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln11_fu_878_p2 == 1'd0))) begin
        i_reg_410 <= ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln14_14_reg_894 <= add_ln14_14_fu_542_p2;
        add_ln14_19_reg_899 <= add_ln14_19_fu_572_p2;
        add_ln14_24_reg_904 <= add_ln14_24_fu_602_p2;
        add_ln14_29_reg_909 <= add_ln14_29_fu_632_p2;
        add_ln14_34_reg_914 <= add_ln14_34_fu_662_p2;
        add_ln14_39_reg_919 <= add_ln14_39_fu_692_p2;
        add_ln14_44_reg_924 <= add_ln14_44_fu_722_p2;
        add_ln14_49_reg_929 <= add_ln14_49_fu_752_p2;
        add_ln14_4_reg_884 <= add_ln14_4_fu_482_p2;
        add_ln14_9_reg_889 <= add_ln14_9_fu_512_p2;
        add_ln15_10_reg_959 <= add_ln15_10_fu_788_p2;
        add_ln15_12_reg_964 <= add_ln15_12_fu_794_p2;
        add_ln15_14_reg_969 <= add_ln15_14_fu_800_p2;
        add_ln15_16_reg_974 <= add_ln15_16_fu_806_p2;
        add_ln15_18_reg_979 <= add_ln15_18_fu_812_p2;
        add_ln15_2_reg_939 <= add_ln15_2_fu_764_p2;
        add_ln15_4_reg_944 <= add_ln15_4_fu_770_p2;
        add_ln15_6_reg_949 <= add_ln15_6_fu_776_p2;
        add_ln15_8_reg_954 <= add_ln15_8_fu_782_p2;
        add_ln15_reg_934 <= add_ln15_fu_758_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((1'b1 == ap_condition_182)) begin
            ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20 = 4'd1;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd1)) begin
            ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20 = 4'd2;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd2)) begin
            ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20 = 4'd3;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd3)) begin
            ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20 = 4'd4;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd4)) begin
            ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20 = 4'd5;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd5)) begin
            ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20 = 4'd6;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd6)) begin
            ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20 = 4'd7;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd7)) begin
            ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20 = 4'd8;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd8)) begin
            ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20 = 4'd9;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd9)) begin
            ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20 = 4'd10;
        end else begin
            ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20 = 'bx;
        end
    end else begin
        ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((ap_phi_mux_i_phi_fu_414_p4 == 4'd0) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd10) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd11) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd12) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd13) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd14) | (ap_phi_mux_i_phi_fu_414_p4 == 4'd15))))))))) begin
        r_0_ap_vld = 1'b1;
    end else begin
        r_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd8))) begin
        r_10_o = add_ln15_19_fu_818_p2;
    end else begin
        r_10_o = r_10_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd8))) begin
        r_10_o_ap_vld = 1'b1;
    end else begin
        r_10_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd9))) begin
        r_11_ap_vld = 1'b1;
    end else begin
        r_11_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd1))) begin
        r_1_o = add_ln14_14_reg_894;
    end else begin
        r_1_o = r_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd1))) begin
        r_1_o_ap_vld = 1'b1;
    end else begin
        r_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((1'b1 == ap_condition_182)) begin
            r_2_o = add_ln15_1_fu_872_p2;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd2)) begin
            r_2_o = add_ln14_19_reg_899;
        end else begin
            r_2_o = r_2_i;
        end
    end else begin
        r_2_o = r_2_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & ((ap_phi_mux_i_phi_fu_414_p4 == 4'd0) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd10) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd11) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd12) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd13) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd14) | (ap_phi_mux_i_phi_fu_414_p4 == 4'd15)))))))) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd2)))) begin
        r_2_o_ap_vld = 1'b1;
    end else begin
        r_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd1)) begin
            r_3_o = add_ln15_5_fu_860_p2;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd3)) begin
            r_3_o = add_ln14_24_reg_904;
        end else begin
            r_3_o = r_3_i;
        end
    end else begin
        r_3_o = r_3_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd1)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd3)))) begin
        r_3_o_ap_vld = 1'b1;
    end else begin
        r_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd2)) begin
            r_4_o = add_ln15_7_fu_854_p2;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd4)) begin
            r_4_o = add_ln14_29_reg_909;
        end else begin
            r_4_o = r_4_i;
        end
    end else begin
        r_4_o = r_4_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd2)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd4)))) begin
        r_4_o_ap_vld = 1'b1;
    end else begin
        r_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd3)) begin
            r_5_o = add_ln15_9_fu_848_p2;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd5)) begin
            r_5_o = add_ln14_34_reg_914;
        end else begin
            r_5_o = r_5_i;
        end
    end else begin
        r_5_o = r_5_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd3)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd5)))) begin
        r_5_o_ap_vld = 1'b1;
    end else begin
        r_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd4)) begin
            r_6_o = add_ln15_11_fu_842_p2;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd6)) begin
            r_6_o = add_ln14_39_reg_919;
        end else begin
            r_6_o = r_6_i;
        end
    end else begin
        r_6_o = r_6_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd4)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd6)))) begin
        r_6_o_ap_vld = 1'b1;
    end else begin
        r_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd5)) begin
            r_7_o = add_ln15_13_fu_836_p2;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd7)) begin
            r_7_o = add_ln14_44_reg_924;
        end else begin
            r_7_o = r_7_i;
        end
    end else begin
        r_7_o = r_7_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd5)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd7)))) begin
        r_7_o_ap_vld = 1'b1;
    end else begin
        r_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd6)) begin
            r_8_o = add_ln15_15_fu_830_p2;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd8)) begin
            r_8_o = add_ln14_49_reg_929;
        end else begin
            r_8_o = r_8_i;
        end
    end else begin
        r_8_o = r_8_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd6)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd8)))) begin
        r_8_o_ap_vld = 1'b1;
    end else begin
        r_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd9)) begin
            r_9_o = add_ln14_9_reg_889;
        end else if ((ap_phi_mux_i_phi_fu_414_p4 == 4'd7)) begin
            r_9_o = add_ln15_17_fu_824_p2;
        end else begin
            r_9_o = r_9_i;
        end
    end else begin
        r_9_o = r_9_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd7)) | ((1'b1 == ap_CS_fsm_state2) & (ap_phi_mux_i_phi_fu_414_p4 == 4'd9)))) begin
        r_9_o_ap_vld = 1'b1;
    end else begin
        r_9_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln11_fu_878_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14_10_fu_518_p2 = (b_2 + a_3);

assign add_ln14_11_fu_524_p2 = (add_ln14_10_fu_518_p2 + b_1);

assign add_ln14_12_fu_530_p2 = (a_2 + b_3);

assign add_ln14_13_fu_536_p2 = (add_ln14_12_fu_530_p2 + a_1);

assign add_ln14_14_fu_542_p2 = (add_ln14_13_fu_536_p2 + add_ln14_11_fu_524_p2);

assign add_ln14_15_fu_548_p2 = (b_3 + a_4);

assign add_ln14_16_fu_554_p2 = (add_ln14_15_fu_548_p2 + b_2);

assign add_ln14_17_fu_560_p2 = (a_3 + b_4);

assign add_ln14_18_fu_566_p2 = (add_ln14_17_fu_560_p2 + a_2);

assign add_ln14_19_fu_572_p2 = (add_ln14_18_fu_566_p2 + add_ln14_16_fu_554_p2);

assign add_ln14_1_fu_464_p2 = (add_ln14_fu_458_p2 + b_0);

assign add_ln14_20_fu_578_p2 = (b_4 + a_5);

assign add_ln14_21_fu_584_p2 = (add_ln14_20_fu_578_p2 + b_3);

assign add_ln14_22_fu_590_p2 = (a_4 + b_5);

assign add_ln14_23_fu_596_p2 = (add_ln14_22_fu_590_p2 + a_3);

assign add_ln14_24_fu_602_p2 = (add_ln14_23_fu_596_p2 + add_ln14_21_fu_584_p2);

assign add_ln14_25_fu_608_p2 = (b_5 + a_6);

assign add_ln14_26_fu_614_p2 = (add_ln14_25_fu_608_p2 + b_4);

assign add_ln14_27_fu_620_p2 = (a_5 + b_6);

assign add_ln14_28_fu_626_p2 = (add_ln14_27_fu_620_p2 + a_4);

assign add_ln14_29_fu_632_p2 = (add_ln14_28_fu_626_p2 + add_ln14_26_fu_614_p2);

assign add_ln14_2_fu_470_p2 = (a_1 + b_2);

assign add_ln14_30_fu_638_p2 = (b_6 + a_7);

assign add_ln14_31_fu_644_p2 = (add_ln14_30_fu_638_p2 + b_5);

assign add_ln14_32_fu_650_p2 = (a_6 + b_7);

assign add_ln14_33_fu_656_p2 = (add_ln14_32_fu_650_p2 + a_5);

assign add_ln14_34_fu_662_p2 = (add_ln14_33_fu_656_p2 + add_ln14_31_fu_644_p2);

assign add_ln14_35_fu_668_p2 = (b_7 + a_8);

assign add_ln14_36_fu_674_p2 = (add_ln14_35_fu_668_p2 + b_6);

assign add_ln14_37_fu_680_p2 = (a_7 + b_8);

assign add_ln14_38_fu_686_p2 = (add_ln14_37_fu_680_p2 + a_6);

assign add_ln14_39_fu_692_p2 = (add_ln14_38_fu_686_p2 + add_ln14_36_fu_674_p2);

assign add_ln14_3_fu_476_p2 = (add_ln14_2_fu_470_p2 + a_0);

assign add_ln14_40_fu_698_p2 = (b_8 + a_9);

assign add_ln14_41_fu_704_p2 = (add_ln14_40_fu_698_p2 + b_7);

assign add_ln14_42_fu_710_p2 = (a_8 + b_9);

assign add_ln14_43_fu_716_p2 = (add_ln14_42_fu_710_p2 + a_7);

assign add_ln14_44_fu_722_p2 = (add_ln14_43_fu_716_p2 + add_ln14_41_fu_704_p2);

assign add_ln14_45_fu_728_p2 = (b_9 + a_10);

assign add_ln14_46_fu_734_p2 = (add_ln14_45_fu_728_p2 + b_8);

assign add_ln14_47_fu_740_p2 = (a_9 + b_10);

assign add_ln14_48_fu_746_p2 = (add_ln14_47_fu_740_p2 + a_8);

assign add_ln14_49_fu_752_p2 = (add_ln14_48_fu_746_p2 + add_ln14_46_fu_734_p2);

assign add_ln14_4_fu_482_p2 = (add_ln14_3_fu_476_p2 + add_ln14_1_fu_464_p2);

assign add_ln14_5_fu_488_p2 = (b_10 + a_11);

assign add_ln14_6_fu_494_p2 = (add_ln14_5_fu_488_p2 + b_9);

assign add_ln14_7_fu_500_p2 = (a_10 + b_11);

assign add_ln14_8_fu_506_p2 = (add_ln14_7_fu_500_p2 + a_9);

assign add_ln14_9_fu_512_p2 = (add_ln14_8_fu_506_p2 + add_ln14_6_fu_494_p2);

assign add_ln14_fu_458_p2 = (b_1 + a_2);

assign add_ln15_10_fu_788_p2 = (add_ln14_29_fu_632_p2 + 32'd1);

assign add_ln15_11_fu_842_p2 = (add_ln15_10_reg_959 + r_5_i);

assign add_ln15_12_fu_794_p2 = (add_ln14_34_fu_662_p2 + 32'd1);

assign add_ln15_13_fu_836_p2 = (add_ln15_12_reg_964 + r_6_i);

assign add_ln15_14_fu_800_p2 = (add_ln14_39_fu_692_p2 + 32'd1);

assign add_ln15_15_fu_830_p2 = (add_ln15_14_reg_969 + r_7_i);

assign add_ln15_16_fu_806_p2 = (add_ln14_44_fu_722_p2 + 32'd1);

assign add_ln15_17_fu_824_p2 = (add_ln15_16_reg_974 + r_8_i);

assign add_ln15_18_fu_812_p2 = (add_ln14_49_fu_752_p2 + 32'd1);

assign add_ln15_19_fu_818_p2 = (add_ln15_18_reg_979 + r_9_i);

assign add_ln15_1_fu_872_p2 = (add_ln15_reg_934 + r_1_i);

assign add_ln15_2_fu_764_p2 = (add_ln14_9_fu_512_p2 + 32'd1);

assign add_ln15_4_fu_770_p2 = (add_ln14_14_fu_542_p2 + 32'd1);

assign add_ln15_5_fu_860_p2 = (add_ln15_4_reg_944 + r_2_i);

assign add_ln15_6_fu_776_p2 = (add_ln14_19_fu_572_p2 + 32'd1);

assign add_ln15_7_fu_854_p2 = (add_ln15_6_reg_949 + r_3_i);

assign add_ln15_8_fu_782_p2 = (add_ln14_24_fu_602_p2 + 32'd1);

assign add_ln15_9_fu_848_p2 = (add_ln15_8_reg_954 + r_4_i);

assign add_ln15_fu_758_p2 = (add_ln14_4_fu_482_p2 + 32'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_condition_182 = ((ap_phi_mux_i_phi_fu_414_p4 == 4'd0) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd10) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd11) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd12) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd13) | ((ap_phi_mux_i_phi_fu_414_p4 == 4'd14) | (ap_phi_mux_i_phi_fu_414_p4 == 4'd15)))))));
end

assign ap_phi_mux_i_phi_fu_414_p4 = i_reg_410;

assign icmp_ln11_fu_878_p2 = ((ap_phi_mux_indvars_iv_next2070107144181219247_phi_fu_425_p20 == 4'd10) ? 1'b1 : 1'b0);

assign r_0 = add_ln14_4_reg_884;

assign r_11 = (add_ln15_2_reg_939 + r_10_i);

endmodule //aaa
