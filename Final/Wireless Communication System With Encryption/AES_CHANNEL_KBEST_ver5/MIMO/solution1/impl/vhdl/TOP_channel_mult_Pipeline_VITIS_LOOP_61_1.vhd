-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity TOP_channel_mult_Pipeline_VITIS_LOOP_61_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    channel_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    channel_out_full_n : IN STD_LOGIC;
    channel_out_write : OUT STD_LOGIC;
    CHANNEL_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    CHANNEL_V_ce0 : OUT STD_LOGIC;
    CHANNEL_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    CHANNEL_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    CHANNEL_V_ce1 : OUT STD_LOGIC;
    CHANNEL_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    xr_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    xr_empty_n : IN STD_LOGIC;
    xr_read : OUT STD_LOGIC;
    xi_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    xi_empty_n : IN STD_LOGIC;
    xi_read : OUT STD_LOGIC );
end;


architecture behav of TOP_channel_mult_Pipeline_VITIS_LOOP_61_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000100000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000001000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000010000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000100000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000001000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000010000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000100000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (31 downto 0) := "00000001000000000000000000000000";
    constant ap_ST_fsm_pp0_stage25 : STD_LOGIC_VECTOR (31 downto 0) := "00000010000000000000000000000000";
    constant ap_ST_fsm_pp0_stage26 : STD_LOGIC_VECTOR (31 downto 0) := "00000100000000000000000000000000";
    constant ap_ST_fsm_pp0_stage27 : STD_LOGIC_VECTOR (31 downto 0) := "00001000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage28 : STD_LOGIC_VECTOR (31 downto 0) := "00010000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage29 : STD_LOGIC_VECTOR (31 downto 0) := "00100000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage30 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage31 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011001";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_21 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100001";
    constant ap_const_lv64_1A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011010";
    constant ap_const_lv64_28 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101000";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_22 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100010";
    constant ap_const_lv64_1B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011011";
    constant ap_const_lv64_30 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110000";
    constant ap_const_lv64_29 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101001";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_1C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011100";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv64_2A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101010";
    constant ap_const_lv64_23 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100011";
    constant ap_const_lv64_38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111000";
    constant ap_const_lv64_31 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110001";
    constant ap_const_lv64_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100100";
    constant ap_const_lv64_1D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011101";
    constant ap_const_lv64_32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110010";
    constant ap_const_lv64_2B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101011";
    constant ap_const_lv64_39 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111001";
    constant ap_const_lv64_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010111";
    constant ap_const_lv64_25 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100101";
    constant ap_const_lv64_1E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011110";
    constant ap_const_lv64_33 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110011";
    constant ap_const_lv64_2C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101100";
    constant ap_const_lv64_3A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111010";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv64_2D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101101";
    constant ap_const_lv64_26 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100110";
    constant ap_const_lv64_3B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111011";
    constant ap_const_lv64_34 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110100";
    constant ap_const_lv64_2E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101110";
    constant ap_const_lv64_27 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100111";
    constant ap_const_lv64_3C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111100";
    constant ap_const_lv64_35 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110101";
    constant ap_const_lv64_36 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110110";
    constant ap_const_lv64_2F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101111";
    constant ap_const_lv64_3D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111101";
    constant ap_const_lv64_37 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110111";
    constant ap_const_lv64_3F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111111";
    constant ap_const_lv64_3E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage31 : signal is "none";
    signal icmp_ln61_reg_2618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state32_pp0_stage31_iter0 : BOOLEAN;
    signal ap_block_pp0_stage31_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage31 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal xr_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal xi_blk_n : STD_LOGIC;
    signal channel_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_pp0_stage22 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage25 : signal is "none";
    signal ap_block_pp0_stage25 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage28 : signal is "none";
    signal ap_block_pp0_stage28 : BOOLEAN;
    signal ap_block_pp0_stage31 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal reg_786 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state35_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal reg_790 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state37_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state39_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state41_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_state44_pp0_stage11_iter1 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal ap_block_state23_pp0_stage22_iter0 : BOOLEAN;
    signal ap_block_pp0_stage22_11001 : BOOLEAN;
    signal ap_block_state26_pp0_stage25_iter0 : BOOLEAN;
    signal ap_block_pp0_stage25_11001 : BOOLEAN;
    signal ap_block_state29_pp0_stage28_iter0 : BOOLEAN;
    signal ap_block_pp0_stage28_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage30 : signal is "none";
    signal ap_block_state31_pp0_stage30_iter0 : BOOLEAN;
    signal ap_block_pp0_stage30_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_795 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_799 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state42_pp0_stage9_iter1 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal ap_block_pp0_stage31_11001 : BOOLEAN;
    signal icmp_ln61_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1171_fu_828_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_reg_2632 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_73_fu_836_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_73_reg_2659 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state36_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal DATA_TEMP_V_4_reg_2691 : STD_LOGIC_VECTOR (15 downto 0);
    signal DATA_TEMP_V_5_reg_2696 : STD_LOGIC_VECTOR (15 downto 0);
    signal DATA_TEMP_V_7_reg_2721 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1171_75_fu_873_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_75_reg_2731 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state38_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal tmp_56_reg_2763 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1171_77_fu_894_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_77_reg_2768 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_69_reg_2825 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state40_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal tmp_64_reg_2845 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_58_reg_2875 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1171_79_fu_1014_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_79_reg_2880 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_70_reg_2902 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_76_reg_2907 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_65_reg_2927 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state43_pp0_stage10_iter1 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal tmp_71_reg_2962 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_77_reg_2967 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_59_reg_2992 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1171_81_fu_1119_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_81_reg_2997 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_83_reg_3024 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_72_reg_3044 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal tmp_78_reg_3084 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_84_reg_3094 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal tmp_60_reg_3114 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_66_reg_3119 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_90_reg_3134 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1171_83_fu_1263_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_83_reg_3159 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_73_reg_3181 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_79_reg_3211 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_85_reg_3221 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal tmp_91_reg_3256 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_97_reg_3266 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal tmp_61_reg_3281 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_68_reg_3286 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1171_85_fu_1421_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_85_reg_3321 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_80_reg_3343 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_block_state21_pp0_stage20_iter0 : BOOLEAN;
    signal ap_block_pp0_stage20_11001 : BOOLEAN;
    signal tmp_86_reg_3378 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_92_reg_3388 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_block_state22_pp0_stage21_iter0 : BOOLEAN;
    signal ap_block_pp0_stage21_11001 : BOOLEAN;
    signal tmp_98_reg_3423 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_104_reg_3433 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_75_reg_3453 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_state24_pp0_stage23_iter0 : BOOLEAN;
    signal ap_block_pp0_stage23_11001 : BOOLEAN;
    signal tmp_81_reg_3483 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_87_reg_3493 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal ap_block_state25_pp0_stage24_iter0 : BOOLEAN;
    signal ap_block_pp0_stage24_11001 : BOOLEAN;
    signal tmp_93_reg_3528 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_99_reg_3538 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_105_reg_3578 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage26 : signal is "none";
    signal ap_block_state27_pp0_stage26_iter0 : BOOLEAN;
    signal ap_block_pp0_stage26_11001 : BOOLEAN;
    signal tmp_82_reg_3598 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_88_reg_3603 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage27 : signal is "none";
    signal ap_block_state28_pp0_stage27_iter0 : BOOLEAN;
    signal ap_block_pp0_stage27_11001 : BOOLEAN;
    signal tmp_94_reg_3643 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_100_reg_3648 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_106_reg_3698 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage29 : signal is "none";
    signal ap_block_state30_pp0_stage29_iter0 : BOOLEAN;
    signal ap_block_pp0_stage29_11001 : BOOLEAN;
    signal tmp_89_reg_3713 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_95_reg_3718 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_101_reg_3768 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_107_reg_3778 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_96_reg_3793 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_108_reg_3828 : STD_LOGIC_VECTOR (15 downto 0);
    signal CHANNEL_V_load_63_reg_3833 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_103_reg_3838 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_109_reg_3863 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_110_reg_3878 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal ap_block_pp0_stage20 : BOOLEAN;
    signal ap_block_pp0_stage21 : BOOLEAN;
    signal ap_block_pp0_stage23 : BOOLEAN;
    signal ap_block_pp0_stage24 : BOOLEAN;
    signal ap_block_pp0_stage26 : BOOLEAN;
    signal ap_block_pp0_stage27 : BOOLEAN;
    signal ap_block_pp0_stage29 : BOOLEAN;
    signal ap_block_pp0_stage30 : BOOLEAN;
    signal data_idx_fu_178 : STD_LOGIC_VECTOR (4 downto 0);
    signal data_idx_4_fu_817_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_data_idx_3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage22_01001 : BOOLEAN;
    signal ap_block_pp0_stage25_01001 : BOOLEAN;
    signal ap_block_pp0_stage28_01001 : BOOLEAN;
    signal ap_block_pp0_stage31_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage5_01001 : BOOLEAN;
    signal ap_block_pp0_stage11_01001 : BOOLEAN;
    signal sext_ln1171_fu_828_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2095_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_s_fu_856_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_56_fu_885_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2102_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2111_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_62_fu_902_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_63_fu_934_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2117_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_63_fu_934_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2125_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_57_fu_964_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2131_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_57_fu_964_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_64_fu_981_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2140_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_58_fu_1005_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2149_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_70_fu_1028_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2158_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2166_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_65_fu_1050_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2172_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_71_fu_1084_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2180_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_77_fu_1093_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2188_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_59_fu_1110_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2196_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2205_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_72_fu_1150_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2211_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_78_fu_1191_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2219_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_84_fu_1204_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2227_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_60_fu_1217_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2235_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_66_fu_1226_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2244_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2252_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_83_fu_1263_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_73_fu_1275_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2258_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_79_fu_1305_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2266_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_85_fu_1318_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2274_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_67_fu_1341_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2282_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_67_fu_1341_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_91_fu_1362_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2290_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2298_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_61_fu_1384_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2304_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_68_fu_1393_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2313_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_80_fu_1432_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2322_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_86_fu_1466_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2330_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_92_fu_1479_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2338_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_74_fu_1502_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2346_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_74_fu_1502_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_98_fu_1523_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2354_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2362_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln1_fu_1545_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2368_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_75_fu_1559_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2377_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_81_fu_1586_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2385_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_87_fu_1599_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2393_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_93_fu_1633_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2401_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_99_fu_1646_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2409_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln717_8_fu_1666_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2417_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_105_fu_1694_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2425_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_82_fu_1707_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2433_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_88_fu_1716_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2441_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_94_fu_1754_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2449_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_100_fu_1763_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2457_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln717_9_fu_1787_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2465_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_106_fu_1819_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2473_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_89_fu_1828_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2481_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_95_fu_1837_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2489_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_101_fu_1886_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2497_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_107_fu_1899_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2505_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln717_s_fu_1908_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2513_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_96_fu_1918_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2521_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_102_fu_1956_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2529_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_102_fu_1956_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_108_fu_1973_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2537_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln717_1_fu_1982_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2545_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_103_fu_1992_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2553_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_109_fu_2023_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2561_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln717_2_fu_2032_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2569_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_110_fu_2056_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2577_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln717_3_fu_2065_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2585_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln717_4_fu_2085_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2593_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2102_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2111_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2117_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2117_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2125_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2131_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2131_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2140_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2140_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2149_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2158_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2158_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2166_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2172_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2172_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2180_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2180_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2188_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2188_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2196_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2205_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2211_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2211_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2219_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2219_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2227_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2227_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2235_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2244_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2244_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2252_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2258_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2258_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2266_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2266_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2274_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2274_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2282_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2282_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2290_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2290_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2298_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2304_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2304_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2313_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2313_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2322_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2322_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2330_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2330_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2338_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2338_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2346_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2346_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2354_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2354_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2362_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2368_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2377_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2377_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2385_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2385_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2393_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2393_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2401_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2401_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2409_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2409_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2417_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2417_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2425_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2425_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2433_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2433_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2441_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2441_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2449_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2449_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2457_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2457_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2465_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2465_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2473_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2473_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2481_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2481_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2489_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2489_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2497_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2497_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2505_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2505_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2513_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2513_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2521_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2521_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2529_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2529_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2537_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2537_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2545_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2545_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2553_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2553_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2561_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2561_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2569_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2569_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2577_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2577_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2585_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2585_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2593_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2593_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2095_ce : STD_LOGIC;
    signal grp_fu_2102_ce : STD_LOGIC;
    signal grp_fu_2111_ce : STD_LOGIC;
    signal grp_fu_2117_ce : STD_LOGIC;
    signal grp_fu_2125_ce : STD_LOGIC;
    signal grp_fu_2131_ce : STD_LOGIC;
    signal grp_fu_2140_ce : STD_LOGIC;
    signal grp_fu_2149_ce : STD_LOGIC;
    signal grp_fu_2158_ce : STD_LOGIC;
    signal grp_fu_2166_ce : STD_LOGIC;
    signal grp_fu_2172_ce : STD_LOGIC;
    signal grp_fu_2180_ce : STD_LOGIC;
    signal grp_fu_2188_ce : STD_LOGIC;
    signal grp_fu_2196_ce : STD_LOGIC;
    signal grp_fu_2205_ce : STD_LOGIC;
    signal grp_fu_2211_ce : STD_LOGIC;
    signal grp_fu_2219_ce : STD_LOGIC;
    signal grp_fu_2227_ce : STD_LOGIC;
    signal grp_fu_2235_ce : STD_LOGIC;
    signal grp_fu_2244_ce : STD_LOGIC;
    signal grp_fu_2252_ce : STD_LOGIC;
    signal grp_fu_2258_ce : STD_LOGIC;
    signal grp_fu_2266_ce : STD_LOGIC;
    signal grp_fu_2274_ce : STD_LOGIC;
    signal grp_fu_2282_ce : STD_LOGIC;
    signal grp_fu_2290_ce : STD_LOGIC;
    signal grp_fu_2298_ce : STD_LOGIC;
    signal grp_fu_2304_ce : STD_LOGIC;
    signal grp_fu_2313_ce : STD_LOGIC;
    signal grp_fu_2322_ce : STD_LOGIC;
    signal grp_fu_2330_ce : STD_LOGIC;
    signal grp_fu_2338_ce : STD_LOGIC;
    signal grp_fu_2346_ce : STD_LOGIC;
    signal grp_fu_2354_ce : STD_LOGIC;
    signal grp_fu_2362_ce : STD_LOGIC;
    signal grp_fu_2368_ce : STD_LOGIC;
    signal grp_fu_2377_ce : STD_LOGIC;
    signal grp_fu_2385_ce : STD_LOGIC;
    signal grp_fu_2393_ce : STD_LOGIC;
    signal grp_fu_2401_ce : STD_LOGIC;
    signal grp_fu_2409_ce : STD_LOGIC;
    signal grp_fu_2417_ce : STD_LOGIC;
    signal grp_fu_2425_ce : STD_LOGIC;
    signal grp_fu_2433_ce : STD_LOGIC;
    signal grp_fu_2441_ce : STD_LOGIC;
    signal grp_fu_2449_ce : STD_LOGIC;
    signal grp_fu_2457_ce : STD_LOGIC;
    signal grp_fu_2465_ce : STD_LOGIC;
    signal grp_fu_2473_ce : STD_LOGIC;
    signal grp_fu_2481_ce : STD_LOGIC;
    signal grp_fu_2489_ce : STD_LOGIC;
    signal grp_fu_2497_ce : STD_LOGIC;
    signal grp_fu_2505_ce : STD_LOGIC;
    signal grp_fu_2513_ce : STD_LOGIC;
    signal grp_fu_2521_ce : STD_LOGIC;
    signal grp_fu_2529_ce : STD_LOGIC;
    signal grp_fu_2537_ce : STD_LOGIC;
    signal grp_fu_2545_ce : STD_LOGIC;
    signal grp_fu_2553_ce : STD_LOGIC;
    signal grp_fu_2561_ce : STD_LOGIC;
    signal grp_fu_2569_ce : STD_LOGIC;
    signal grp_fu_2577_ce : STD_LOGIC;
    signal grp_fu_2585_ce : STD_LOGIC;
    signal grp_fu_2593_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_pp0_stage20_subdone : BOOLEAN;
    signal ap_block_pp0_stage21_subdone : BOOLEAN;
    signal ap_block_pp0_stage22_subdone : BOOLEAN;
    signal ap_block_pp0_stage23_subdone : BOOLEAN;
    signal ap_block_pp0_stage24_subdone : BOOLEAN;
    signal ap_block_pp0_stage25_subdone : BOOLEAN;
    signal ap_block_pp0_stage26_subdone : BOOLEAN;
    signal ap_block_pp0_stage27_subdone : BOOLEAN;
    signal ap_block_pp0_stage28_subdone : BOOLEAN;
    signal ap_block_pp0_stage29_subdone : BOOLEAN;
    signal ap_block_pp0_stage30_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component TOP_mul_mul_16s_16s_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component TOP_mac_muladd_16s_16s_24ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component TOP_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_mul_16s_16s_24_4_1_U690 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => xr_dout,
        din1 => CHANNEL_V_q1,
        ce => grp_fu_2095_ce,
        dout => grp_fu_2095_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U691 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_786,
        din1 => reg_790,
        din2 => grp_fu_2102_p2,
        ce => grp_fu_2102_ce,
        dout => grp_fu_2102_p3);

    mul_mul_16s_16s_24_4_1_U692 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2111_p0,
        din1 => CHANNEL_V_q0,
        ce => grp_fu_2111_ce,
        dout => grp_fu_2111_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U693 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2117_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2117_p2,
        ce => grp_fu_2117_ce,
        dout => grp_fu_2117_p3);

    mul_mul_16s_16s_24_4_1_U694 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2125_p0,
        din1 => CHANNEL_V_q0,
        ce => grp_fu_2125_ce,
        dout => grp_fu_2125_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U695 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2131_p0,
        din1 => reg_790,
        din2 => grp_fu_2131_p2,
        ce => grp_fu_2131_ce,
        dout => grp_fu_2131_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U696 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2140_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2140_p2,
        ce => grp_fu_2140_ce,
        dout => grp_fu_2140_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U697 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_786,
        din1 => reg_790,
        din2 => grp_fu_2149_p2,
        ce => grp_fu_2149_ce,
        dout => grp_fu_2149_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U698 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2158_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2158_p2,
        ce => grp_fu_2158_ce,
        dout => grp_fu_2158_p3);

    mul_mul_16s_16s_24_4_1_U699 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2166_p0,
        din1 => CHANNEL_V_q0,
        ce => grp_fu_2166_ce,
        dout => grp_fu_2166_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U700 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2172_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2172_p2,
        ce => grp_fu_2172_ce,
        dout => grp_fu_2172_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U701 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2180_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2180_p2,
        ce => grp_fu_2180_ce,
        dout => grp_fu_2180_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U702 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2188_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2188_p2,
        ce => grp_fu_2188_ce,
        dout => grp_fu_2188_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U703 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => DATA_TEMP_V_4_reg_2691,
        din1 => reg_790,
        din2 => grp_fu_2196_p2,
        ce => grp_fu_2196_ce,
        dout => grp_fu_2196_p3);

    mul_mul_16s_16s_24_4_1_U704 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2205_p0,
        din1 => CHANNEL_V_q0,
        ce => grp_fu_2205_ce,
        dout => grp_fu_2205_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U705 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2211_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2211_p2,
        ce => grp_fu_2211_ce,
        dout => grp_fu_2211_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U706 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2219_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2219_p2,
        ce => grp_fu_2219_ce,
        dout => grp_fu_2219_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U707 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2227_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2227_p2,
        ce => grp_fu_2227_ce,
        dout => grp_fu_2227_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U708 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => DATA_TEMP_V_5_reg_2696,
        din1 => reg_790,
        din2 => grp_fu_2235_p2,
        ce => grp_fu_2235_ce,
        dout => grp_fu_2235_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U709 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2244_p0,
        din1 => reg_799,
        din2 => grp_fu_2244_p2,
        ce => grp_fu_2244_ce,
        dout => grp_fu_2244_p3);

    mul_mul_16s_16s_24_4_1_U710 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2252_p0,
        din1 => CHANNEL_V_q0,
        ce => grp_fu_2252_ce,
        dout => grp_fu_2252_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U711 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2258_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2258_p2,
        ce => grp_fu_2258_ce,
        dout => grp_fu_2258_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U712 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2266_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2266_p2,
        ce => grp_fu_2266_ce,
        dout => grp_fu_2266_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U713 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2274_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2274_p2,
        ce => grp_fu_2274_ce,
        dout => grp_fu_2274_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U714 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2282_p0,
        din1 => reg_799,
        din2 => grp_fu_2282_p2,
        ce => grp_fu_2282_ce,
        dout => grp_fu_2282_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U715 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2290_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2290_p2,
        ce => grp_fu_2290_ce,
        dout => grp_fu_2290_p3);

    mul_mul_16s_16s_24_4_1_U716 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2298_p0,
        din1 => CHANNEL_V_q0,
        ce => grp_fu_2298_ce,
        dout => grp_fu_2298_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U717 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2304_p0,
        din1 => reg_790,
        din2 => grp_fu_2304_p2,
        ce => grp_fu_2304_ce,
        dout => grp_fu_2304_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U718 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2313_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2313_p2,
        ce => grp_fu_2313_ce,
        dout => grp_fu_2313_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U719 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2322_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2322_p2,
        ce => grp_fu_2322_ce,
        dout => grp_fu_2322_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U720 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2330_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2330_p2,
        ce => grp_fu_2330_ce,
        dout => grp_fu_2330_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U721 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2338_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2338_p2,
        ce => grp_fu_2338_ce,
        dout => grp_fu_2338_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U722 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2346_p0,
        din1 => reg_799,
        din2 => grp_fu_2346_p2,
        ce => grp_fu_2346_ce,
        dout => grp_fu_2346_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U723 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2354_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2354_p2,
        ce => grp_fu_2354_ce,
        dout => grp_fu_2354_p3);

    mul_mul_16s_16s_24_4_1_U724 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2362_p0,
        din1 => CHANNEL_V_q0,
        ce => grp_fu_2362_ce,
        dout => grp_fu_2362_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U725 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => DATA_TEMP_V_7_reg_2721,
        din1 => reg_790,
        din2 => grp_fu_2368_p2,
        ce => grp_fu_2368_ce,
        dout => grp_fu_2368_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U726 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2377_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2377_p2,
        ce => grp_fu_2377_ce,
        dout => grp_fu_2377_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U727 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2385_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2385_p2,
        ce => grp_fu_2385_ce,
        dout => grp_fu_2385_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U728 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2393_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2393_p2,
        ce => grp_fu_2393_ce,
        dout => grp_fu_2393_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U729 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2401_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2401_p2,
        ce => grp_fu_2401_ce,
        dout => grp_fu_2401_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U730 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2409_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2409_p2,
        ce => grp_fu_2409_ce,
        dout => grp_fu_2409_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U731 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2417_p0,
        din1 => reg_790,
        din2 => grp_fu_2417_p2,
        ce => grp_fu_2417_ce,
        dout => grp_fu_2417_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U732 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2425_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2425_p2,
        ce => grp_fu_2425_ce,
        dout => grp_fu_2425_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U733 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2433_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2433_p2,
        ce => grp_fu_2433_ce,
        dout => grp_fu_2433_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U734 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2441_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2441_p2,
        ce => grp_fu_2441_ce,
        dout => grp_fu_2441_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U735 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2449_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2449_p2,
        ce => grp_fu_2449_ce,
        dout => grp_fu_2449_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U736 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2457_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2457_p2,
        ce => grp_fu_2457_ce,
        dout => grp_fu_2457_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U737 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2465_p0,
        din1 => reg_790,
        din2 => grp_fu_2465_p2,
        ce => grp_fu_2465_ce,
        dout => grp_fu_2465_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U738 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2473_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2473_p2,
        ce => grp_fu_2473_ce,
        dout => grp_fu_2473_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U739 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2481_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2481_p2,
        ce => grp_fu_2481_ce,
        dout => grp_fu_2481_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U740 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2489_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2489_p2,
        ce => grp_fu_2489_ce,
        dout => grp_fu_2489_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U741 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2497_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2497_p2,
        ce => grp_fu_2497_ce,
        dout => grp_fu_2497_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U742 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2505_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2505_p2,
        ce => grp_fu_2505_ce,
        dout => grp_fu_2505_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U743 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2513_p0,
        din1 => reg_790,
        din2 => grp_fu_2513_p2,
        ce => grp_fu_2513_ce,
        dout => grp_fu_2513_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U744 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2521_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2521_p2,
        ce => grp_fu_2521_ce,
        dout => grp_fu_2521_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U745 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2529_p0,
        din1 => CHANNEL_V_q1,
        din2 => grp_fu_2529_p2,
        ce => grp_fu_2529_ce,
        dout => grp_fu_2529_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U746 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2537_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2537_p2,
        ce => grp_fu_2537_ce,
        dout => grp_fu_2537_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U747 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2545_p0,
        din1 => reg_790,
        din2 => grp_fu_2545_p2,
        ce => grp_fu_2545_ce,
        dout => grp_fu_2545_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U748 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2553_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2553_p2,
        ce => grp_fu_2553_ce,
        dout => grp_fu_2553_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U749 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2561_p0,
        din1 => CHANNEL_V_q0,
        din2 => grp_fu_2561_p2,
        ce => grp_fu_2561_ce,
        dout => grp_fu_2561_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U750 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2569_p0,
        din1 => reg_790,
        din2 => grp_fu_2569_p2,
        ce => grp_fu_2569_ce,
        dout => grp_fu_2569_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U751 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2577_p0,
        din1 => reg_790,
        din2 => grp_fu_2577_p2,
        ce => grp_fu_2577_ce,
        dout => grp_fu_2577_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U752 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2585_p0,
        din1 => reg_799,
        din2 => grp_fu_2585_p2,
        ce => grp_fu_2585_ce,
        dout => grp_fu_2585_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U753 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2593_p0,
        din1 => CHANNEL_V_load_63_reg_3833,
        din2 => grp_fu_2593_p2,
        ce => grp_fu_2593_ce,
        dout => grp_fu_2593_p3);

    flow_control_loop_pipe_sequential_init_U : component TOP_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage31,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage31_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage31) or ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage31_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    data_idx_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln61_fu_811_p2 = ap_const_lv1_0))) then 
                    data_idx_fu_178 <= data_idx_4_fu_817_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    data_idx_fu_178 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    reg_790_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                reg_790 <= CHANNEL_V_q1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                reg_790 <= CHANNEL_V_q0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                CHANNEL_V_load_63_reg_3833 <= CHANNEL_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                DATA_TEMP_V_4_reg_2691 <= xr_dout;
                DATA_TEMP_V_5_reg_2696 <= xi_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                DATA_TEMP_V_7_reg_2721 <= xi_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln61_reg_2618 <= icmp_ln61_fu_811_p2;
                tmp_108_reg_3828 <= tmp_108_fu_1973_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_786 <= xi_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_795 <= xr_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)))) then
                reg_799 <= CHANNEL_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                sext_ln1171_73_reg_2659 <= sext_ln1171_73_fu_836_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                sext_ln1171_75_reg_2731 <= sext_ln1171_75_fu_873_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                sext_ln1171_77_reg_2768 <= sext_ln1171_77_fu_894_p1;
                tmp_56_reg_2763 <= tmp_56_fu_885_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                sext_ln1171_79_reg_2880 <= sext_ln1171_79_fu_1014_p1;
                tmp_58_reg_2875 <= tmp_58_fu_1005_p1(23 downto 8);
                tmp_70_reg_2902 <= tmp_70_fu_1028_p1(23 downto 8);
                tmp_76_reg_2907 <= grp_fu_2166_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then
                sext_ln1171_81_reg_2997 <= sext_ln1171_81_fu_1119_p1;
                tmp_59_reg_2992 <= tmp_59_fu_1110_p1(23 downto 8);
                tmp_83_reg_3024 <= grp_fu_2205_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then
                sext_ln1171_83_reg_3159 <= sext_ln1171_83_fu_1263_p1;
                tmp_73_reg_3181 <= tmp_73_fu_1275_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then
                sext_ln1171_85_reg_3321 <= sext_ln1171_85_fu_1421_p1;
                tmp_80_reg_3343 <= tmp_80_fu_1432_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                sext_ln1171_reg_2632 <= sext_ln1171_fu_828_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27))) then
                tmp_100_reg_3648 <= tmp_100_fu_1763_p1(23 downto 8);
                tmp_94_reg_3643 <= tmp_94_fu_1754_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30))) then
                tmp_101_reg_3768 <= tmp_101_fu_1886_p1(23 downto 8);
                tmp_107_reg_3778 <= tmp_107_fu_1899_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_103_reg_3838 <= tmp_103_fu_1992_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then
                tmp_104_reg_3433 <= grp_fu_2362_p2(23 downto 8);
                tmp_98_reg_3423 <= tmp_98_fu_1523_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then
                tmp_105_reg_3578 <= tmp_105_fu_1694_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28))) then
                tmp_106_reg_3698 <= tmp_106_fu_1819_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_109_reg_3863 <= tmp_109_fu_2023_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_110_reg_3878 <= tmp_110_fu_2056_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then
                tmp_60_reg_3114 <= tmp_60_fu_1217_p1(23 downto 8);
                tmp_66_reg_3119 <= tmp_66_fu_1226_p1(23 downto 8);
                tmp_90_reg_3134 <= grp_fu_2252_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then
                tmp_61_reg_3281 <= tmp_61_fu_1384_p1(23 downto 8);
                tmp_68_reg_3286 <= tmp_68_fu_1393_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_64_reg_2845 <= tmp_64_fu_981_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                tmp_65_reg_2927 <= tmp_65_fu_1050_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_69_reg_2825 <= grp_fu_2125_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then
                tmp_71_reg_2962 <= tmp_71_fu_1084_p1(23 downto 8);
                tmp_77_reg_2967 <= tmp_77_fu_1093_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then
                tmp_72_reg_3044 <= tmp_72_fu_1150_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then
                tmp_75_reg_3453 <= tmp_75_fu_1559_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then
                tmp_78_reg_3084 <= tmp_78_fu_1191_p1(23 downto 8);
                tmp_84_reg_3094 <= tmp_84_fu_1204_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then
                tmp_79_reg_3211 <= tmp_79_fu_1305_p1(23 downto 8);
                tmp_85_reg_3221 <= tmp_85_fu_1318_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23))) then
                tmp_81_reg_3483 <= tmp_81_fu_1586_p1(23 downto 8);
                tmp_87_reg_3493 <= tmp_87_fu_1599_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26))) then
                tmp_82_reg_3598 <= tmp_82_fu_1707_p1(23 downto 8);
                tmp_88_reg_3603 <= tmp_88_fu_1716_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then
                tmp_86_reg_3378 <= tmp_86_fu_1466_p1(23 downto 8);
                tmp_92_reg_3388 <= tmp_92_fu_1479_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29))) then
                tmp_89_reg_3713 <= tmp_89_fu_1828_p1(23 downto 8);
                tmp_95_reg_3718 <= tmp_95_fu_1837_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17))) then
                tmp_91_reg_3256 <= tmp_91_fu_1362_p1(23 downto 8);
                tmp_97_reg_3266 <= grp_fu_2298_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then
                tmp_93_reg_3528 <= tmp_93_fu_1633_p1(23 downto 8);
                tmp_99_reg_3538 <= tmp_99_fu_1646_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31))) then
                tmp_96_reg_3793 <= tmp_96_fu_1918_p1(23 downto 8);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage31_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone, ap_block_pp0_stage19_subdone, ap_block_pp0_stage20_subdone, ap_block_pp0_stage21_subdone, ap_block_pp0_stage22_subdone, ap_block_pp0_stage23_subdone, ap_block_pp0_stage24_subdone, ap_block_pp0_stage25_subdone, ap_block_pp0_stage26_subdone, ap_block_pp0_stage27_subdone, ap_block_pp0_stage28_subdone, ap_block_pp0_stage29_subdone, ap_block_pp0_stage30_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage23_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when ap_ST_fsm_pp0_stage25 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage25_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                end if;
            when ap_ST_fsm_pp0_stage26 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage26_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                end if;
            when ap_ST_fsm_pp0_stage27 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage27_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                end if;
            when ap_ST_fsm_pp0_stage28 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage28_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                end if;
            when ap_ST_fsm_pp0_stage29 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage29_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                end if;
            when ap_ST_fsm_pp0_stage30 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage30_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                end if;
            when ap_ST_fsm_pp0_stage31 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage31_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    CHANNEL_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28, ap_block_pp0_stage31, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage0, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage14, ap_block_pp0_stage15, ap_block_pp0_stage16, ap_block_pp0_stage17, ap_block_pp0_stage18, ap_block_pp0_stage19, ap_block_pp0_stage20, ap_block_pp0_stage21, ap_block_pp0_stage23, ap_block_pp0_stage24, ap_block_pp0_stage26, ap_block_pp0_stage27, ap_block_pp0_stage29, ap_block_pp0_stage30)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage31) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31))) then 
                CHANNEL_V_address0 <= ap_const_lv64_3F(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage30) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30))) then 
                CHANNEL_V_address0 <= ap_const_lv64_3D(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage29) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29))) then 
                CHANNEL_V_address0 <= ap_const_lv64_36(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage28) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28))) then 
                CHANNEL_V_address0 <= ap_const_lv64_3C(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage27) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27))) then 
                CHANNEL_V_address0 <= ap_const_lv64_2E(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage26) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26))) then 
                CHANNEL_V_address0 <= ap_const_lv64_3B(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
                CHANNEL_V_address0 <= ap_const_lv64_2D(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then 
                CHANNEL_V_address0 <= ap_const_lv64_3A(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23))) then 
                CHANNEL_V_address0 <= ap_const_lv64_33(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
                CHANNEL_V_address0 <= ap_const_lv64_25(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
                CHANNEL_V_address0 <= ap_const_lv64_39(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then 
                CHANNEL_V_address0 <= ap_const_lv64_32(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
                CHANNEL_V_address0 <= ap_const_lv64_24(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then 
                CHANNEL_V_address0 <= ap_const_lv64_16(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17))) then 
                CHANNEL_V_address0 <= ap_const_lv64_38(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
                CHANNEL_V_address0 <= ap_const_lv64_2A(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
                CHANNEL_V_address0 <= ap_const_lv64_1C(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
                CHANNEL_V_address0 <= ap_const_lv64_E(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
                CHANNEL_V_address0 <= ap_const_lv64_30(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
                CHANNEL_V_address0 <= ap_const_lv64_22(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                CHANNEL_V_address0 <= ap_const_lv64_14(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                CHANNEL_V_address0 <= ap_const_lv64_28(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                CHANNEL_V_address0 <= ap_const_lv64_21(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                CHANNEL_V_address0 <= ap_const_lv64_13(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                CHANNEL_V_address0 <= ap_const_lv64_20(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                CHANNEL_V_address0 <= ap_const_lv64_19(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                CHANNEL_V_address0 <= ap_const_lv64_B(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                CHANNEL_V_address0 <= ap_const_lv64_18(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                CHANNEL_V_address0 <= ap_const_lv64_A(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                CHANNEL_V_address0 <= ap_const_lv64_10(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                CHANNEL_V_address0 <= ap_const_lv64_8(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                CHANNEL_V_address0 <= ap_const_lv64_1(6 - 1 downto 0);
            else 
                CHANNEL_V_address0 <= "XXXXXX";
            end if;
        else 
            CHANNEL_V_address0 <= "XXXXXX";
        end if; 
    end process;


    CHANNEL_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28, ap_block_pp0_stage31, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage0, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage14, ap_block_pp0_stage15, ap_block_pp0_stage16, ap_block_pp0_stage17, ap_block_pp0_stage18, ap_block_pp0_stage19, ap_block_pp0_stage20, ap_block_pp0_stage21, ap_block_pp0_stage23, ap_block_pp0_stage24, ap_block_pp0_stage26, ap_block_pp0_stage27, ap_block_pp0_stage29, ap_block_pp0_stage30)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage31) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31))) then 
                CHANNEL_V_address1 <= ap_const_lv64_3E(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage30) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30))) then 
                CHANNEL_V_address1 <= ap_const_lv64_37(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage29) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29))) then 
                CHANNEL_V_address1 <= ap_const_lv64_2F(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage28) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28))) then 
                CHANNEL_V_address1 <= ap_const_lv64_35(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage27) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27))) then 
                CHANNEL_V_address1 <= ap_const_lv64_27(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage26) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26))) then 
                CHANNEL_V_address1 <= ap_const_lv64_34(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
                CHANNEL_V_address1 <= ap_const_lv64_26(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then 
                CHANNEL_V_address1 <= ap_const_lv64_1F(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23))) then 
                CHANNEL_V_address1 <= ap_const_lv64_2C(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
                CHANNEL_V_address1 <= ap_const_lv64_1E(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
                CHANNEL_V_address1 <= ap_const_lv64_17(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then 
                CHANNEL_V_address1 <= ap_const_lv64_2B(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
                CHANNEL_V_address1 <= ap_const_lv64_1D(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then 
                CHANNEL_V_address1 <= ap_const_lv64_F(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17))) then 
                CHANNEL_V_address1 <= ap_const_lv64_31(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
                CHANNEL_V_address1 <= ap_const_lv64_23(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
                CHANNEL_V_address1 <= ap_const_lv64_15(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
                CHANNEL_V_address1 <= ap_const_lv64_7(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
                CHANNEL_V_address1 <= ap_const_lv64_29(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
                CHANNEL_V_address1 <= ap_const_lv64_1B(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                CHANNEL_V_address1 <= ap_const_lv64_D(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                CHANNEL_V_address1 <= ap_const_lv64_6(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                CHANNEL_V_address1 <= ap_const_lv64_1A(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                CHANNEL_V_address1 <= ap_const_lv64_C(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                CHANNEL_V_address1 <= ap_const_lv64_5(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                CHANNEL_V_address1 <= ap_const_lv64_12(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                CHANNEL_V_address1 <= ap_const_lv64_4(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                CHANNEL_V_address1 <= ap_const_lv64_11(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                CHANNEL_V_address1 <= ap_const_lv64_3(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                CHANNEL_V_address1 <= ap_const_lv64_9(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                CHANNEL_V_address1 <= ap_const_lv64_2(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                CHANNEL_V_address1 <= ap_const_lv64_0(6 - 1 downto 0);
            else 
                CHANNEL_V_address1 <= "XXXXXX";
            end if;
        else 
            CHANNEL_V_address1 <= "XXXXXX";
        end if; 
    end process;


    CHANNEL_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_block_pp0_stage31_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)))) then 
            CHANNEL_V_ce0 <= ap_const_logic_1;
        else 
            CHANNEL_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    CHANNEL_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_block_pp0_stage31_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)))) then 
            CHANNEL_V_ce1 <= ap_const_logic_1;
        else 
            CHANNEL_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(22);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(23);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(24);
    ap_CS_fsm_pp0_stage25 <= ap_CS_fsm(25);
    ap_CS_fsm_pp0_stage26 <= ap_CS_fsm(26);
    ap_CS_fsm_pp0_stage27 <= ap_CS_fsm(27);
    ap_CS_fsm_pp0_stage28 <= ap_CS_fsm(28);
    ap_CS_fsm_pp0_stage29 <= ap_CS_fsm(29);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage30 <= ap_CS_fsm(30);
    ap_CS_fsm_pp0_stage31 <= ap_CS_fsm(31);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_01001_assign_proc : process(ap_enable_reg_pp0_iter1, channel_out_full_n)
    begin
                ap_block_pp0_stage11_01001 <= ((channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter1, channel_out_full_n)
    begin
                ap_block_pp0_stage11_11001 <= ((channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, channel_out_full_n)
    begin
                ap_block_pp0_stage11_subdone <= ((channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, channel_out_full_n, icmp_ln61_reg_2618, xr_empty_n, xi_empty_n)
    begin
                ap_block_pp0_stage1_01001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xi_empty_n = ap_const_logic_0)) or ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xr_empty_n = ap_const_logic_0)))) or ((channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, channel_out_full_n, icmp_ln61_reg_2618, xr_empty_n, xi_empty_n)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xi_empty_n = ap_const_logic_0)) or ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xr_empty_n = ap_const_logic_0)))) or ((channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, channel_out_full_n, icmp_ln61_reg_2618, xr_empty_n, xi_empty_n)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xi_empty_n = ap_const_logic_0)) or ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xr_empty_n = ap_const_logic_0)))) or ((channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage22_01001_assign_proc : process(ap_enable_reg_pp0_iter0, channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_pp0_stage22_01001 <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage22_11001_assign_proc : process(ap_enable_reg_pp0_iter0, channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_pp0_stage22_11001 <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage22_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_pp0_stage22_subdone <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage25 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage25_01001_assign_proc : process(ap_enable_reg_pp0_iter0, channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_pp0_stage25_01001 <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage25_11001_assign_proc : process(ap_enable_reg_pp0_iter0, channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_pp0_stage25_11001 <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage25_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_pp0_stage25_subdone <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage28_01001_assign_proc : process(ap_enable_reg_pp0_iter0, channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_pp0_stage28_01001 <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage28_11001_assign_proc : process(ap_enable_reg_pp0_iter0, channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_pp0_stage28_11001 <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage28_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_pp0_stage28_subdone <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln61_reg_2618, xr_empty_n, xi_empty_n)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xi_empty_n = ap_const_logic_0)) or ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xr_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln61_reg_2618, xr_empty_n, xi_empty_n)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xi_empty_n = ap_const_logic_0)) or ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xr_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage31_01001_assign_proc : process(ap_enable_reg_pp0_iter0, channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_pp0_stage31_01001 <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage31_11001_assign_proc : process(ap_enable_reg_pp0_iter0, channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_pp0_stage31_11001 <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage31_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_pp0_stage31_subdone <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, channel_out_full_n, icmp_ln61_reg_2618, xr_empty_n, xi_empty_n)
    begin
                ap_block_pp0_stage3_01001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xi_empty_n = ap_const_logic_0)) or ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xr_empty_n = ap_const_logic_0)))) or ((channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, channel_out_full_n, icmp_ln61_reg_2618, xr_empty_n, xi_empty_n)
    begin
                ap_block_pp0_stage3_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xi_empty_n = ap_const_logic_0)) or ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xr_empty_n = ap_const_logic_0)))) or ((channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, channel_out_full_n, icmp_ln61_reg_2618, xr_empty_n, xi_empty_n)
    begin
                ap_block_pp0_stage3_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xi_empty_n = ap_const_logic_0)) or ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xr_empty_n = ap_const_logic_0)))) or ((channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln61_reg_2618, xr_empty_n, xi_empty_n)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xi_empty_n = ap_const_logic_0)) or ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xr_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln61_reg_2618, xr_empty_n, xi_empty_n)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xi_empty_n = ap_const_logic_0)) or ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xr_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_01001_assign_proc : process(ap_enable_reg_pp0_iter1, channel_out_full_n)
    begin
                ap_block_pp0_stage5_01001 <= ((channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter1, channel_out_full_n)
    begin
                ap_block_pp0_stage5_11001 <= ((channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, channel_out_full_n)
    begin
                ap_block_pp0_stage5_subdone <= ((channel_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage19_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage20_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage21_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state23_pp0_stage22_iter0_assign_proc : process(channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_state23_pp0_stage22_iter0 <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0));
    end process;

        ap_block_state24_pp0_stage23_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage24_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state26_pp0_stage25_iter0_assign_proc : process(channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_state26_pp0_stage25_iter0 <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0));
    end process;

        ap_block_state27_pp0_stage26_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage27_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state29_pp0_stage28_iter0_assign_proc : process(channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_state29_pp0_stage28_iter0 <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(icmp_ln61_reg_2618, xr_empty_n, xi_empty_n)
    begin
                ap_block_state2_pp0_stage1_iter0 <= (((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xi_empty_n = ap_const_logic_0)) or ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xr_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state30_pp0_stage29_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage30_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state32_pp0_stage31_iter0_assign_proc : process(channel_out_full_n, icmp_ln61_reg_2618)
    begin
                ap_block_state32_pp0_stage31_iter0 <= ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (channel_out_full_n = ap_const_logic_0));
    end process;

        ap_block_state33_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state34_pp0_stage1_iter1_assign_proc : process(channel_out_full_n)
    begin
                ap_block_state34_pp0_stage1_iter1 <= (channel_out_full_n = ap_const_logic_0);
    end process;

        ap_block_state35_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state36_pp0_stage3_iter1_assign_proc : process(channel_out_full_n)
    begin
                ap_block_state36_pp0_stage3_iter1 <= (channel_out_full_n = ap_const_logic_0);
    end process;

        ap_block_state37_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state38_pp0_stage5_iter1_assign_proc : process(channel_out_full_n)
    begin
                ap_block_state38_pp0_stage5_iter1 <= (channel_out_full_n = ap_const_logic_0);
    end process;

        ap_block_state39_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage2_iter0_assign_proc : process(icmp_ln61_reg_2618, xr_empty_n, xi_empty_n)
    begin
                ap_block_state3_pp0_stage2_iter0 <= (((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xi_empty_n = ap_const_logic_0)) or ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xr_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state40_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage9_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage10_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state44_pp0_stage11_iter1_assign_proc : process(channel_out_full_n)
    begin
                ap_block_state44_pp0_stage11_iter1 <= (channel_out_full_n = ap_const_logic_0);
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(icmp_ln61_reg_2618, xr_empty_n, xi_empty_n)
    begin
                ap_block_state4_pp0_stage3_iter0 <= (((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xi_empty_n = ap_const_logic_0)) or ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xr_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state5_pp0_stage4_iter0_assign_proc : process(icmp_ln61_reg_2618, xr_empty_n, xi_empty_n)
    begin
                ap_block_state5_pp0_stage4_iter0 <= (((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xi_empty_n = ap_const_logic_0)) or ((icmp_ln61_reg_2618 = ap_const_lv1_0) and (xr_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage31_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage31, icmp_ln61_reg_2618, ap_block_pp0_stage31_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage31_subdone) and (icmp_ln61_reg_2618 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31))) then 
            ap_condition_exit_pp0_iter0_stage31 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage31 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage31, ap_block_pp0_stage31_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage31_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage31;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage31_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage31_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_data_idx_3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_idx_fu_178, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_data_idx_3 <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_data_idx_3 <= data_idx_fu_178;
        end if; 
    end process;


    channel_out_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage31, channel_out_full_n, icmp_ln61_reg_2618, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28, ap_block_pp0_stage31, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage31) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage28) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage25) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage22) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            channel_out_blk_n <= channel_out_full_n;
        else 
            channel_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    channel_out_din_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage31, icmp_ln61_reg_2618, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage22_01001, ap_block_pp0_stage25_01001, ap_block_pp0_stage28_01001, ap_block_pp0_stage31_01001, ap_block_pp0_stage1_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage5_01001, ap_block_pp0_stage11_01001, trunc_ln1_fu_1545_p1, trunc_ln717_8_fu_1666_p1, trunc_ln717_9_fu_1787_p1, trunc_ln717_s_fu_1908_p1, trunc_ln717_1_fu_1982_p1, trunc_ln717_2_fu_2032_p1, trunc_ln717_3_fu_2065_p1, trunc_ln717_4_fu_2085_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage11_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            channel_out_din <= trunc_ln717_4_fu_2085_p1(23 downto 8);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            channel_out_din <= trunc_ln717_3_fu_2065_p1(23 downto 8);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            channel_out_din <= trunc_ln717_2_fu_2032_p1(23 downto 8);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            channel_out_din <= trunc_ln717_1_fu_1982_p1(23 downto 8);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage31_01001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31))) then 
            channel_out_din <= trunc_ln717_s_fu_1908_p1(23 downto 8);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage28_01001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28))) then 
            channel_out_din <= trunc_ln717_9_fu_1787_p1(23 downto 8);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage25_01001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
            channel_out_din <= trunc_ln717_8_fu_1666_p1(23 downto 8);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage22_01001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
            channel_out_din <= trunc_ln1_fu_1545_p1(23 downto 8);
        else 
            channel_out_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    channel_out_write_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage31, icmp_ln61_reg_2618, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage1_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage28_11001, ap_block_pp0_stage31_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            channel_out_write <= ap_const_logic_1;
        else 
            channel_out_write <= ap_const_logic_0;
        end if; 
    end process;

    data_idx_4_fu_817_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_data_idx_3) + unsigned(ap_const_lv5_1));

    grp_fu_2095_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2095_ce <= ap_const_logic_1;
        else 
            grp_fu_2095_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_2102_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2102_ce <= ap_const_logic_1;
        else 
            grp_fu_2102_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2102_p2 <= (tmp_s_fu_856_p4 & ap_const_lv8_0);

    grp_fu_2111_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2111_ce <= ap_const_logic_1;
        else 
            grp_fu_2111_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2111_p0 <= sext_ln1171_reg_2632(16 - 1 downto 0);

    grp_fu_2117_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_2117_ce <= ap_const_logic_1;
        else 
            grp_fu_2117_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2117_p0 <= sext_ln1171_73_reg_2659(16 - 1 downto 0);
    grp_fu_2117_p2 <= (tmp_62_fu_902_p4 & ap_const_lv8_0);

    grp_fu_2125_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_2125_ce <= ap_const_logic_1;
        else 
            grp_fu_2125_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2125_p0 <= sext_ln1171_reg_2632(16 - 1 downto 0);

    grp_fu_2131_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_2131_ce <= ap_const_logic_1;
        else 
            grp_fu_2131_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2131_p0 <= sext_ln1171_75_fu_873_p1(16 - 1 downto 0);
    grp_fu_2131_p2 <= (tmp_56_reg_2763 & ap_const_lv8_0);

    grp_fu_2140_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_2140_ce <= ap_const_logic_1;
        else 
            grp_fu_2140_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2140_p0 <= sext_ln1171_75_fu_873_p1(16 - 1 downto 0);
    grp_fu_2140_p2 <= (tmp_63_fu_934_p4 & ap_const_lv8_0);

    grp_fu_2149_ce_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_2149_ce <= ap_const_logic_1;
        else 
            grp_fu_2149_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2149_p2 <= (tmp_57_fu_964_p4 & ap_const_lv8_0);

    grp_fu_2158_ce_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_2158_ce <= ap_const_logic_1;
        else 
            grp_fu_2158_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2158_p0 <= sext_ln1171_73_reg_2659(16 - 1 downto 0);
    grp_fu_2158_p2 <= (tmp_69_reg_2825 & ap_const_lv8_0);

    grp_fu_2166_ce_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_2166_ce <= ap_const_logic_1;
        else 
            grp_fu_2166_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2166_p0 <= sext_ln1171_reg_2632(16 - 1 downto 0);

    grp_fu_2172_ce_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_2172_ce <= ap_const_logic_1;
        else 
            grp_fu_2172_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2172_p0 <= sext_ln1171_77_reg_2768(16 - 1 downto 0);
    grp_fu_2172_p2 <= (tmp_64_reg_2845 & ap_const_lv8_0);

    grp_fu_2180_ce_assign_proc : process(ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            grp_fu_2180_ce <= ap_const_logic_1;
        else 
            grp_fu_2180_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2180_p0 <= sext_ln1171_75_reg_2731(16 - 1 downto 0);
    grp_fu_2180_p2 <= (tmp_70_reg_2902 & ap_const_lv8_0);

    grp_fu_2188_ce_assign_proc : process(ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            grp_fu_2188_ce <= ap_const_logic_1;
        else 
            grp_fu_2188_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2188_p0 <= sext_ln1171_73_reg_2659(16 - 1 downto 0);
    grp_fu_2188_p2 <= (tmp_76_reg_2907 & ap_const_lv8_0);

    grp_fu_2196_ce_assign_proc : process(ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            grp_fu_2196_ce <= ap_const_logic_1;
        else 
            grp_fu_2196_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2196_p2 <= (tmp_58_reg_2875 & ap_const_lv8_0);

    grp_fu_2205_ce_assign_proc : process(ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            grp_fu_2205_ce <= ap_const_logic_1;
        else 
            grp_fu_2205_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2205_p0 <= sext_ln1171_reg_2632(16 - 1 downto 0);

    grp_fu_2211_ce_assign_proc : process(ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)))) then 
            grp_fu_2211_ce <= ap_const_logic_1;
        else 
            grp_fu_2211_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2211_p0 <= sext_ln1171_77_reg_2768(16 - 1 downto 0);
    grp_fu_2211_p2 <= (tmp_71_reg_2962 & ap_const_lv8_0);

    grp_fu_2219_ce_assign_proc : process(ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)))) then 
            grp_fu_2219_ce <= ap_const_logic_1;
        else 
            grp_fu_2219_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2219_p0 <= sext_ln1171_75_reg_2731(16 - 1 downto 0);
    grp_fu_2219_p2 <= (tmp_77_reg_2967 & ap_const_lv8_0);

    grp_fu_2227_ce_assign_proc : process(ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)))) then 
            grp_fu_2227_ce <= ap_const_logic_1;
        else 
            grp_fu_2227_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2227_p0 <= sext_ln1171_73_reg_2659(16 - 1 downto 0);
    grp_fu_2227_p2 <= (tmp_83_reg_3024 & ap_const_lv8_0);

    grp_fu_2235_ce_assign_proc : process(ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)))) then 
            grp_fu_2235_ce <= ap_const_logic_1;
        else 
            grp_fu_2235_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2235_p2 <= (tmp_59_reg_2992 & ap_const_lv8_0);

    grp_fu_2244_ce_assign_proc : process(ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)))) then 
            grp_fu_2244_ce <= ap_const_logic_1;
        else 
            grp_fu_2244_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2244_p0 <= sext_ln1171_79_reg_2880(16 - 1 downto 0);
    grp_fu_2244_p2 <= (tmp_65_reg_2927 & ap_const_lv8_0);

    grp_fu_2252_ce_assign_proc : process(ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)))) then 
            grp_fu_2252_ce <= ap_const_logic_1;
        else 
            grp_fu_2252_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2252_p0 <= sext_ln1171_reg_2632(16 - 1 downto 0);

    grp_fu_2258_ce_assign_proc : process(ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)))) then 
            grp_fu_2258_ce <= ap_const_logic_1;
        else 
            grp_fu_2258_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2258_p0 <= sext_ln1171_79_reg_2880(16 - 1 downto 0);
    grp_fu_2258_p2 <= (tmp_72_reg_3044 & ap_const_lv8_0);

    grp_fu_2266_ce_assign_proc : process(ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)))) then 
            grp_fu_2266_ce <= ap_const_logic_1;
        else 
            grp_fu_2266_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2266_p0 <= sext_ln1171_77_reg_2768(16 - 1 downto 0);
    grp_fu_2266_p2 <= (tmp_78_reg_3084 & ap_const_lv8_0);

    grp_fu_2274_ce_assign_proc : process(ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)))) then 
            grp_fu_2274_ce <= ap_const_logic_1;
        else 
            grp_fu_2274_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2274_p0 <= sext_ln1171_75_reg_2731(16 - 1 downto 0);
    grp_fu_2274_p2 <= (tmp_84_reg_3094 & ap_const_lv8_0);

    grp_fu_2282_ce_assign_proc : process(ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)))) then 
            grp_fu_2282_ce <= ap_const_logic_1;
        else 
            grp_fu_2282_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2282_p0 <= sext_ln1171_81_reg_2997(16 - 1 downto 0);
    grp_fu_2282_p2 <= (tmp_66_reg_3119 & ap_const_lv8_0);

    grp_fu_2290_ce_assign_proc : process(ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)))) then 
            grp_fu_2290_ce <= ap_const_logic_1;
        else 
            grp_fu_2290_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2290_p0 <= sext_ln1171_73_reg_2659(16 - 1 downto 0);
    grp_fu_2290_p2 <= (tmp_90_reg_3134 & ap_const_lv8_0);

    grp_fu_2298_ce_assign_proc : process(ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)))) then 
            grp_fu_2298_ce <= ap_const_logic_1;
        else 
            grp_fu_2298_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2298_p0 <= sext_ln1171_reg_2632(16 - 1 downto 0);

    grp_fu_2304_ce_assign_proc : process(ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)))) then 
            grp_fu_2304_ce <= ap_const_logic_1;
        else 
            grp_fu_2304_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2304_p0 <= sext_ln1171_83_fu_1263_p1(16 - 1 downto 0);
    grp_fu_2304_p2 <= (tmp_60_reg_3114 & ap_const_lv8_0);

    grp_fu_2313_ce_assign_proc : process(ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)))) then 
            grp_fu_2313_ce <= ap_const_logic_1;
        else 
            grp_fu_2313_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2313_p0 <= sext_ln1171_83_fu_1263_p1(16 - 1 downto 0);
    grp_fu_2313_p2 <= (tmp_67_fu_1341_p4 & ap_const_lv8_0);

    grp_fu_2322_ce_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)))) then 
            grp_fu_2322_ce <= ap_const_logic_1;
        else 
            grp_fu_2322_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2322_p0 <= sext_ln1171_79_reg_2880(16 - 1 downto 0);
    grp_fu_2322_p2 <= (tmp_79_reg_3211 & ap_const_lv8_0);

    grp_fu_2330_ce_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)))) then 
            grp_fu_2330_ce <= ap_const_logic_1;
        else 
            grp_fu_2330_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2330_p0 <= sext_ln1171_77_reg_2768(16 - 1 downto 0);
    grp_fu_2330_p2 <= (tmp_85_reg_3221 & ap_const_lv8_0);

    grp_fu_2338_ce_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)))) then 
            grp_fu_2338_ce <= ap_const_logic_1;
        else 
            grp_fu_2338_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2338_p0 <= sext_ln1171_75_reg_2731(16 - 1 downto 0);
    grp_fu_2338_p2 <= (tmp_91_reg_3256 & ap_const_lv8_0);

    grp_fu_2346_ce_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)))) then 
            grp_fu_2346_ce <= ap_const_logic_1;
        else 
            grp_fu_2346_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2346_p0 <= sext_ln1171_81_reg_2997(16 - 1 downto 0);
    grp_fu_2346_p2 <= (tmp_73_reg_3181 & ap_const_lv8_0);

    grp_fu_2354_ce_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)))) then 
            grp_fu_2354_ce <= ap_const_logic_1;
        else 
            grp_fu_2354_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2354_p0 <= sext_ln1171_73_reg_2659(16 - 1 downto 0);
    grp_fu_2354_p2 <= (tmp_97_reg_3266 & ap_const_lv8_0);

    grp_fu_2362_ce_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)))) then 
            grp_fu_2362_ce <= ap_const_logic_1;
        else 
            grp_fu_2362_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2362_p0 <= sext_ln1171_reg_2632(16 - 1 downto 0);

    grp_fu_2368_ce_assign_proc : process(ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)))) then 
            grp_fu_2368_ce <= ap_const_logic_1;
        else 
            grp_fu_2368_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2368_p2 <= (tmp_61_reg_3281 & ap_const_lv8_0);

    grp_fu_2377_ce_assign_proc : process(ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)))) then 
            grp_fu_2377_ce <= ap_const_logic_1;
        else 
            grp_fu_2377_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2377_p0 <= sext_ln1171_83_reg_3159(16 - 1 downto 0);
    grp_fu_2377_p2 <= (tmp_74_fu_1502_p4 & ap_const_lv8_0);

    grp_fu_2385_ce_assign_proc : process(ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)))) then 
            grp_fu_2385_ce <= ap_const_logic_1;
        else 
            grp_fu_2385_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2385_p0 <= sext_ln1171_81_reg_2997(16 - 1 downto 0);
    grp_fu_2385_p2 <= (tmp_80_reg_3343 & ap_const_lv8_0);

    grp_fu_2393_ce_assign_proc : process(ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)))) then 
            grp_fu_2393_ce <= ap_const_logic_1;
        else 
            grp_fu_2393_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2393_p0 <= sext_ln1171_79_reg_2880(16 - 1 downto 0);
    grp_fu_2393_p2 <= (tmp_86_reg_3378 & ap_const_lv8_0);

    grp_fu_2401_ce_assign_proc : process(ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)))) then 
            grp_fu_2401_ce <= ap_const_logic_1;
        else 
            grp_fu_2401_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2401_p0 <= sext_ln1171_77_reg_2768(16 - 1 downto 0);
    grp_fu_2401_p2 <= (tmp_92_reg_3388 & ap_const_lv8_0);

    grp_fu_2409_ce_assign_proc : process(ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)))) then 
            grp_fu_2409_ce <= ap_const_logic_1;
        else 
            grp_fu_2409_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2409_p0 <= sext_ln1171_75_reg_2731(16 - 1 downto 0);
    grp_fu_2409_p2 <= (tmp_98_reg_3423 & ap_const_lv8_0);

    grp_fu_2417_ce_assign_proc : process(ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage22_11001, ap_block_pp0_stage25_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)))) then 
            grp_fu_2417_ce <= ap_const_logic_1;
        else 
            grp_fu_2417_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2417_p0 <= sext_ln1171_85_reg_3321(16 - 1 downto 0);
    grp_fu_2417_p2 <= (tmp_68_reg_3286 & ap_const_lv8_0);

    grp_fu_2425_ce_assign_proc : process(ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage22_11001, ap_block_pp0_stage25_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)))) then 
            grp_fu_2425_ce <= ap_const_logic_1;
        else 
            grp_fu_2425_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2425_p0 <= sext_ln1171_73_reg_2659(16 - 1 downto 0);
    grp_fu_2425_p2 <= (tmp_104_reg_3433 & ap_const_lv8_0);

    grp_fu_2433_ce_assign_proc : process(ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)))) then 
            grp_fu_2433_ce <= ap_const_logic_1;
        else 
            grp_fu_2433_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2433_p0 <= sext_ln1171_83_reg_3159(16 - 1 downto 0);
    grp_fu_2433_p2 <= (tmp_81_reg_3483 & ap_const_lv8_0);

    grp_fu_2441_ce_assign_proc : process(ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)))) then 
            grp_fu_2441_ce <= ap_const_logic_1;
        else 
            grp_fu_2441_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2441_p0 <= sext_ln1171_81_reg_2997(16 - 1 downto 0);
    grp_fu_2441_p2 <= (tmp_87_reg_3493 & ap_const_lv8_0);

    grp_fu_2449_ce_assign_proc : process(ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)))) then 
            grp_fu_2449_ce <= ap_const_logic_1;
        else 
            grp_fu_2449_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2449_p0 <= sext_ln1171_79_reg_2880(16 - 1 downto 0);
    grp_fu_2449_p2 <= (tmp_93_reg_3528 & ap_const_lv8_0);

    grp_fu_2457_ce_assign_proc : process(ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)))) then 
            grp_fu_2457_ce <= ap_const_logic_1;
        else 
            grp_fu_2457_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2457_p0 <= sext_ln1171_77_reg_2768(16 - 1 downto 0);
    grp_fu_2457_p2 <= (tmp_99_reg_3538 & ap_const_lv8_0);

    grp_fu_2465_ce_assign_proc : process(ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage25_11001, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)))) then 
            grp_fu_2465_ce <= ap_const_logic_1;
        else 
            grp_fu_2465_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2465_p0 <= sext_ln1171_85_reg_3321(16 - 1 downto 0);
    grp_fu_2465_p2 <= (tmp_75_reg_3453 & ap_const_lv8_0);

    grp_fu_2473_ce_assign_proc : process(ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage25_11001, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)))) then 
            grp_fu_2473_ce <= ap_const_logic_1;
        else 
            grp_fu_2473_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2473_p0 <= sext_ln1171_75_reg_2731(16 - 1 downto 0);
    grp_fu_2473_p2 <= (tmp_105_reg_3578 & ap_const_lv8_0);

    grp_fu_2481_ce_assign_proc : process(ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)))) then 
            grp_fu_2481_ce <= ap_const_logic_1;
        else 
            grp_fu_2481_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2481_p0 <= sext_ln1171_83_reg_3159(16 - 1 downto 0);
    grp_fu_2481_p2 <= (tmp_88_reg_3603 & ap_const_lv8_0);

    grp_fu_2489_ce_assign_proc : process(ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)))) then 
            grp_fu_2489_ce <= ap_const_logic_1;
        else 
            grp_fu_2489_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2489_p0 <= sext_ln1171_81_reg_2997(16 - 1 downto 0);
    grp_fu_2489_p2 <= (tmp_94_reg_3643 & ap_const_lv8_0);

    grp_fu_2497_ce_assign_proc : process(ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)))) then 
            grp_fu_2497_ce <= ap_const_logic_1;
        else 
            grp_fu_2497_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2497_p0 <= sext_ln1171_79_reg_2880(16 - 1 downto 0);
    grp_fu_2497_p2 <= (tmp_100_reg_3648 & ap_const_lv8_0);

    grp_fu_2505_ce_assign_proc : process(ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)))) then 
            grp_fu_2505_ce <= ap_const_logic_1;
        else 
            grp_fu_2505_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2505_p0 <= sext_ln1171_77_reg_2768(16 - 1 downto 0);
    grp_fu_2505_p2 <= (tmp_106_reg_3698 & ap_const_lv8_0);

    grp_fu_2513_ce_assign_proc : process(ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_block_pp0_stage31_11001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)))) then 
            grp_fu_2513_ce <= ap_const_logic_1;
        else 
            grp_fu_2513_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2513_p0 <= sext_ln1171_85_reg_3321(16 - 1 downto 0);
    grp_fu_2513_p2 <= (tmp_82_reg_3598 & ap_const_lv8_0);

    grp_fu_2521_ce_assign_proc : process(ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_block_pp0_stage31_11001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)))) then 
            grp_fu_2521_ce <= ap_const_logic_1;
        else 
            grp_fu_2521_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2521_p0 <= sext_ln1171_83_reg_3159(16 - 1 downto 0);
    grp_fu_2521_p2 <= (tmp_95_reg_3718 & ap_const_lv8_0);

    grp_fu_2529_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage31_11001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)))) then 
            grp_fu_2529_ce <= ap_const_logic_1;
        else 
            grp_fu_2529_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2529_p0 <= sext_ln1171_81_reg_2997(16 - 1 downto 0);
    grp_fu_2529_p2 <= (tmp_101_reg_3768 & ap_const_lv8_0);

    grp_fu_2537_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage31_11001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)))) then 
            grp_fu_2537_ce <= ap_const_logic_1;
        else 
            grp_fu_2537_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2537_p0 <= sext_ln1171_79_reg_2880(16 - 1 downto 0);
    grp_fu_2537_p2 <= (tmp_107_reg_3778 & ap_const_lv8_0);

    grp_fu_2545_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage31_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2545_ce <= ap_const_logic_1;
        else 
            grp_fu_2545_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2545_p0 <= sext_ln1171_85_reg_3321(16 - 1 downto 0);
    grp_fu_2545_p2 <= (tmp_89_reg_3713 & ap_const_lv8_0);

    grp_fu_2553_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage31_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2553_ce <= ap_const_logic_1;
        else 
            grp_fu_2553_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2553_p0 <= sext_ln1171_83_reg_3159(16 - 1 downto 0);
    grp_fu_2553_p2 <= (tmp_102_fu_1956_p4 & ap_const_lv8_0);

    grp_fu_2561_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage31_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2561_ce <= ap_const_logic_1;
        else 
            grp_fu_2561_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2561_p0 <= sext_ln1171_81_reg_2997(16 - 1 downto 0);
    grp_fu_2561_p2 <= (tmp_108_reg_3828 & ap_const_lv8_0);

    grp_fu_2569_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2569_ce <= ap_const_logic_1;
        else 
            grp_fu_2569_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2569_p0 <= sext_ln1171_85_reg_3321(16 - 1 downto 0);
    grp_fu_2569_p2 <= (tmp_96_reg_3793 & ap_const_lv8_0);

    grp_fu_2577_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2577_ce <= ap_const_logic_1;
        else 
            grp_fu_2577_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2577_p0 <= sext_ln1171_83_reg_3159(16 - 1 downto 0);
    grp_fu_2577_p2 <= (tmp_109_reg_3863 & ap_const_lv8_0);

    grp_fu_2585_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2585_ce <= ap_const_logic_1;
        else 
            grp_fu_2585_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2585_p0 <= sext_ln1171_85_reg_3321(16 - 1 downto 0);
    grp_fu_2585_p2 <= (tmp_103_reg_3838 & ap_const_lv8_0);

    grp_fu_2593_ce_assign_proc : process(ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            grp_fu_2593_ce <= ap_const_logic_1;
        else 
            grp_fu_2593_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2593_p0 <= sext_ln1171_85_reg_3321(16 - 1 downto 0);
    grp_fu_2593_p2 <= (tmp_110_reg_3878 & ap_const_lv8_0);
    icmp_ln61_fu_811_p2 <= "1" when (ap_sig_allocacmp_data_idx_3 = ap_const_lv5_10) else "0";
        sext_ln1171_73_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_786),24));

        sext_ln1171_75_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_795),24));

        sext_ln1171_77_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_786),24));

        sext_ln1171_79_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DATA_TEMP_V_4_reg_2691),24));

        sext_ln1171_81_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DATA_TEMP_V_5_reg_2696),24));

    sext_ln1171_83_fu_1263_p0 <= reg_795;
        sext_ln1171_83_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1171_83_fu_1263_p0),24));

        sext_ln1171_85_fu_1421_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DATA_TEMP_V_7_reg_2721),24));

    sext_ln1171_fu_828_p0 <= xr_dout;
        sext_ln1171_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1171_fu_828_p0),24));

    tmp_100_fu_1763_p1 <= grp_fu_2457_p3;
    tmp_101_fu_1886_p1 <= grp_fu_2497_p3;
    tmp_102_fu_1956_p1 <= grp_fu_2529_p3;
    tmp_102_fu_1956_p4 <= tmp_102_fu_1956_p1(23 downto 8);
    tmp_103_fu_1992_p1 <= grp_fu_2553_p3;
    tmp_105_fu_1694_p1 <= grp_fu_2425_p3;
    tmp_106_fu_1819_p1 <= grp_fu_2473_p3;
    tmp_107_fu_1899_p1 <= grp_fu_2505_p3;
    tmp_108_fu_1973_p1 <= grp_fu_2537_p3;
    tmp_109_fu_2023_p1 <= grp_fu_2561_p3;
    tmp_110_fu_2056_p1 <= grp_fu_2577_p3;
    tmp_56_fu_885_p1 <= grp_fu_2102_p3;
    tmp_57_fu_964_p1 <= grp_fu_2131_p3;
    tmp_57_fu_964_p4 <= tmp_57_fu_964_p1(23 downto 8);
    tmp_58_fu_1005_p1 <= grp_fu_2149_p3;
    tmp_59_fu_1110_p1 <= grp_fu_2196_p3;
    tmp_60_fu_1217_p1 <= grp_fu_2235_p3;
    tmp_61_fu_1384_p1 <= grp_fu_2304_p3;
    tmp_62_fu_902_p4 <= grp_fu_2111_p2(23 downto 8);
    tmp_63_fu_934_p1 <= grp_fu_2117_p3;
    tmp_63_fu_934_p4 <= tmp_63_fu_934_p1(23 downto 8);
    tmp_64_fu_981_p1 <= grp_fu_2140_p3;
    tmp_65_fu_1050_p1 <= grp_fu_2172_p3;
    tmp_66_fu_1226_p1 <= grp_fu_2244_p3;
    tmp_67_fu_1341_p1 <= grp_fu_2282_p3;
    tmp_67_fu_1341_p4 <= tmp_67_fu_1341_p1(23 downto 8);
    tmp_68_fu_1393_p1 <= grp_fu_2313_p3;
    tmp_70_fu_1028_p1 <= grp_fu_2158_p3;
    tmp_71_fu_1084_p1 <= grp_fu_2180_p3;
    tmp_72_fu_1150_p1 <= grp_fu_2211_p3;
    tmp_73_fu_1275_p1 <= grp_fu_2258_p3;
    tmp_74_fu_1502_p1 <= grp_fu_2346_p3;
    tmp_74_fu_1502_p4 <= tmp_74_fu_1502_p1(23 downto 8);
    tmp_75_fu_1559_p1 <= grp_fu_2377_p3;
    tmp_77_fu_1093_p1 <= grp_fu_2188_p3;
    tmp_78_fu_1191_p1 <= grp_fu_2219_p3;
    tmp_79_fu_1305_p1 <= grp_fu_2266_p3;
    tmp_80_fu_1432_p1 <= grp_fu_2322_p3;
    tmp_81_fu_1586_p1 <= grp_fu_2385_p3;
    tmp_82_fu_1707_p1 <= grp_fu_2433_p3;
    tmp_84_fu_1204_p1 <= grp_fu_2227_p3;
    tmp_85_fu_1318_p1 <= grp_fu_2274_p3;
    tmp_86_fu_1466_p1 <= grp_fu_2330_p3;
    tmp_87_fu_1599_p1 <= grp_fu_2393_p3;
    tmp_88_fu_1716_p1 <= grp_fu_2441_p3;
    tmp_89_fu_1828_p1 <= grp_fu_2481_p3;
    tmp_91_fu_1362_p1 <= grp_fu_2290_p3;
    tmp_92_fu_1479_p1 <= grp_fu_2338_p3;
    tmp_93_fu_1633_p1 <= grp_fu_2401_p3;
    tmp_94_fu_1754_p1 <= grp_fu_2449_p3;
    tmp_95_fu_1837_p1 <= grp_fu_2489_p3;
    tmp_96_fu_1918_p1 <= grp_fu_2521_p3;
    tmp_98_fu_1523_p1 <= grp_fu_2354_p3;
    tmp_99_fu_1646_p1 <= grp_fu_2409_p3;
    tmp_s_fu_856_p4 <= grp_fu_2095_p2(23 downto 8);
    trunc_ln1_fu_1545_p1 <= grp_fu_2368_p3;
    trunc_ln717_1_fu_1982_p1 <= grp_fu_2545_p3;
    trunc_ln717_2_fu_2032_p1 <= grp_fu_2569_p3;
    trunc_ln717_3_fu_2065_p1 <= grp_fu_2585_p3;
    trunc_ln717_4_fu_2085_p1 <= grp_fu_2593_p3;
    trunc_ln717_8_fu_1666_p1 <= grp_fu_2417_p3;
    trunc_ln717_9_fu_1787_p1 <= grp_fu_2465_p3;
    trunc_ln717_s_fu_1908_p1 <= grp_fu_2513_p3;

    xi_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln61_reg_2618, xi_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            xi_blk_n <= xi_empty_n;
        else 
            xi_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    xi_read_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln61_reg_2618, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            xi_read <= ap_const_logic_1;
        else 
            xi_read <= ap_const_logic_0;
        end if; 
    end process;


    xr_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln61_reg_2618, xr_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            xr_blk_n <= xr_empty_n;
        else 
            xr_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    xr_read_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln61_reg_2618, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln61_reg_2618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            xr_read <= ap_const_logic_1;
        else 
            xr_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
