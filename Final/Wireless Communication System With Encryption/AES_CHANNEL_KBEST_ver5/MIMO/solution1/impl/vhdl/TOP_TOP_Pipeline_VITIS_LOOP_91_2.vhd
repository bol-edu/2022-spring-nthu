-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity TOP_TOP_Pipeline_VITIS_LOOP_91_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    noise_out_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    noise_out_empty_n : IN STD_LOGIC;
    noise_out_read : OUT STD_LOGIC;
    MULQ_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    MULQ_out_full_n : IN STD_LOGIC;
    MULQ_out_write : OUT STD_LOGIC;
    Q_TEMP_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    Q_TEMP_V_ce0 : OUT STD_LOGIC;
    Q_TEMP_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    Q_TEMP_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    Q_TEMP_V_ce1 : OUT STD_LOGIC;
    Q_TEMP_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    Q_TEMP_V_address2 : OUT STD_LOGIC_VECTOR (5 downto 0);
    Q_TEMP_V_ce2 : OUT STD_LOGIC;
    Q_TEMP_V_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    Q_TEMP_V_address3 : OUT STD_LOGIC_VECTOR (5 downto 0);
    Q_TEMP_V_ce3 : OUT STD_LOGIC;
    Q_TEMP_V_q3 : IN STD_LOGIC_VECTOR (15 downto 0);
    Q_TEMP_V_address4 : OUT STD_LOGIC_VECTOR (5 downto 0);
    Q_TEMP_V_ce4 : OUT STD_LOGIC;
    Q_TEMP_V_q4 : IN STD_LOGIC_VECTOR (15 downto 0);
    Q_TEMP_V_address5 : OUT STD_LOGIC_VECTOR (5 downto 0);
    Q_TEMP_V_ce5 : OUT STD_LOGIC;
    Q_TEMP_V_q5 : IN STD_LOGIC_VECTOR (15 downto 0);
    Q_TEMP_V_address6 : OUT STD_LOGIC_VECTOR (5 downto 0);
    Q_TEMP_V_ce6 : OUT STD_LOGIC;
    Q_TEMP_V_q6 : IN STD_LOGIC_VECTOR (15 downto 0);
    Q_TEMP_V_address7 : OUT STD_LOGIC_VECTOR (5 downto 0);
    Q_TEMP_V_ce7 : OUT STD_LOGIC;
    Q_TEMP_V_q7 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of TOP_TOP_Pipeline_VITIS_LOOP_91_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011001";
    constant ap_const_lv64_28 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101000";
    constant ap_const_lv64_20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv64_22 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100010";
    constant ap_const_lv64_1A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011010";
    constant ap_const_lv64_29 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101001";
    constant ap_const_lv64_21 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100001";
    constant ap_const_lv64_30 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110000";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_23 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100011";
    constant ap_const_lv64_1B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011011";
    constant ap_const_lv64_2A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101010";
    constant ap_const_lv64_31 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110001";
    constant ap_const_lv64_38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111000";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv64_24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100100";
    constant ap_const_lv64_1C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011100";
    constant ap_const_lv64_2B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101011";
    constant ap_const_lv64_32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110010";
    constant ap_const_lv64_39 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111001";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_1E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011110";
    constant ap_const_lv64_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010110";
    constant ap_const_lv64_25 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100101";
    constant ap_const_lv64_1D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011101";
    constant ap_const_lv64_2C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101100";
    constant ap_const_lv64_33 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110011";
    constant ap_const_lv64_3A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111010";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv64_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010111";
    constant ap_const_lv64_26 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100110";
    constant ap_const_lv64_35 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110101";
    constant ap_const_lv64_2D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101101";
    constant ap_const_lv64_3C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111100";
    constant ap_const_lv64_34 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110100";
    constant ap_const_lv64_3B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111011";
    constant ap_const_lv64_3F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111111";
    constant ap_const_lv64_37 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110111";
    constant ap_const_lv64_2F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101111";
    constant ap_const_lv64_27 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100111";
    constant ap_const_lv64_3E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111110";
    constant ap_const_lv64_36 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110110";
    constant ap_const_lv64_2E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101110";
    constant ap_const_lv64_3D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal icmp_ln91_reg_2754 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage7 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal noise_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal MULQ_out_blk_n : STD_LOGIC;
    signal reg_802 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal reg_807 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal reg_812 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal reg_817 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal reg_823 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_828 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_833 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_839 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_846 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_852 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_859 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln91_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln91_reg_2754_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1171_fu_890_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_reg_2798 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_2_fu_906_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_2_reg_2865 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_4_fu_930_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_4_reg_2942 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_6_fu_975_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_6_reg_3029 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_8_fu_1058_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_8_reg_3131 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_10_fu_1179_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_10_reg_3248 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_12_fu_1317_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_12_reg_3370 : STD_LOGIC_VECTOR (23 downto 0);
    signal Q_TEMP_V_load_46_reg_3427 : STD_LOGIC_VECTOR (15 downto 0);
    signal Q_TEMP_V_load_52_reg_3437 : STD_LOGIC_VECTOR (15 downto 0);
    signal Q_TEMP_V_load_59_reg_3447 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1171_14_fu_1460_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_14_reg_3457 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1171_14_reg_3457_pp0_iter2_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal Q_TEMP_V_load_55_reg_3529 : STD_LOGIC_VECTOR (15 downto 0);
    signal Q_TEMP_V_load_61_reg_3539 : STD_LOGIC_VECTOR (15 downto 0);
    signal Q_TEMP_V_load_62_reg_3544 : STD_LOGIC_VECTOR (15 downto 0);
    signal Q_TEMP_V_load_63_reg_3549 : STD_LOGIC_VECTOR (15 downto 0);
    signal Q_TEMP_V_load_63_reg_3549_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_32_reg_3584 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_reg_3594 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_reg_3604 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_reg_3634 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_51_reg_3674 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_8_reg_3684 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_9_reg_3689 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_s_reg_3734 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_1_reg_3739 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_2_reg_3774 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_reg_3779 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_48_reg_3804 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_3_reg_3814 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_55_reg_3824 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_4_reg_3829 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal data_idx_fu_176 : STD_LOGIC_VECTOR (4 downto 0);
    signal data_idx_2_fu_879_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_data_idx_1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage5_01001 : BOOLEAN;
    signal ap_block_pp0_stage6_01001 : BOOLEAN;
    signal ap_block_pp0_stage7_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal sext_ln1171_fu_890_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1171_2_fu_906_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1171_4_fu_930_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2188_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_s_fu_958_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1171_6_fu_975_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2195_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_7_fu_983_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2202_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_14_fu_1004_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_1041_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2209_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_1_fu_1041_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1171_8_fu_1058_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_fu_1066_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2218_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_fu_1066_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_1087_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2227_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_15_fu_1087_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2236_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_21_fu_1108_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2242_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_28_fu_1129_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_1162_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2248_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_2_fu_1162_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1171_10_fu_1179_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_1187_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2257_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_9_fu_1187_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_fu_1208_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2266_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_16_fu_1208_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_fu_1229_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2275_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_22_fu_1229_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_fu_1250_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2283_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_29_fu_1250_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2291_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_35_fu_1271_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_1300_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2297_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_3_fu_1300_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1171_12_fu_1317_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_fu_1325_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2306_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_10_fu_1325_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_fu_1346_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2315_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_17_fu_1346_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_fu_1367_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2324_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_23_fu_1367_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_fu_1388_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2332_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_30_fu_1388_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_fu_1405_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2340_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_36_fu_1405_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2348_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_42_fu_1422_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_1443_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2354_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4_fu_1443_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_1468_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2363_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_11_fu_1468_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_fu_1489_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2372_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_18_fu_1489_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_fu_1506_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2381_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_24_fu_1506_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_31_fu_1527_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2389_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_31_fu_1527_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_fu_1548_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2397_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_37_fu_1548_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_fu_1569_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2405_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_43_fu_1569_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2413_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_49_fu_1590_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_1607_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2419_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_fu_1607_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_1624_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2428_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_12_fu_1624_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_1641_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2437_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_19_fu_1641_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_fu_1662_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2446_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_25_fu_1662_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_32_fu_1683_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2454_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_38_fu_1696_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2462_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_44_fu_1709_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2470_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_50_fu_1721_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2478_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_50_fu_1721_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_fu_1741_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2486_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_6_fu_1741_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_1758_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2495_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_13_fu_1758_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_fu_1775_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2504_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_26_fu_1784_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2513_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_26_fu_1784_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_51_fu_1833_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2521_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln717_8_fu_1846_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2529_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln717_9_fu_1855_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2538_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_27_fu_1871_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2547_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_27_fu_1871_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_33_fu_1888_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2555_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_33_fu_1888_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_fu_1905_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2563_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_39_fu_1905_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_45_fu_1922_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2571_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_45_fu_1922_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_s_fu_1953_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2579_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln717_1_fu_1962_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2587_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_34_fu_1971_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2595_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_34_fu_1971_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_40_fu_1988_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2603_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_40_fu_1988_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_46_fu_2009_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2611_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_46_fu_2009_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_52_fu_2026_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2619_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_52_fu_2026_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_2_fu_2046_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2627_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_41_fu_2055_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2635_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_47_fu_2064_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2643_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_47_fu_2064_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_53_fu_2084_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2651_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_53_fu_2084_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_48_fu_2108_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2659_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_54_fu_2117_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2667_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_54_fu_2117_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_3_fu_2134_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2675_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_55_fu_2150_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2683_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln717_4_fu_2159_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2691_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln717_5_fu_2178_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2699_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2188_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2195_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2202_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2209_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2209_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2218_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2218_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2227_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2227_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2236_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2242_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2248_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2248_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2257_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2257_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2266_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2266_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2275_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2275_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2283_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2283_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2291_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2297_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2297_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2306_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2306_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2315_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2315_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2324_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2324_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2332_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2332_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2340_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2340_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2348_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2354_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2354_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2363_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2363_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2372_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2372_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2381_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2381_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2389_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2389_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2397_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2397_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2405_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2405_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2413_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2419_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2419_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2428_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2428_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2437_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2437_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2446_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2446_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2454_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2454_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2462_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2462_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2470_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2470_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2478_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2478_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2486_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2486_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2495_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2495_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2504_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2504_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2513_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2513_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2521_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2521_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2529_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2529_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2538_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2538_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2547_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2547_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2555_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2555_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2563_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2563_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2571_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2571_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2579_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2579_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2587_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2587_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2595_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2595_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2603_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2603_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2611_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2611_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2619_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2619_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2627_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2627_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2635_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2635_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2643_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2643_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2651_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2651_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2659_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2659_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2667_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2667_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2675_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2675_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2683_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2683_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2691_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2691_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2699_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2699_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_2188_ce : STD_LOGIC;
    signal grp_fu_2195_ce : STD_LOGIC;
    signal grp_fu_2202_ce : STD_LOGIC;
    signal grp_fu_2209_ce : STD_LOGIC;
    signal grp_fu_2218_ce : STD_LOGIC;
    signal grp_fu_2227_ce : STD_LOGIC;
    signal grp_fu_2236_ce : STD_LOGIC;
    signal grp_fu_2242_ce : STD_LOGIC;
    signal grp_fu_2248_ce : STD_LOGIC;
    signal grp_fu_2257_ce : STD_LOGIC;
    signal grp_fu_2266_ce : STD_LOGIC;
    signal grp_fu_2275_ce : STD_LOGIC;
    signal grp_fu_2283_ce : STD_LOGIC;
    signal grp_fu_2291_ce : STD_LOGIC;
    signal grp_fu_2297_ce : STD_LOGIC;
    signal grp_fu_2306_ce : STD_LOGIC;
    signal grp_fu_2315_ce : STD_LOGIC;
    signal grp_fu_2324_ce : STD_LOGIC;
    signal grp_fu_2332_ce : STD_LOGIC;
    signal grp_fu_2340_ce : STD_LOGIC;
    signal grp_fu_2348_ce : STD_LOGIC;
    signal grp_fu_2354_ce : STD_LOGIC;
    signal grp_fu_2363_ce : STD_LOGIC;
    signal grp_fu_2372_ce : STD_LOGIC;
    signal grp_fu_2381_ce : STD_LOGIC;
    signal grp_fu_2389_ce : STD_LOGIC;
    signal grp_fu_2397_ce : STD_LOGIC;
    signal grp_fu_2405_ce : STD_LOGIC;
    signal grp_fu_2413_ce : STD_LOGIC;
    signal grp_fu_2419_ce : STD_LOGIC;
    signal grp_fu_2428_ce : STD_LOGIC;
    signal grp_fu_2437_ce : STD_LOGIC;
    signal grp_fu_2446_ce : STD_LOGIC;
    signal grp_fu_2454_ce : STD_LOGIC;
    signal grp_fu_2462_ce : STD_LOGIC;
    signal grp_fu_2470_ce : STD_LOGIC;
    signal grp_fu_2478_ce : STD_LOGIC;
    signal grp_fu_2486_ce : STD_LOGIC;
    signal grp_fu_2495_ce : STD_LOGIC;
    signal grp_fu_2504_ce : STD_LOGIC;
    signal grp_fu_2513_ce : STD_LOGIC;
    signal grp_fu_2521_ce : STD_LOGIC;
    signal grp_fu_2529_ce : STD_LOGIC;
    signal grp_fu_2538_ce : STD_LOGIC;
    signal grp_fu_2547_ce : STD_LOGIC;
    signal grp_fu_2555_ce : STD_LOGIC;
    signal grp_fu_2563_ce : STD_LOGIC;
    signal grp_fu_2571_ce : STD_LOGIC;
    signal grp_fu_2579_ce : STD_LOGIC;
    signal grp_fu_2587_ce : STD_LOGIC;
    signal grp_fu_2595_ce : STD_LOGIC;
    signal grp_fu_2603_ce : STD_LOGIC;
    signal grp_fu_2611_ce : STD_LOGIC;
    signal grp_fu_2619_ce : STD_LOGIC;
    signal grp_fu_2627_ce : STD_LOGIC;
    signal grp_fu_2635_ce : STD_LOGIC;
    signal grp_fu_2643_ce : STD_LOGIC;
    signal grp_fu_2651_ce : STD_LOGIC;
    signal grp_fu_2659_ce : STD_LOGIC;
    signal grp_fu_2667_ce : STD_LOGIC;
    signal grp_fu_2675_ce : STD_LOGIC;
    signal grp_fu_2683_ce : STD_LOGIC;
    signal grp_fu_2691_ce : STD_LOGIC;
    signal grp_fu_2699_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter1_stage4 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component TOP_mul_mul_16s_16s_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component TOP_mac_muladd_16s_16s_24ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component TOP_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_mul_16s_16s_24_4_1_U896 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2188_p0,
        din1 => Q_TEMP_V_q7,
        ce => grp_fu_2188_ce,
        dout => grp_fu_2188_p2);

    mul_mul_16s_16s_24_4_1_U897 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2195_p0,
        din1 => Q_TEMP_V_q3,
        ce => grp_fu_2195_ce,
        dout => grp_fu_2195_p2);

    mul_mul_16s_16s_24_4_1_U898 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2202_p0,
        din1 => Q_TEMP_V_q0,
        ce => grp_fu_2202_ce,
        dout => grp_fu_2202_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U899 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2209_p0,
        din1 => reg_802,
        din2 => grp_fu_2209_p2,
        ce => grp_fu_2209_ce,
        dout => grp_fu_2209_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U900 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2218_p0,
        din1 => reg_817,
        din2 => grp_fu_2218_p2,
        ce => grp_fu_2218_ce,
        dout => grp_fu_2218_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U901 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2227_p0,
        din1 => Q_TEMP_V_q4,
        din2 => grp_fu_2227_p2,
        ce => grp_fu_2227_ce,
        dout => grp_fu_2227_p3);

    mul_mul_16s_16s_24_4_1_U902 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2236_p0,
        din1 => Q_TEMP_V_q2,
        ce => grp_fu_2236_ce,
        dout => grp_fu_2236_p2);

    mul_mul_16s_16s_24_4_1_U903 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2242_p0,
        din1 => Q_TEMP_V_q0,
        ce => grp_fu_2242_ce,
        dout => grp_fu_2242_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U904 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2248_p0,
        din1 => reg_807,
        din2 => grp_fu_2248_p2,
        ce => grp_fu_2248_ce,
        dout => grp_fu_2248_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U905 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2257_p0,
        din1 => reg_823,
        din2 => grp_fu_2257_p2,
        ce => grp_fu_2257_ce,
        dout => grp_fu_2257_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U906 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2266_p0,
        din1 => reg_833,
        din2 => grp_fu_2266_p2,
        ce => grp_fu_2266_ce,
        dout => grp_fu_2266_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U907 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2275_p0,
        din1 => reg_839,
        din2 => grp_fu_2275_p2,
        ce => grp_fu_2275_ce,
        dout => grp_fu_2275_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U908 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2283_p0,
        din1 => Q_TEMP_V_q1,
        din2 => grp_fu_2283_p2,
        ce => grp_fu_2283_ce,
        dout => grp_fu_2283_p3);

    mul_mul_16s_16s_24_4_1_U909 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2291_p0,
        din1 => Q_TEMP_V_q0,
        ce => grp_fu_2291_ce,
        dout => grp_fu_2291_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U910 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2297_p0,
        din1 => reg_812,
        din2 => grp_fu_2297_p2,
        ce => grp_fu_2297_ce,
        dout => grp_fu_2297_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U911 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2306_p0,
        din1 => reg_828,
        din2 => grp_fu_2306_p2,
        ce => grp_fu_2306_ce,
        dout => grp_fu_2306_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U912 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2315_p0,
        din1 => reg_839,
        din2 => grp_fu_2315_p2,
        ce => grp_fu_2315_ce,
        dout => grp_fu_2315_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U913 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2324_p0,
        din1 => reg_852,
        din2 => grp_fu_2324_p2,
        ce => grp_fu_2324_ce,
        dout => grp_fu_2324_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U914 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2332_p0,
        din1 => Q_TEMP_V_q2,
        din2 => grp_fu_2332_p2,
        ce => grp_fu_2332_ce,
        dout => grp_fu_2332_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U915 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2340_p0,
        din1 => Q_TEMP_V_q1,
        din2 => grp_fu_2340_p2,
        ce => grp_fu_2340_ce,
        dout => grp_fu_2340_p3);

    mul_mul_16s_16s_24_4_1_U916 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2348_p0,
        din1 => Q_TEMP_V_q0,
        ce => grp_fu_2348_ce,
        dout => grp_fu_2348_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U917 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2354_p0,
        din1 => reg_802,
        din2 => grp_fu_2354_p2,
        ce => grp_fu_2354_ce,
        dout => grp_fu_2354_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U918 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2363_p0,
        din1 => reg_823,
        din2 => grp_fu_2363_p2,
        ce => grp_fu_2363_ce,
        dout => grp_fu_2363_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U919 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2372_p0,
        din1 => reg_846,
        din2 => grp_fu_2372_p2,
        ce => grp_fu_2372_ce,
        dout => grp_fu_2372_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U920 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2381_p0,
        din1 => reg_852,
        din2 => grp_fu_2381_p2,
        ce => grp_fu_2381_ce,
        dout => grp_fu_2381_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U921 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2389_p0,
        din1 => Q_TEMP_V_q4,
        din2 => grp_fu_2389_p2,
        ce => grp_fu_2389_ce,
        dout => grp_fu_2389_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U922 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2397_p0,
        din1 => Q_TEMP_V_q2,
        din2 => grp_fu_2397_p2,
        ce => grp_fu_2397_ce,
        dout => grp_fu_2397_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U923 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2405_p0,
        din1 => Q_TEMP_V_q1,
        din2 => grp_fu_2405_p2,
        ce => grp_fu_2405_ce,
        dout => grp_fu_2405_p3);

    mul_mul_16s_16s_24_4_1_U924 : component TOP_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2413_p0,
        din1 => Q_TEMP_V_q0,
        ce => grp_fu_2413_ce,
        dout => grp_fu_2413_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U925 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2419_p0,
        din1 => reg_817,
        din2 => grp_fu_2419_p2,
        ce => grp_fu_2419_ce,
        dout => grp_fu_2419_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U926 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2428_p0,
        din1 => reg_833,
        din2 => grp_fu_2428_p2,
        ce => grp_fu_2428_ce,
        dout => grp_fu_2428_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U927 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2437_p0,
        din1 => reg_839,
        din2 => grp_fu_2437_p2,
        ce => grp_fu_2437_ce,
        dout => grp_fu_2437_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U928 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2446_p0,
        din1 => reg_859,
        din2 => grp_fu_2446_p2,
        ce => grp_fu_2446_ce,
        dout => grp_fu_2446_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U929 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2454_p0,
        din1 => reg_852,
        din2 => grp_fu_2454_p2,
        ce => grp_fu_2454_ce,
        dout => grp_fu_2454_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U930 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2462_p0,
        din1 => Q_TEMP_V_q4,
        din2 => grp_fu_2462_p2,
        ce => grp_fu_2462_ce,
        dout => grp_fu_2462_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U931 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2470_p0,
        din1 => Q_TEMP_V_q2,
        din2 => grp_fu_2470_p2,
        ce => grp_fu_2470_ce,
        dout => grp_fu_2470_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U932 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2478_p0,
        din1 => Q_TEMP_V_q0,
        din2 => grp_fu_2478_p2,
        ce => grp_fu_2478_ce,
        dout => grp_fu_2478_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U933 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2486_p0,
        din1 => reg_807,
        din2 => grp_fu_2486_p2,
        ce => grp_fu_2486_ce,
        dout => grp_fu_2486_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U934 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2495_p0,
        din1 => reg_828,
        din2 => grp_fu_2495_p2,
        ce => grp_fu_2495_ce,
        dout => grp_fu_2495_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U935 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2504_p0,
        din1 => reg_823,
        din2 => grp_fu_2504_p2,
        ce => grp_fu_2504_ce,
        dout => grp_fu_2504_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U936 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2513_p0,
        din1 => reg_846,
        din2 => grp_fu_2513_p2,
        ce => grp_fu_2513_ce,
        dout => grp_fu_2513_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U937 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2521_p0,
        din1 => Q_TEMP_V_q1,
        din2 => grp_fu_2521_p2,
        ce => grp_fu_2521_ce,
        dout => grp_fu_2521_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U938 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2529_p0,
        din1 => reg_812,
        din2 => grp_fu_2529_p2,
        ce => grp_fu_2529_ce,
        dout => grp_fu_2529_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U939 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2538_p0,
        din1 => reg_802,
        din2 => grp_fu_2538_p2,
        ce => grp_fu_2538_ce,
        dout => grp_fu_2538_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U940 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2547_p0,
        din1 => reg_833,
        din2 => grp_fu_2547_p2,
        ce => grp_fu_2547_ce,
        dout => grp_fu_2547_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U941 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2555_p0,
        din1 => reg_839,
        din2 => grp_fu_2555_p2,
        ce => grp_fu_2555_ce,
        dout => grp_fu_2555_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U942 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2563_p0,
        din1 => reg_852,
        din2 => grp_fu_2563_p2,
        ce => grp_fu_2563_ce,
        dout => grp_fu_2563_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U943 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2571_p0,
        din1 => reg_859,
        din2 => grp_fu_2571_p2,
        ce => grp_fu_2571_ce,
        dout => grp_fu_2571_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U944 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2579_p0,
        din1 => reg_817,
        din2 => grp_fu_2579_p2,
        ce => grp_fu_2579_ce,
        dout => grp_fu_2579_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U945 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2587_p0,
        din1 => reg_807,
        din2 => grp_fu_2587_p2,
        ce => grp_fu_2587_ce,
        dout => grp_fu_2587_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U946 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2595_p0,
        din1 => reg_823,
        din2 => grp_fu_2595_p2,
        ce => grp_fu_2595_ce,
        dout => grp_fu_2595_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U947 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2603_p0,
        din1 => reg_846,
        din2 => grp_fu_2603_p2,
        ce => grp_fu_2603_ce,
        dout => grp_fu_2603_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U948 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2611_p0,
        din1 => Q_TEMP_V_load_52_reg_3437,
        din2 => grp_fu_2611_p2,
        ce => grp_fu_2611_ce,
        dout => grp_fu_2611_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U949 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2619_p0,
        din1 => Q_TEMP_V_load_59_reg_3447,
        din2 => grp_fu_2619_p2,
        ce => grp_fu_2619_ce,
        dout => grp_fu_2619_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U950 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2627_p0,
        din1 => reg_828,
        din2 => grp_fu_2627_p2,
        ce => grp_fu_2627_ce,
        dout => grp_fu_2627_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U951 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2635_p0,
        din1 => Q_TEMP_V_load_46_reg_3427,
        din2 => grp_fu_2635_p2,
        ce => grp_fu_2635_ce,
        dout => grp_fu_2635_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U952 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2643_p0,
        din1 => reg_833,
        din2 => grp_fu_2643_p2,
        ce => grp_fu_2643_ce,
        dout => grp_fu_2643_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U953 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2651_p0,
        din1 => reg_839,
        din2 => grp_fu_2651_p2,
        ce => grp_fu_2651_ce,
        dout => grp_fu_2651_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U954 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2659_p0,
        din1 => reg_852,
        din2 => grp_fu_2659_p2,
        ce => grp_fu_2659_ce,
        dout => grp_fu_2659_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U955 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2667_p0,
        din1 => Q_TEMP_V_load_61_reg_3539,
        din2 => grp_fu_2667_p2,
        ce => grp_fu_2667_ce,
        dout => grp_fu_2667_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U956 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2675_p0,
        din1 => reg_859,
        din2 => grp_fu_2675_p2,
        ce => grp_fu_2675_ce,
        dout => grp_fu_2675_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U957 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2683_p0,
        din1 => Q_TEMP_V_load_62_reg_3544,
        din2 => grp_fu_2683_p2,
        ce => grp_fu_2683_ce,
        dout => grp_fu_2683_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U958 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2691_p0,
        din1 => Q_TEMP_V_load_55_reg_3529,
        din2 => grp_fu_2691_p2,
        ce => grp_fu_2691_ce,
        dout => grp_fu_2691_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U959 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2699_p0,
        din1 => Q_TEMP_V_load_63_reg_3549_pp0_iter2_reg,
        din2 => grp_fu_2699_p2,
        ce => grp_fu_2699_ce,
        dout => grp_fu_2699_p3);

    flow_control_loop_pipe_sequential_init_U : component TOP_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage7,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage7)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage4) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    data_idx_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln91_fu_873_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    data_idx_fu_176 <= data_idx_2_fu_879_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    data_idx_fu_176 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    reg_802_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                reg_802 <= Q_TEMP_V_q7;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                reg_802 <= Q_TEMP_V_q6;
            end if; 
        end if;
    end process;

    reg_807_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
                reg_807 <= Q_TEMP_V_q7;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                reg_807 <= Q_TEMP_V_q5;
            end if; 
        end if;
    end process;

    reg_812_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    reg_812 <= Q_TEMP_V_q7;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    reg_812 <= Q_TEMP_V_q4;
                end if;
            end if; 
        end if;
    end process;

    reg_817_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    reg_817 <= Q_TEMP_V_q7;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    reg_817 <= Q_TEMP_V_q6;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    reg_817 <= Q_TEMP_V_q2;
                end if;
            end if; 
        end if;
    end process;

    reg_823_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
                reg_823 <= Q_TEMP_V_q6;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                reg_823 <= Q_TEMP_V_q1;
            end if; 
        end if;
    end process;

    reg_828_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                reg_828 <= Q_TEMP_V_q6;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                reg_828 <= Q_TEMP_V_q5;
            end if; 
        end if;
    end process;

    reg_833_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
                reg_833 <= Q_TEMP_V_q6;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                reg_833 <= Q_TEMP_V_q5;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                reg_833 <= Q_TEMP_V_q3;
            end if; 
        end if;
    end process;

    reg_839_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                reg_839 <= Q_TEMP_V_q3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
                reg_839 <= Q_TEMP_V_q5;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                reg_839 <= Q_TEMP_V_q4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                reg_839 <= Q_TEMP_V_q1;
            end if; 
        end if;
    end process;

    reg_846_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    reg_846 <= Q_TEMP_V_q4;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    reg_846 <= Q_TEMP_V_q5;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    reg_846 <= Q_TEMP_V_q3;
                end if;
            end if; 
        end if;
    end process;

    reg_852_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                reg_852 <= Q_TEMP_V_q5;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
                reg_852 <= Q_TEMP_V_q3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                reg_852 <= Q_TEMP_V_q4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                reg_852 <= Q_TEMP_V_q2;
            end if; 
        end if;
    end process;

    reg_859_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                reg_859 <= Q_TEMP_V_q7;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                reg_859 <= Q_TEMP_V_q1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                reg_859 <= Q_TEMP_V_q3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                Q_TEMP_V_load_46_reg_3427 <= Q_TEMP_V_q3;
                Q_TEMP_V_load_52_reg_3437 <= Q_TEMP_V_q2;
                Q_TEMP_V_load_59_reg_3447 <= Q_TEMP_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                Q_TEMP_V_load_55_reg_3529 <= Q_TEMP_V_q4;
                Q_TEMP_V_load_61_reg_3539 <= Q_TEMP_V_q2;
                Q_TEMP_V_load_62_reg_3544 <= Q_TEMP_V_q1;
                Q_TEMP_V_load_63_reg_3549 <= Q_TEMP_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                Q_TEMP_V_load_63_reg_3549_pp0_iter2_reg <= Q_TEMP_V_load_63_reg_3549;
                icmp_ln91_reg_2754 <= icmp_ln91_fu_873_p2;
                icmp_ln91_reg_2754_pp0_iter1_reg <= icmp_ln91_reg_2754;
                sext_ln1171_14_reg_3457 <= sext_ln1171_14_fu_1460_p1;
                sext_ln1171_14_reg_3457_pp0_iter2_reg <= sext_ln1171_14_reg_3457;
                trunc_ln717_4_reg_3829 <= trunc_ln717_4_fu_2159_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                sext_ln1171_10_reg_3248 <= sext_ln1171_10_fu_1179_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                sext_ln1171_12_reg_3370 <= sext_ln1171_12_fu_1317_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                sext_ln1171_2_reg_2865 <= sext_ln1171_2_fu_906_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                sext_ln1171_4_reg_2942 <= sext_ln1171_4_fu_930_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                sext_ln1171_6_reg_3029 <= sext_ln1171_6_fu_975_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                sext_ln1171_8_reg_3131 <= sext_ln1171_8_fu_1058_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                sext_ln1171_reg_2798 <= sext_ln1171_fu_890_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_20_reg_3634 <= tmp_20_fu_1775_p1(23 downto 8);
                tmp_51_reg_3674 <= tmp_51_fu_1833_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_32_reg_3584 <= tmp_32_fu_1683_p1(23 downto 8);
                tmp_38_reg_3594 <= tmp_38_fu_1696_p1(23 downto 8);
                tmp_44_reg_3604 <= tmp_44_fu_1709_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_41_reg_3779 <= tmp_41_fu_2055_p1(23 downto 8);
                trunc_ln717_2_reg_3774 <= trunc_ln717_2_fu_2046_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_48_reg_3804 <= tmp_48_fu_2108_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_55_reg_3824 <= tmp_55_fu_2150_p1(23 downto 8);
                trunc_ln717_3_reg_3814 <= trunc_ln717_3_fu_2134_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                trunc_ln717_1_reg_3739 <= trunc_ln717_1_fu_1962_p1(23 downto 8);
                trunc_ln717_s_reg_3734 <= trunc_ln717_s_fu_1953_p1(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                trunc_ln717_8_reg_3684 <= trunc_ln717_8_fu_1846_p1(23 downto 8);
                trunc_ln717_9_reg_3689 <= trunc_ln717_9_fu_1855_p1(23 downto 8);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_block_pp0_stage4_subdone, ap_condition_exit_pp0_iter1_stage4, ap_idle_pp0_0to0, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to2, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage4) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;

    MULQ_out_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, MULQ_out_full_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            MULQ_out_blk_n <= MULQ_out_full_n;
        else 
            MULQ_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    MULQ_out_din_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, trunc_ln717_8_reg_3684, trunc_ln717_9_reg_3689, trunc_ln717_s_reg_3734, trunc_ln717_1_reg_3739, trunc_ln717_2_reg_3774, trunc_ln717_3_reg_3814, trunc_ln717_4_reg_3829, ap_block_pp0_stage5_01001, ap_block_pp0_stage6_01001, ap_block_pp0_stage7_01001, ap_block_pp0_stage0_01001, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage4_01001, trunc_ln717_5_fu_2178_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            MULQ_out_din <= trunc_ln717_5_fu_2178_p1(23 downto 8);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            MULQ_out_din <= trunc_ln717_4_reg_3829;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            MULQ_out_din <= trunc_ln717_3_reg_3814;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            MULQ_out_din <= trunc_ln717_2_reg_3774;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            MULQ_out_din <= trunc_ln717_1_reg_3739;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            MULQ_out_din <= trunc_ln717_s_reg_3734;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            MULQ_out_din <= trunc_ln717_9_reg_3689;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            MULQ_out_din <= trunc_ln717_8_reg_3684;
        else 
            MULQ_out_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    MULQ_out_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            MULQ_out_write <= ap_const_logic_1;
        else 
            MULQ_out_write <= ap_const_logic_0;
        end if; 
    end process;


    Q_TEMP_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                Q_TEMP_V_address0 <= ap_const_lv64_3F(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                Q_TEMP_V_address0 <= ap_const_lv64_1F(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                Q_TEMP_V_address0 <= ap_const_lv64_F(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Q_TEMP_V_address0 <= ap_const_lv64_7(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                Q_TEMP_V_address0 <= ap_const_lv64_6(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                Q_TEMP_V_address0 <= ap_const_lv64_5(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                Q_TEMP_V_address0 <= ap_const_lv64_4(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                Q_TEMP_V_address0 <= ap_const_lv64_2(6 - 1 downto 0);
            else 
                Q_TEMP_V_address0 <= "XXXXXX";
            end if;
        else 
            Q_TEMP_V_address0 <= "XXXXXX";
        end if; 
    end process;


    Q_TEMP_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                Q_TEMP_V_address1 <= ap_const_lv64_37(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                Q_TEMP_V_address1 <= ap_const_lv64_17(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                Q_TEMP_V_address1 <= ap_const_lv64_1E(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Q_TEMP_V_address1 <= ap_const_lv64_E(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                Q_TEMP_V_address1 <= ap_const_lv64_D(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                Q_TEMP_V_address1 <= ap_const_lv64_C(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                Q_TEMP_V_address1 <= ap_const_lv64_B(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                Q_TEMP_V_address1 <= ap_const_lv64_11(6 - 1 downto 0);
            else 
                Q_TEMP_V_address1 <= "XXXXXX";
            end if;
        else 
            Q_TEMP_V_address1 <= "XXXXXX";
        end if; 
    end process;


    Q_TEMP_V_address2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                Q_TEMP_V_address2 <= ap_const_lv64_2F(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                Q_TEMP_V_address2 <= ap_const_lv64_26(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                Q_TEMP_V_address2 <= ap_const_lv64_16(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Q_TEMP_V_address2 <= ap_const_lv64_15(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                Q_TEMP_V_address2 <= ap_const_lv64_14(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                Q_TEMP_V_address2 <= ap_const_lv64_13(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                Q_TEMP_V_address2 <= ap_const_lv64_3(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                Q_TEMP_V_address2 <= ap_const_lv64_9(6 - 1 downto 0);
            else 
                Q_TEMP_V_address2 <= "XXXXXX";
            end if;
        else 
            Q_TEMP_V_address2 <= "XXXXXX";
        end if; 
    end process;


    Q_TEMP_V_address3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                Q_TEMP_V_address3 <= ap_const_lv64_27(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                Q_TEMP_V_address3 <= ap_const_lv64_35(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                Q_TEMP_V_address3 <= ap_const_lv64_25(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Q_TEMP_V_address3 <= ap_const_lv64_24(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                Q_TEMP_V_address3 <= ap_const_lv64_23(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                Q_TEMP_V_address3 <= ap_const_lv64_22(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                Q_TEMP_V_address3 <= ap_const_lv64_12(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                Q_TEMP_V_address3 <= ap_const_lv64_1(6 - 1 downto 0);
            else 
                Q_TEMP_V_address3 <= "XXXXXX";
            end if;
        else 
            Q_TEMP_V_address3 <= "XXXXXX";
        end if; 
    end process;


    Q_TEMP_V_address4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                Q_TEMP_V_address4 <= ap_const_lv64_3E(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                Q_TEMP_V_address4 <= ap_const_lv64_2D(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                Q_TEMP_V_address4 <= ap_const_lv64_1D(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Q_TEMP_V_address4 <= ap_const_lv64_1C(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                Q_TEMP_V_address4 <= ap_const_lv64_1B(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                Q_TEMP_V_address4 <= ap_const_lv64_1A(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                Q_TEMP_V_address4 <= ap_const_lv64_A(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                Q_TEMP_V_address4 <= ap_const_lv64_18(6 - 1 downto 0);
            else 
                Q_TEMP_V_address4 <= "XXXXXX";
            end if;
        else 
            Q_TEMP_V_address4 <= "XXXXXX";
        end if; 
    end process;


    Q_TEMP_V_address5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                Q_TEMP_V_address5 <= ap_const_lv64_36(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                Q_TEMP_V_address5 <= ap_const_lv64_3C(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                Q_TEMP_V_address5 <= ap_const_lv64_2C(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Q_TEMP_V_address5 <= ap_const_lv64_2B(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                Q_TEMP_V_address5 <= ap_const_lv64_2A(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                Q_TEMP_V_address5 <= ap_const_lv64_29(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                Q_TEMP_V_address5 <= ap_const_lv64_19(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                Q_TEMP_V_address5 <= ap_const_lv64_10(6 - 1 downto 0);
            else 
                Q_TEMP_V_address5 <= "XXXXXX";
            end if;
        else 
            Q_TEMP_V_address5 <= "XXXXXX";
        end if; 
    end process;


    Q_TEMP_V_address6_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                Q_TEMP_V_address6 <= ap_const_lv64_2E(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                Q_TEMP_V_address6 <= ap_const_lv64_34(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                Q_TEMP_V_address6 <= ap_const_lv64_33(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Q_TEMP_V_address6 <= ap_const_lv64_32(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                Q_TEMP_V_address6 <= ap_const_lv64_31(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                Q_TEMP_V_address6 <= ap_const_lv64_21(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                Q_TEMP_V_address6 <= ap_const_lv64_28(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                Q_TEMP_V_address6 <= ap_const_lv64_8(6 - 1 downto 0);
            else 
                Q_TEMP_V_address6 <= "XXXXXX";
            end if;
        else 
            Q_TEMP_V_address6 <= "XXXXXX";
        end if; 
    end process;


    Q_TEMP_V_address7_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                Q_TEMP_V_address7 <= ap_const_lv64_3D(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                Q_TEMP_V_address7 <= ap_const_lv64_3B(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                Q_TEMP_V_address7 <= ap_const_lv64_3A(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Q_TEMP_V_address7 <= ap_const_lv64_39(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                Q_TEMP_V_address7 <= ap_const_lv64_38(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                Q_TEMP_V_address7 <= ap_const_lv64_30(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                Q_TEMP_V_address7 <= ap_const_lv64_20(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                Q_TEMP_V_address7 <= ap_const_lv64_0(6 - 1 downto 0);
            else 
                Q_TEMP_V_address7 <= "XXXXXX";
            end if;
        else 
            Q_TEMP_V_address7 <= "XXXXXX";
        end if; 
    end process;


    Q_TEMP_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Q_TEMP_V_ce0 <= ap_const_logic_1;
        else 
            Q_TEMP_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Q_TEMP_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Q_TEMP_V_ce1 <= ap_const_logic_1;
        else 
            Q_TEMP_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Q_TEMP_V_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Q_TEMP_V_ce2 <= ap_const_logic_1;
        else 
            Q_TEMP_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Q_TEMP_V_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Q_TEMP_V_ce3 <= ap_const_logic_1;
        else 
            Q_TEMP_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Q_TEMP_V_ce4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Q_TEMP_V_ce4 <= ap_const_logic_1;
        else 
            Q_TEMP_V_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    Q_TEMP_V_ce5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Q_TEMP_V_ce5 <= ap_const_logic_1;
        else 
            Q_TEMP_V_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    Q_TEMP_V_ce6_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Q_TEMP_V_ce6 <= ap_const_logic_1;
        else 
            Q_TEMP_V_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    Q_TEMP_V_ce7_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Q_TEMP_V_ce7 <= ap_const_logic_1;
        else 
            Q_TEMP_V_ce7 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, noise_out_empty_n, MULQ_out_full_n)
    begin
                ap_block_pp0_stage0_01001 <= (((noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, noise_out_empty_n, MULQ_out_full_n)
    begin
                ap_block_pp0_stage0_11001 <= (((noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, noise_out_empty_n, MULQ_out_full_n)
    begin
                ap_block_pp0_stage0_subdone <= (((noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage1_01001 <= (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage1_11001 <= (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage1_subdone <= (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage2_01001 <= (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage2_11001 <= (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage2_subdone <= (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage3_01001 <= (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage3_11001 <= (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage3_subdone <= (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage4_01001 <= (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage4_11001 <= (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage4_subdone <= (((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_0 = MULQ_out_full_n)));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage5_01001 <= (((ap_const_logic_0 = MULQ_out_full_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage5_11001 <= (((ap_const_logic_0 = MULQ_out_full_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage5_subdone <= (((ap_const_logic_0 = MULQ_out_full_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage6_01001 <= (((ap_const_logic_0 = MULQ_out_full_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage6_11001 <= (((ap_const_logic_0 = MULQ_out_full_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage6_subdone <= (((ap_const_logic_0 = MULQ_out_full_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage7_01001 <= (((ap_const_logic_0 = MULQ_out_full_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage7_11001 <= (((ap_const_logic_0 = MULQ_out_full_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, noise_out_empty_n, icmp_ln91_reg_2754, MULQ_out_full_n)
    begin
                ap_block_pp0_stage7_subdone <= (((ap_const_logic_0 = MULQ_out_full_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp0_stage5_iter1_assign_proc : process(MULQ_out_full_n)
    begin
                ap_block_state14_pp0_stage5_iter1 <= (ap_const_logic_0 = MULQ_out_full_n);
    end process;


    ap_block_state15_pp0_stage6_iter1_assign_proc : process(MULQ_out_full_n)
    begin
                ap_block_state15_pp0_stage6_iter1 <= (ap_const_logic_0 = MULQ_out_full_n);
    end process;


    ap_block_state16_pp0_stage7_iter1_assign_proc : process(MULQ_out_full_n)
    begin
                ap_block_state16_pp0_stage7_iter1 <= (ap_const_logic_0 = MULQ_out_full_n);
    end process;


    ap_block_state17_pp0_stage0_iter2_assign_proc : process(MULQ_out_full_n)
    begin
                ap_block_state17_pp0_stage0_iter2 <= (ap_const_logic_0 = MULQ_out_full_n);
    end process;


    ap_block_state18_pp0_stage1_iter2_assign_proc : process(MULQ_out_full_n)
    begin
                ap_block_state18_pp0_stage1_iter2 <= (ap_const_logic_0 = MULQ_out_full_n);
    end process;


    ap_block_state19_pp0_stage2_iter2_assign_proc : process(MULQ_out_full_n)
    begin
                ap_block_state19_pp0_stage2_iter2 <= (ap_const_logic_0 = MULQ_out_full_n);
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state20_pp0_stage3_iter2_assign_proc : process(MULQ_out_full_n)
    begin
                ap_block_state20_pp0_stage3_iter2 <= (ap_const_logic_0 = MULQ_out_full_n);
    end process;


    ap_block_state21_pp0_stage4_iter2_assign_proc : process(MULQ_out_full_n)
    begin
                ap_block_state21_pp0_stage4_iter2 <= (ap_const_logic_0 = MULQ_out_full_n);
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(noise_out_empty_n, icmp_ln91_reg_2754)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(noise_out_empty_n, icmp_ln91_reg_2754)
    begin
                ap_block_state3_pp0_stage2_iter0 <= ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(noise_out_empty_n, icmp_ln91_reg_2754)
    begin
                ap_block_state4_pp0_stage3_iter0 <= ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0));
    end process;


    ap_block_state5_pp0_stage4_iter0_assign_proc : process(noise_out_empty_n, icmp_ln91_reg_2754)
    begin
                ap_block_state5_pp0_stage4_iter0 <= ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0));
    end process;


    ap_block_state6_pp0_stage5_iter0_assign_proc : process(noise_out_empty_n, icmp_ln91_reg_2754)
    begin
                ap_block_state6_pp0_stage5_iter0 <= ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0));
    end process;


    ap_block_state7_pp0_stage6_iter0_assign_proc : process(noise_out_empty_n, icmp_ln91_reg_2754)
    begin
                ap_block_state7_pp0_stage6_iter0 <= ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0));
    end process;


    ap_block_state8_pp0_stage7_iter0_assign_proc : process(noise_out_empty_n, icmp_ln91_reg_2754)
    begin
                ap_block_state8_pp0_stage7_iter0 <= ((icmp_ln91_reg_2754 = ap_const_lv1_0) and (noise_out_empty_n = ap_const_logic_0));
    end process;


    ap_block_state9_pp0_stage0_iter1_assign_proc : process(noise_out_empty_n)
    begin
                ap_block_state9_pp0_stage0_iter1 <= (noise_out_empty_n = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, icmp_ln91_reg_2754, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (icmp_ln91_reg_2754 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, icmp_ln91_reg_2754_pp0_iter1_reg, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (icmp_ln91_reg_2754_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_condition_exit_pp0_iter1_stage4 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage7;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_data_idx_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, data_idx_fu_176, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_data_idx_1 <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_data_idx_1 <= data_idx_fu_176;
        end if; 
    end process;

    data_idx_2_fu_879_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_data_idx_1) + unsigned(ap_const_lv5_1));

    grp_fu_2188_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2188_ce <= ap_const_logic_1;
        else 
            grp_fu_2188_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2188_p0 <= sext_ln1171_fu_890_p1(16 - 1 downto 0);

    grp_fu_2195_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2195_ce <= ap_const_logic_1;
        else 
            grp_fu_2195_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2195_p0 <= sext_ln1171_fu_890_p1(16 - 1 downto 0);

    grp_fu_2202_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2202_ce <= ap_const_logic_1;
        else 
            grp_fu_2202_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2202_p0 <= sext_ln1171_fu_890_p1(16 - 1 downto 0);

    grp_fu_2209_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2209_ce <= ap_const_logic_1;
        else 
            grp_fu_2209_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2209_p0 <= sext_ln1171_2_fu_906_p1(16 - 1 downto 0);
    grp_fu_2209_p2 <= (tmp_s_fu_958_p4 & ap_const_lv8_0);

    grp_fu_2218_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2218_ce <= ap_const_logic_1;
        else 
            grp_fu_2218_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2218_p0 <= sext_ln1171_2_fu_906_p1(16 - 1 downto 0);
    grp_fu_2218_p2 <= (tmp_7_fu_983_p4 & ap_const_lv8_0);

    grp_fu_2227_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2227_ce <= ap_const_logic_1;
        else 
            grp_fu_2227_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2227_p0 <= sext_ln1171_2_fu_906_p1(16 - 1 downto 0);
    grp_fu_2227_p2 <= (tmp_14_fu_1004_p4 & ap_const_lv8_0);

    grp_fu_2236_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2236_ce <= ap_const_logic_1;
        else 
            grp_fu_2236_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2236_p0 <= sext_ln1171_reg_2798(16 - 1 downto 0);

    grp_fu_2242_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2242_ce <= ap_const_logic_1;
        else 
            grp_fu_2242_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2242_p0 <= sext_ln1171_reg_2798(16 - 1 downto 0);

    grp_fu_2248_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2248_ce <= ap_const_logic_1;
        else 
            grp_fu_2248_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2248_p0 <= sext_ln1171_4_fu_930_p1(16 - 1 downto 0);
    grp_fu_2248_p2 <= (tmp_1_fu_1041_p4 & ap_const_lv8_0);

    grp_fu_2257_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2257_ce <= ap_const_logic_1;
        else 
            grp_fu_2257_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2257_p0 <= sext_ln1171_4_fu_930_p1(16 - 1 downto 0);
    grp_fu_2257_p2 <= (tmp_8_fu_1066_p4 & ap_const_lv8_0);

    grp_fu_2266_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2266_ce <= ap_const_logic_1;
        else 
            grp_fu_2266_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2266_p0 <= sext_ln1171_4_fu_930_p1(16 - 1 downto 0);
    grp_fu_2266_p2 <= (tmp_15_fu_1087_p4 & ap_const_lv8_0);

    grp_fu_2275_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2275_ce <= ap_const_logic_1;
        else 
            grp_fu_2275_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2275_p0 <= sext_ln1171_2_reg_2865(16 - 1 downto 0);
    grp_fu_2275_p2 <= (tmp_21_fu_1108_p4 & ap_const_lv8_0);

    grp_fu_2283_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2283_ce <= ap_const_logic_1;
        else 
            grp_fu_2283_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2283_p0 <= sext_ln1171_2_reg_2865(16 - 1 downto 0);
    grp_fu_2283_p2 <= (tmp_28_fu_1129_p4 & ap_const_lv8_0);

    grp_fu_2291_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2291_ce <= ap_const_logic_1;
        else 
            grp_fu_2291_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2291_p0 <= sext_ln1171_reg_2798(16 - 1 downto 0);

    grp_fu_2297_ce_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2297_ce <= ap_const_logic_1;
        else 
            grp_fu_2297_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2297_p0 <= sext_ln1171_6_fu_975_p1(16 - 1 downto 0);
    grp_fu_2297_p2 <= (tmp_2_fu_1162_p4 & ap_const_lv8_0);

    grp_fu_2306_ce_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2306_ce <= ap_const_logic_1;
        else 
            grp_fu_2306_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2306_p0 <= sext_ln1171_6_fu_975_p1(16 - 1 downto 0);
    grp_fu_2306_p2 <= (tmp_9_fu_1187_p4 & ap_const_lv8_0);

    grp_fu_2315_ce_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2315_ce <= ap_const_logic_1;
        else 
            grp_fu_2315_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2315_p0 <= sext_ln1171_6_fu_975_p1(16 - 1 downto 0);
    grp_fu_2315_p2 <= (tmp_16_fu_1208_p4 & ap_const_lv8_0);

    grp_fu_2324_ce_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2324_ce <= ap_const_logic_1;
        else 
            grp_fu_2324_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2324_p0 <= sext_ln1171_4_reg_2942(16 - 1 downto 0);
    grp_fu_2324_p2 <= (tmp_22_fu_1229_p4 & ap_const_lv8_0);

    grp_fu_2332_ce_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2332_ce <= ap_const_logic_1;
        else 
            grp_fu_2332_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2332_p0 <= sext_ln1171_4_reg_2942(16 - 1 downto 0);
    grp_fu_2332_p2 <= (tmp_29_fu_1250_p4 & ap_const_lv8_0);

    grp_fu_2340_ce_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2340_ce <= ap_const_logic_1;
        else 
            grp_fu_2340_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2340_p0 <= sext_ln1171_2_reg_2865(16 - 1 downto 0);
    grp_fu_2340_p2 <= (tmp_35_fu_1271_p4 & ap_const_lv8_0);

    grp_fu_2348_ce_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2348_ce <= ap_const_logic_1;
        else 
            grp_fu_2348_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2348_p0 <= sext_ln1171_reg_2798(16 - 1 downto 0);

    grp_fu_2354_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2354_ce <= ap_const_logic_1;
        else 
            grp_fu_2354_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2354_p0 <= sext_ln1171_8_fu_1058_p1(16 - 1 downto 0);
    grp_fu_2354_p2 <= (tmp_3_fu_1300_p4 & ap_const_lv8_0);

    grp_fu_2363_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2363_ce <= ap_const_logic_1;
        else 
            grp_fu_2363_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2363_p0 <= sext_ln1171_8_fu_1058_p1(16 - 1 downto 0);
    grp_fu_2363_p2 <= (tmp_10_fu_1325_p4 & ap_const_lv8_0);

    grp_fu_2372_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2372_ce <= ap_const_logic_1;
        else 
            grp_fu_2372_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2372_p0 <= sext_ln1171_8_fu_1058_p1(16 - 1 downto 0);
    grp_fu_2372_p2 <= (tmp_17_fu_1346_p4 & ap_const_lv8_0);

    grp_fu_2381_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2381_ce <= ap_const_logic_1;
        else 
            grp_fu_2381_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2381_p0 <= sext_ln1171_6_reg_3029(16 - 1 downto 0);
    grp_fu_2381_p2 <= (tmp_23_fu_1367_p4 & ap_const_lv8_0);

    grp_fu_2389_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2389_ce <= ap_const_logic_1;
        else 
            grp_fu_2389_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2389_p0 <= sext_ln1171_6_reg_3029(16 - 1 downto 0);
    grp_fu_2389_p2 <= (tmp_30_fu_1388_p4 & ap_const_lv8_0);

    grp_fu_2397_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2397_ce <= ap_const_logic_1;
        else 
            grp_fu_2397_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2397_p0 <= sext_ln1171_4_reg_2942(16 - 1 downto 0);
    grp_fu_2397_p2 <= (tmp_36_fu_1405_p4 & ap_const_lv8_0);

    grp_fu_2405_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2405_ce <= ap_const_logic_1;
        else 
            grp_fu_2405_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2405_p0 <= sext_ln1171_2_reg_2865(16 - 1 downto 0);
    grp_fu_2405_p2 <= (tmp_42_fu_1422_p4 & ap_const_lv8_0);

    grp_fu_2413_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2413_ce <= ap_const_logic_1;
        else 
            grp_fu_2413_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2413_p0 <= sext_ln1171_reg_2798(16 - 1 downto 0);

    grp_fu_2419_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2419_ce <= ap_const_logic_1;
        else 
            grp_fu_2419_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2419_p0 <= sext_ln1171_10_fu_1179_p1(16 - 1 downto 0);
    grp_fu_2419_p2 <= (tmp_4_fu_1443_p4 & ap_const_lv8_0);

    grp_fu_2428_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2428_ce <= ap_const_logic_1;
        else 
            grp_fu_2428_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2428_p0 <= sext_ln1171_10_fu_1179_p1(16 - 1 downto 0);
    grp_fu_2428_p2 <= (tmp_11_fu_1468_p4 & ap_const_lv8_0);

    grp_fu_2437_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2437_ce <= ap_const_logic_1;
        else 
            grp_fu_2437_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2437_p0 <= sext_ln1171_10_fu_1179_p1(16 - 1 downto 0);
    grp_fu_2437_p2 <= (tmp_18_fu_1489_p4 & ap_const_lv8_0);

    grp_fu_2446_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2446_ce <= ap_const_logic_1;
        else 
            grp_fu_2446_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2446_p0 <= sext_ln1171_8_reg_3131(16 - 1 downto 0);
    grp_fu_2446_p2 <= (tmp_24_fu_1506_p4 & ap_const_lv8_0);

    grp_fu_2454_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2454_ce <= ap_const_logic_1;
        else 
            grp_fu_2454_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2454_p0 <= sext_ln1171_8_reg_3131(16 - 1 downto 0);
    grp_fu_2454_p2 <= (tmp_31_fu_1527_p4 & ap_const_lv8_0);

    grp_fu_2462_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2462_ce <= ap_const_logic_1;
        else 
            grp_fu_2462_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2462_p0 <= sext_ln1171_6_reg_3029(16 - 1 downto 0);
    grp_fu_2462_p2 <= (tmp_37_fu_1548_p4 & ap_const_lv8_0);

    grp_fu_2470_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2470_ce <= ap_const_logic_1;
        else 
            grp_fu_2470_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2470_p0 <= sext_ln1171_4_reg_2942(16 - 1 downto 0);
    grp_fu_2470_p2 <= (tmp_43_fu_1569_p4 & ap_const_lv8_0);

    grp_fu_2478_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2478_ce <= ap_const_logic_1;
        else 
            grp_fu_2478_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2478_p0 <= sext_ln1171_2_reg_2865(16 - 1 downto 0);
    grp_fu_2478_p2 <= (tmp_49_fu_1590_p4 & ap_const_lv8_0);

    grp_fu_2486_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2486_ce <= ap_const_logic_1;
        else 
            grp_fu_2486_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2486_p0 <= sext_ln1171_12_fu_1317_p1(16 - 1 downto 0);
    grp_fu_2486_p2 <= (tmp_5_fu_1607_p4 & ap_const_lv8_0);

    grp_fu_2495_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2495_ce <= ap_const_logic_1;
        else 
            grp_fu_2495_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2495_p0 <= sext_ln1171_12_fu_1317_p1(16 - 1 downto 0);
    grp_fu_2495_p2 <= (tmp_12_fu_1624_p4 & ap_const_lv8_0);

    grp_fu_2504_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2504_ce <= ap_const_logic_1;
        else 
            grp_fu_2504_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2504_p0 <= sext_ln1171_12_fu_1317_p1(16 - 1 downto 0);
    grp_fu_2504_p2 <= (tmp_19_fu_1641_p4 & ap_const_lv8_0);

    grp_fu_2513_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2513_ce <= ap_const_logic_1;
        else 
            grp_fu_2513_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2513_p0 <= sext_ln1171_10_reg_3248(16 - 1 downto 0);
    grp_fu_2513_p2 <= (tmp_25_fu_1662_p4 & ap_const_lv8_0);

    grp_fu_2521_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2521_ce <= ap_const_logic_1;
        else 
            grp_fu_2521_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2521_p0 <= sext_ln1171_4_reg_2942(16 - 1 downto 0);
    grp_fu_2521_p2 <= (tmp_50_fu_1721_p4 & ap_const_lv8_0);

    grp_fu_2529_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2529_ce <= ap_const_logic_1;
        else 
            grp_fu_2529_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2529_p0 <= sext_ln1171_14_fu_1460_p1(16 - 1 downto 0);
    grp_fu_2529_p2 <= (tmp_6_fu_1741_p4 & ap_const_lv8_0);

    grp_fu_2538_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2538_ce <= ap_const_logic_1;
        else 
            grp_fu_2538_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2538_p0 <= sext_ln1171_14_fu_1460_p1(16 - 1 downto 0);
    grp_fu_2538_p2 <= (tmp_13_fu_1758_p4 & ap_const_lv8_0);

    grp_fu_2547_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2547_ce <= ap_const_logic_1;
        else 
            grp_fu_2547_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2547_p0 <= sext_ln1171_12_reg_3370(16 - 1 downto 0);
    grp_fu_2547_p2 <= (tmp_26_fu_1784_p4 & ap_const_lv8_0);

    grp_fu_2555_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2555_ce <= ap_const_logic_1;
        else 
            grp_fu_2555_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2555_p0 <= sext_ln1171_10_reg_3248(16 - 1 downto 0);
    grp_fu_2555_p2 <= (tmp_32_reg_3584 & ap_const_lv8_0);

    grp_fu_2563_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2563_ce <= ap_const_logic_1;
        else 
            grp_fu_2563_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2563_p0 <= sext_ln1171_8_reg_3131(16 - 1 downto 0);
    grp_fu_2563_p2 <= (tmp_38_reg_3594 & ap_const_lv8_0);

    grp_fu_2571_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2571_ce <= ap_const_logic_1;
        else 
            grp_fu_2571_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2571_p0 <= sext_ln1171_6_reg_3029(16 - 1 downto 0);
    grp_fu_2571_p2 <= (tmp_44_reg_3604 & ap_const_lv8_0);

    grp_fu_2579_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2579_ce <= ap_const_logic_1;
        else 
            grp_fu_2579_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2579_p0 <= sext_ln1171_14_reg_3457(16 - 1 downto 0);
    grp_fu_2579_p2 <= (tmp_20_reg_3634 & ap_const_lv8_0);

    grp_fu_2587_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2587_ce <= ap_const_logic_1;
        else 
            grp_fu_2587_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2587_p0 <= sext_ln1171_14_reg_3457(16 - 1 downto 0);
    grp_fu_2587_p2 <= (tmp_27_fu_1871_p4 & ap_const_lv8_0);

    grp_fu_2595_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2595_ce <= ap_const_logic_1;
        else 
            grp_fu_2595_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2595_p0 <= sext_ln1171_12_reg_3370(16 - 1 downto 0);
    grp_fu_2595_p2 <= (tmp_33_fu_1888_p4 & ap_const_lv8_0);

    grp_fu_2603_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2603_ce <= ap_const_logic_1;
        else 
            grp_fu_2603_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2603_p0 <= sext_ln1171_10_reg_3248(16 - 1 downto 0);
    grp_fu_2603_p2 <= (tmp_39_fu_1905_p4 & ap_const_lv8_0);

    grp_fu_2611_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2611_ce <= ap_const_logic_1;
        else 
            grp_fu_2611_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2611_p0 <= sext_ln1171_8_reg_3131(16 - 1 downto 0);
    grp_fu_2611_p2 <= (tmp_45_fu_1922_p4 & ap_const_lv8_0);

    grp_fu_2619_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2619_ce <= ap_const_logic_1;
        else 
            grp_fu_2619_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2619_p0 <= sext_ln1171_6_reg_3029(16 - 1 downto 0);
    grp_fu_2619_p2 <= (tmp_51_reg_3674 & ap_const_lv8_0);

    grp_fu_2627_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2627_ce <= ap_const_logic_1;
        else 
            grp_fu_2627_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2627_p0 <= sext_ln1171_14_reg_3457(16 - 1 downto 0);
    grp_fu_2627_p2 <= (tmp_34_fu_1971_p4 & ap_const_lv8_0);

    grp_fu_2635_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2635_ce <= ap_const_logic_1;
        else 
            grp_fu_2635_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2635_p0 <= sext_ln1171_12_reg_3370(16 - 1 downto 0);
    grp_fu_2635_p2 <= (tmp_40_fu_1988_p4 & ap_const_lv8_0);

    grp_fu_2643_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2643_ce <= ap_const_logic_1;
        else 
            grp_fu_2643_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2643_p0 <= sext_ln1171_10_reg_3248(16 - 1 downto 0);
    grp_fu_2643_p2 <= (tmp_46_fu_2009_p4 & ap_const_lv8_0);

    grp_fu_2651_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2651_ce <= ap_const_logic_1;
        else 
            grp_fu_2651_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2651_p0 <= sext_ln1171_8_reg_3131(16 - 1 downto 0);
    grp_fu_2651_p2 <= (tmp_52_fu_2026_p4 & ap_const_lv8_0);

    grp_fu_2659_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2659_ce <= ap_const_logic_1;
        else 
            grp_fu_2659_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2659_p0 <= sext_ln1171_12_reg_3370(16 - 1 downto 0);
    grp_fu_2659_p2 <= (tmp_47_fu_2064_p4 & ap_const_lv8_0);

    grp_fu_2667_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2667_ce <= ap_const_logic_1;
        else 
            grp_fu_2667_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2667_p0 <= sext_ln1171_10_reg_3248(16 - 1 downto 0);
    grp_fu_2667_p2 <= (tmp_53_fu_2084_p4 & ap_const_lv8_0);

    grp_fu_2675_ce_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2675_ce <= ap_const_logic_1;
        else 
            grp_fu_2675_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2675_p0 <= sext_ln1171_14_reg_3457(16 - 1 downto 0);
    grp_fu_2675_p2 <= (tmp_41_reg_3779 & ap_const_lv8_0);

    grp_fu_2683_ce_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2683_ce <= ap_const_logic_1;
        else 
            grp_fu_2683_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2683_p0 <= sext_ln1171_12_reg_3370(16 - 1 downto 0);
    grp_fu_2683_p2 <= (tmp_54_fu_2117_p4 & ap_const_lv8_0);

    grp_fu_2691_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2691_ce <= ap_const_logic_1;
        else 
            grp_fu_2691_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2691_p0 <= sext_ln1171_14_reg_3457(16 - 1 downto 0);
    grp_fu_2691_p2 <= (tmp_48_reg_3804 & ap_const_lv8_0);

    grp_fu_2699_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2699_ce <= ap_const_logic_1;
        else 
            grp_fu_2699_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2699_p0 <= sext_ln1171_14_reg_3457_pp0_iter2_reg(16 - 1 downto 0);
    grp_fu_2699_p2 <= (tmp_55_reg_3824 & ap_const_lv8_0);
    icmp_ln91_fu_873_p2 <= "1" when (ap_sig_allocacmp_data_idx_1 = ap_const_lv5_10) else "0";

    noise_out_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, noise_out_empty_n, icmp_ln91_reg_2754, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            noise_out_blk_n <= noise_out_empty_n;
        else 
            noise_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    noise_out_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, icmp_ln91_reg_2754, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln91_reg_2754 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            noise_out_read <= ap_const_logic_1;
        else 
            noise_out_read <= ap_const_logic_0;
        end if; 
    end process;

    sext_ln1171_10_fu_1179_p0 <= noise_out_dout;
        sext_ln1171_10_fu_1179_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1171_10_fu_1179_p0),24));

    sext_ln1171_12_fu_1317_p0 <= noise_out_dout;
        sext_ln1171_12_fu_1317_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1171_12_fu_1317_p0),24));

        sext_ln1171_14_fu_1460_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(noise_out_dout),24));

    sext_ln1171_2_fu_906_p0 <= noise_out_dout;
        sext_ln1171_2_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1171_2_fu_906_p0),24));

    sext_ln1171_4_fu_930_p0 <= noise_out_dout;
        sext_ln1171_4_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1171_4_fu_930_p0),24));

    sext_ln1171_6_fu_975_p0 <= noise_out_dout;
        sext_ln1171_6_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1171_6_fu_975_p0),24));

    sext_ln1171_8_fu_1058_p0 <= noise_out_dout;
        sext_ln1171_8_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1171_8_fu_1058_p0),24));

    sext_ln1171_fu_890_p0 <= noise_out_dout;
        sext_ln1171_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1171_fu_890_p0),24));

    tmp_10_fu_1325_p1 <= grp_fu_2306_p3;
    tmp_10_fu_1325_p4 <= tmp_10_fu_1325_p1(23 downto 8);
    tmp_11_fu_1468_p1 <= grp_fu_2363_p3;
    tmp_11_fu_1468_p4 <= tmp_11_fu_1468_p1(23 downto 8);
    tmp_12_fu_1624_p1 <= grp_fu_2428_p3;
    tmp_12_fu_1624_p4 <= tmp_12_fu_1624_p1(23 downto 8);
    tmp_13_fu_1758_p1 <= grp_fu_2495_p3;
    tmp_13_fu_1758_p4 <= tmp_13_fu_1758_p1(23 downto 8);
    tmp_14_fu_1004_p4 <= grp_fu_2202_p2(23 downto 8);
    tmp_15_fu_1087_p1 <= grp_fu_2227_p3;
    tmp_15_fu_1087_p4 <= tmp_15_fu_1087_p1(23 downto 8);
    tmp_16_fu_1208_p1 <= grp_fu_2266_p3;
    tmp_16_fu_1208_p4 <= tmp_16_fu_1208_p1(23 downto 8);
    tmp_17_fu_1346_p1 <= grp_fu_2315_p3;
    tmp_17_fu_1346_p4 <= tmp_17_fu_1346_p1(23 downto 8);
    tmp_18_fu_1489_p1 <= grp_fu_2372_p3;
    tmp_18_fu_1489_p4 <= tmp_18_fu_1489_p1(23 downto 8);
    tmp_19_fu_1641_p1 <= grp_fu_2437_p3;
    tmp_19_fu_1641_p4 <= tmp_19_fu_1641_p1(23 downto 8);
    tmp_1_fu_1041_p1 <= grp_fu_2209_p3;
    tmp_1_fu_1041_p4 <= tmp_1_fu_1041_p1(23 downto 8);
    tmp_20_fu_1775_p1 <= grp_fu_2504_p3;
    tmp_21_fu_1108_p4 <= grp_fu_2236_p2(23 downto 8);
    tmp_22_fu_1229_p1 <= grp_fu_2275_p3;
    tmp_22_fu_1229_p4 <= tmp_22_fu_1229_p1(23 downto 8);
    tmp_23_fu_1367_p1 <= grp_fu_2324_p3;
    tmp_23_fu_1367_p4 <= tmp_23_fu_1367_p1(23 downto 8);
    tmp_24_fu_1506_p1 <= grp_fu_2381_p3;
    tmp_24_fu_1506_p4 <= tmp_24_fu_1506_p1(23 downto 8);
    tmp_25_fu_1662_p1 <= grp_fu_2446_p3;
    tmp_25_fu_1662_p4 <= tmp_25_fu_1662_p1(23 downto 8);
    tmp_26_fu_1784_p1 <= grp_fu_2513_p3;
    tmp_26_fu_1784_p4 <= tmp_26_fu_1784_p1(23 downto 8);
    tmp_27_fu_1871_p1 <= grp_fu_2547_p3;
    tmp_27_fu_1871_p4 <= tmp_27_fu_1871_p1(23 downto 8);
    tmp_28_fu_1129_p4 <= grp_fu_2242_p2(23 downto 8);
    tmp_29_fu_1250_p1 <= grp_fu_2283_p3;
    tmp_29_fu_1250_p4 <= tmp_29_fu_1250_p1(23 downto 8);
    tmp_2_fu_1162_p1 <= grp_fu_2248_p3;
    tmp_2_fu_1162_p4 <= tmp_2_fu_1162_p1(23 downto 8);
    tmp_30_fu_1388_p1 <= grp_fu_2332_p3;
    tmp_30_fu_1388_p4 <= tmp_30_fu_1388_p1(23 downto 8);
    tmp_31_fu_1527_p1 <= grp_fu_2389_p3;
    tmp_31_fu_1527_p4 <= tmp_31_fu_1527_p1(23 downto 8);
    tmp_32_fu_1683_p1 <= grp_fu_2454_p3;
    tmp_33_fu_1888_p1 <= grp_fu_2555_p3;
    tmp_33_fu_1888_p4 <= tmp_33_fu_1888_p1(23 downto 8);
    tmp_34_fu_1971_p1 <= grp_fu_2595_p3;
    tmp_34_fu_1971_p4 <= tmp_34_fu_1971_p1(23 downto 8);
    tmp_35_fu_1271_p4 <= grp_fu_2291_p2(23 downto 8);
    tmp_36_fu_1405_p1 <= grp_fu_2340_p3;
    tmp_36_fu_1405_p4 <= tmp_36_fu_1405_p1(23 downto 8);
    tmp_37_fu_1548_p1 <= grp_fu_2397_p3;
    tmp_37_fu_1548_p4 <= tmp_37_fu_1548_p1(23 downto 8);
    tmp_38_fu_1696_p1 <= grp_fu_2462_p3;
    tmp_39_fu_1905_p1 <= grp_fu_2563_p3;
    tmp_39_fu_1905_p4 <= tmp_39_fu_1905_p1(23 downto 8);
    tmp_3_fu_1300_p1 <= grp_fu_2297_p3;
    tmp_3_fu_1300_p4 <= tmp_3_fu_1300_p1(23 downto 8);
    tmp_40_fu_1988_p1 <= grp_fu_2603_p3;
    tmp_40_fu_1988_p4 <= tmp_40_fu_1988_p1(23 downto 8);
    tmp_41_fu_2055_p1 <= grp_fu_2635_p3;
    tmp_42_fu_1422_p4 <= grp_fu_2348_p2(23 downto 8);
    tmp_43_fu_1569_p1 <= grp_fu_2405_p3;
    tmp_43_fu_1569_p4 <= tmp_43_fu_1569_p1(23 downto 8);
    tmp_44_fu_1709_p1 <= grp_fu_2470_p3;
    tmp_45_fu_1922_p1 <= grp_fu_2571_p3;
    tmp_45_fu_1922_p4 <= tmp_45_fu_1922_p1(23 downto 8);
    tmp_46_fu_2009_p1 <= grp_fu_2611_p3;
    tmp_46_fu_2009_p4 <= tmp_46_fu_2009_p1(23 downto 8);
    tmp_47_fu_2064_p1 <= grp_fu_2643_p3;
    tmp_47_fu_2064_p4 <= tmp_47_fu_2064_p1(23 downto 8);
    tmp_48_fu_2108_p1 <= grp_fu_2659_p3;
    tmp_49_fu_1590_p4 <= grp_fu_2413_p2(23 downto 8);
    tmp_4_fu_1443_p1 <= grp_fu_2354_p3;
    tmp_4_fu_1443_p4 <= tmp_4_fu_1443_p1(23 downto 8);
    tmp_50_fu_1721_p1 <= grp_fu_2478_p3;
    tmp_50_fu_1721_p4 <= tmp_50_fu_1721_p1(23 downto 8);
    tmp_51_fu_1833_p1 <= grp_fu_2521_p3;
    tmp_52_fu_2026_p1 <= grp_fu_2619_p3;
    tmp_52_fu_2026_p4 <= tmp_52_fu_2026_p1(23 downto 8);
    tmp_53_fu_2084_p1 <= grp_fu_2651_p3;
    tmp_53_fu_2084_p4 <= tmp_53_fu_2084_p1(23 downto 8);
    tmp_54_fu_2117_p1 <= grp_fu_2667_p3;
    tmp_54_fu_2117_p4 <= tmp_54_fu_2117_p1(23 downto 8);
    tmp_55_fu_2150_p1 <= grp_fu_2683_p3;
    tmp_5_fu_1607_p1 <= grp_fu_2419_p3;
    tmp_5_fu_1607_p4 <= tmp_5_fu_1607_p1(23 downto 8);
    tmp_6_fu_1741_p1 <= grp_fu_2486_p3;
    tmp_6_fu_1741_p4 <= tmp_6_fu_1741_p1(23 downto 8);
    tmp_7_fu_983_p4 <= grp_fu_2195_p2(23 downto 8);
    tmp_8_fu_1066_p1 <= grp_fu_2218_p3;
    tmp_8_fu_1066_p4 <= tmp_8_fu_1066_p1(23 downto 8);
    tmp_9_fu_1187_p1 <= grp_fu_2257_p3;
    tmp_9_fu_1187_p4 <= tmp_9_fu_1187_p1(23 downto 8);
    tmp_s_fu_958_p4 <= grp_fu_2188_p2(23 downto 8);
    trunc_ln717_1_fu_1962_p1 <= grp_fu_2587_p3;
    trunc_ln717_2_fu_2046_p1 <= grp_fu_2627_p3;
    trunc_ln717_3_fu_2134_p1 <= grp_fu_2675_p3;
    trunc_ln717_4_fu_2159_p1 <= grp_fu_2691_p3;
    trunc_ln717_5_fu_2178_p1 <= grp_fu_2699_p3;
    trunc_ln717_8_fu_1846_p1 <= grp_fu_2529_p3;
    trunc_ln717_9_fu_1855_p1 <= grp_fu_2538_p3;
    trunc_ln717_s_fu_1953_p1 <= grp_fu_2579_p3;
end behav;
