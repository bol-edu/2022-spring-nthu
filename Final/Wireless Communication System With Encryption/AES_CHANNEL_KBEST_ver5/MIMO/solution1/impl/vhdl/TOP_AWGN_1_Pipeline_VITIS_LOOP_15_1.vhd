-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity TOP_AWGN_1_Pipeline_VITIS_LOOP_15_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    channel_out_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    channel_out_empty_n : IN STD_LOGIC;
    channel_out_read : OUT STD_LOGIC;
    noise_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    noise_out_full_n : IN STD_LOGIC;
    noise_out_write : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_x_k_p_0_V : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_1_V : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_m_V : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_2_V : IN STD_LOGIC_VECTOR (31 downto 0);
    sext_ln1245 : IN STD_LOGIC_VECTOR (15 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_even_0_V_we0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_even_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_even_0_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_odd_0_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of TOP_AWGN_1_Pipeline_VITIS_LOOP_15_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_BFE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_C02A8FB57E147826 : STD_LOGIC_VECTOR (63 downto 0) := "1100000000101010100011111011010101111110000101000111100000100110";
    constant ap_const_lv64_4000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3F98D4FDF3B645A2 : STD_LOGIC_VECTOR (63 downto 0) := "0011111110011000110101001111110111110011101101100100010110100010";
    constant ap_const_lv64_3FEF395810624DD3 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111101111001110010101100000010000011000100100110111010011";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv10_18E : STD_LOGIC_VECTOR (9 downto 0) := "0110001110";
    constant ap_const_lv10_270 : STD_LOGIC_VECTOR (9 downto 0) := "1001110000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_9908B0DF : STD_LOGIC_VECTOR (31 downto 0) := "10011001000010001011000011011111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FFFFFFCB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_FFFFFFCA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_BF7FE30D924ACFE0 : STD_LOGIC_VECTOR (63 downto 0) := "1011111101111111111000110000110110010010010010101100111111100000";
    constant ap_const_lv64_C043D931BC1E0525 : STD_LOGIC_VECTOR (63 downto 0) := "1100000001000011110110010011000110111100000111100000010100100101";
    constant ap_const_lv64_BFD4A224C0E881B8 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111010100101000100010010011000000111010001000000110111000";
    constant ap_const_lv64_406B9E467034039B : STD_LOGIC_VECTOR (63 downto 0) := "0100000001101011100111100100011001110000001101000000001110011011";
    constant ap_const_lv64_3F7FE2D857AC9FD4 : STD_LOGIC_VECTOR (63 downto 0) := "0011111101111111111000101101100001010111101011001001111111010100";
    constant ap_const_lv64_C04B3CF0CE3004C4 : STD_LOGIC_VECTOR (63 downto 0) := "1100000001001011001111001111000011001110001100000000010011000100";
    constant ap_const_lv64_3FD4A34D2B590364 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111010100101000110100110100101011010110010000001101100100";
    constant ap_const_lv64_406432BF2CF04277 : STD_LOGIC_VECTOR (63 downto 0) := "0100000001100100001100101011111100101100111100000100001001110111";
    constant ap_const_lv64_C00334C0C1701758 : STD_LOGIC_VECTOR (63 downto 0) := "1100000000000011001101001100000011000001011100000001011101011000";
    constant ap_const_lv64_C0713EDB2DC53B99 : STD_LOGIC_VECTOR (63 downto 0) := "1100000001110001001111101101101100101101110001010011101110011001";
    constant ap_const_lv64_40038FA27C8AE616 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000011100011111010001001111100100010101110011000010110";
    constant ap_const_lv64_C063765E0B02D8D2 : STD_LOGIC_VECTOR (63 downto 0) := "1100000001100011011101100101111000001011000000101101100011010010";
    constant ap_const_lv64_C00465DA2C703A1A : STD_LOGIC_VECTOR (63 downto 0) := "1100000000000100011001011101101000101100011100000011101000011010";
    constant ap_const_lv64_40614B72B40B401B : STD_LOGIC_VECTOR (63 downto 0) := "0100000001100001010010110111001010110100000010110100000000011011";
    constant ap_const_lv64_400E09076895B119 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000001110000010010000011101101000100101011011000100011001";
    constant ap_const_lv64_4050B348B1A7E9BE : STD_LOGIC_VECTOR (63 downto 0) := "0100000001010000101100110100100010110001101001111110100110111110";
    constant ap_const_lv64_40117FA7F4EA4DC7 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000010001011111111010011111110100111010100100110111000111";
    constant ap_const_lv64_C03EAA3034C08BCD : STD_LOGIC_VECTOR (63 downto 0) := "1100000000111110101010100011000000110100110000001000101111001101";
    constant ap_const_lv64_4007815C1E3FCFA2 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000111100000010101110000011110001111111100111110100010";
    constant ap_const_lv64_40040D9320575479 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000100000011011001001100100000010101110101010001111001";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_FF8 : STD_LOGIC_VECTOR (11 downto 0) := "111111111000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter36 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter37 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter38 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter39 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter40 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter41 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter42 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter43 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter44 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter45 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter46 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter47 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter48 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter49 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter35 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter36 : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter37 : BOOLEAN;
    signal ap_block_state39_pp0_stage0_iter38 : BOOLEAN;
    signal ap_block_state40_pp0_stage0_iter39 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter40 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter41 : BOOLEAN;
    signal ap_block_state43_pp0_stage0_iter42 : BOOLEAN;
    signal ap_block_state44_pp0_stage0_iter43 : BOOLEAN;
    signal ap_block_state45_pp0_stage0_iter44 : BOOLEAN;
    signal ap_block_state46_pp0_stage0_iter45 : BOOLEAN;
    signal ap_block_state47_pp0_stage0_iter46 : BOOLEAN;
    signal ap_block_state48_pp0_stage0_iter47 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter48 : BOOLEAN;
    signal ap_block_state50_pp0_stage0_iter49 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln15_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal channel_out_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal noise_out_blk_n : STD_LOGIC;
    signal sext_ln1245_cast_fu_618_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1245_cast_reg_1831 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln15_reg_1836 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln229_fu_666_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln229_reg_1840 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_12_reg_1844 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_uniform_fu_1290_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_uniform_reg_1869 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_uniform_reg_1869_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_uniform_reg_1869_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_uniform_reg_1869_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_uniform_reg_1869_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_uniform_reg_1869_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_uniform_reg_1869_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_uniform_reg_1869_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_uniform_reg_1869_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_uniform_reg_1869_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_uniform_reg_1869_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_uniform_reg_1869_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1879 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_489_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_reg_1884 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln443_fu_1348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_reg_1889 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_reg_1889_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_reg_1889_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_reg_1889_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_reg_1889_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_reg_1889_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_reg_1889_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_reg_1889_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_reg_1889_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_reg_1889_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_fu_1354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter40_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter41_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter42_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter43_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_reg_1894_pp0_iter44_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_613_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t1_reg_1905 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_541_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t2_reg_1910 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln443_4_fu_1385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter40_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter41_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter42_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter43_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln443_4_reg_1920_pp0_iter44_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_494_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal z_reg_1939 : STD_LOGIC_VECTOR (63 downto 0);
    signal z_reg_1939_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_fu_1390_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946 : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter20_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter21_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter22_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter23_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter24_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter25_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter26_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter27_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter28_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter29_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter30_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter31_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter32_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter33_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter34_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter35_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z_9_reg_1946_pp0_iter36_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_fu_1396_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter20_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter21_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter22_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter23_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter24_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter25_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter26_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter27_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter28_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter29_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter30_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter31_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter32_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter33_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_16_reg_1951_pp0_iter34_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_550_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t4_reg_1970 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_499_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t5_reg_1985 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_554_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t13_reg_1990 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_558_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t6_reg_2000 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_503_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t14_reg_2005 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_507_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t7_reg_2015 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_562_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t15_reg_2020 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_566_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t8_reg_2030 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_511_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t16_reg_2035 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_515_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t9_reg_2045 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_570_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t17_reg_2050 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_574_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t10_reg_2060 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_519_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal f2_reg_2065 : STD_LOGIC_VECTOR (63 downto 0);
    signal f2_reg_2065_pp0_iter31_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal f2_reg_2065_pp0_iter32_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal f2_reg_2065_pp0_iter33_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_523_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t11_reg_2076 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_578_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t18_reg_2081 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_582_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t12_reg_2086 : STD_LOGIC_VECTOR (63 downto 0);
    signal f2_9_fu_1475_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal f2_9_reg_2091 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_532_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal f1_1_reg_2101 : STD_LOGIC_VECTOR (63 downto 0);
    signal f1_1_reg_2101_pp0_iter37_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_586_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal t19_reg_2107 : STD_LOGIC_VECTOR (63 downto 0);
    signal f1_4_fu_1489_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal f1_4_reg_2112 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_536_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal f2_10_reg_2117 : STD_LOGIC_VECTOR (63 downto 0);
    signal result_fu_1516_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal result_reg_2122 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_phi_mux_p_0_0_0976_i_phi_fu_470_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0_0_0976_i_reg_467 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_0_0_0964_i_phi_fu_481_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0_0_0964_i_reg_478 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln587_fu_718_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_6_fu_724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_7_fu_800_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0_0_09758_i_fu_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal lhs_V_fu_342 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_346 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_fu_350 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_5_fu_656_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_j_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_150_fu_354 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal pre_result_V_10_fu_792_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_515_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_519_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_523_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_550_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_554_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_608_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_613_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_i_fu_662_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal addr_head_p_3_V_fu_670_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal addr_head_p_m_p_1_V_fu_676_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal addr_head_p_n_V_fu_682_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_s_fu_688_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_11_fu_698_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_439_fu_744_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_fu_756_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_fu_766_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_283_fu_752_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln724_fu_778_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln1544_fu_786_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1043_fu_774_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_fu_808_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1691_fu_818_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pre_result_V_11_fu_822_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_440_fu_828_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_fu_836_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_441_fu_846_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_442_fu_854_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_138_fu_862_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_443_fu_872_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_444_fu_880_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_139_fu_888_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln1542_fu_898_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_fu_902_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal pre_result_V_12_fu_942_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_140_fu_948_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_141_fu_958_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_142_fu_968_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ret_13_fu_978_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal pre_result_V_13_fu_994_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_13_fu_1000_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1691_4_fu_1010_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pre_result_V_fu_1014_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_278_fu_1026_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_1036_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln947_fu_1048_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_1054_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_445_fu_1060_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln950_fu_1080_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln950_fu_1084_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln950_fu_1090_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln950_fu_1094_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln952_fu_1100_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln952_5_fu_1106_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln952_fu_1112_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_446_fu_1124_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_279_fu_1138_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln952_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln962_fu_1158_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln960_fu_1076_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln962_fu_1164_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln949_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln952_fu_1118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln961_fu_1182_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln961_fu_1188_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln961_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln949_fu_1174_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln952_8_fu_1152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln961_fu_1192_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln962_fu_1168_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln961_fu_1198_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_34_fu_1206_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln964_fu_1214_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_35_fu_1218_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fu_1224_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln946_fu_1044_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln969_fu_1246_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_s_fu_1238_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln968_fu_1252_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln968_fu_1258_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln965_fu_1234_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_fu_1266_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_280_fu_1274_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln938_fu_1020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln746_fu_1286_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln443_fu_1319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_1322_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln443_fu_1332_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln443_4_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln443_fu_1336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln456_fu_1366_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln456_fu_1369_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln443_4_fu_1380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_608_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_546_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_527_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_590_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_594_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln541_fu_1495_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln541_fu_1499_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln541_4_fu_1505_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln540_fu_1509_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_fu_1523_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_fu_1538_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln574_fu_1552_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_282_fu_1556_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln578_fu_1564_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_281_fu_1530_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_496_fu_1568_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln564_fu_1526_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln501_fu_1548_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1588_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln590_fu_1594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln590_fu_1600_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln590_fu_1606_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_1612_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_497_fu_1574_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sext_ln590_fu_1620_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln595_fu_1640_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln595_fu_1644_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_450_fu_1654_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln594_fu_1634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln595_fu_1650_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln597_fu_1662_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_451_fu_1678_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln592_fu_1630_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln590cast_fu_1694_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln612_fu_1688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln613_fu_1698_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln580_fu_1582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln591_fu_1624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln580_fu_1712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln591_fu_1718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln612_fu_1704_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln591_fu_1732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln591_fu_1738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln590_fu_1744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln594_fu_1670_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln591_fu_1724_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln590_fu_1750_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal TEMP_V_fu_1758_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_fu_1778_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1788_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1788_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1788_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_489_ce : STD_LOGIC;
    signal grp_fu_494_ce : STD_LOGIC;
    signal grp_fu_499_ce : STD_LOGIC;
    signal grp_fu_503_ce : STD_LOGIC;
    signal grp_fu_507_ce : STD_LOGIC;
    signal grp_fu_511_ce : STD_LOGIC;
    signal grp_fu_515_ce : STD_LOGIC;
    signal grp_fu_519_ce : STD_LOGIC;
    signal grp_fu_523_ce : STD_LOGIC;
    signal grp_fu_527_ce : STD_LOGIC;
    signal grp_fu_532_ce : STD_LOGIC;
    signal grp_fu_536_ce : STD_LOGIC;
    signal grp_fu_541_ce : STD_LOGIC;
    signal grp_fu_546_ce : STD_LOGIC;
    signal grp_fu_550_ce : STD_LOGIC;
    signal grp_fu_554_ce : STD_LOGIC;
    signal grp_fu_558_ce : STD_LOGIC;
    signal grp_fu_562_ce : STD_LOGIC;
    signal grp_fu_566_ce : STD_LOGIC;
    signal grp_fu_570_ce : STD_LOGIC;
    signal grp_fu_574_ce : STD_LOGIC;
    signal grp_fu_578_ce : STD_LOGIC;
    signal grp_fu_582_ce : STD_LOGIC;
    signal grp_fu_586_ce : STD_LOGIC;
    signal grp_fu_590_ce : STD_LOGIC;
    signal grp_fu_594_ce : STD_LOGIC;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal grp_fu_608_ce : STD_LOGIC;
    signal grp_fu_613_ce : STD_LOGIC;
    signal grp_fu_1788_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter18_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter19_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter20_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter21_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter22_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter23_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter24_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter25_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter26_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter27_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter28_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter29_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter30_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter31_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter32_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter33_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter34_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter35_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter36_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter37_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter38_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter39_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter40_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter41_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter42_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter43_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter44_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter45_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter46_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter47_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter48_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op88_load_state1 : BOOLEAN;
    signal ap_enable_operation_88 : BOOLEAN;
    signal ap_enable_state1_pp0_iter0_stage0 : BOOLEAN;
    signal ap_predicate_op111_load_state2 : BOOLEAN;
    signal ap_enable_operation_111 : BOOLEAN;
    signal ap_enable_state2_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op119_store_state2 : BOOLEAN;
    signal ap_enable_operation_119 : BOOLEAN;
    signal ap_predicate_op90_load_state1 : BOOLEAN;
    signal ap_enable_operation_90 : BOOLEAN;
    signal ap_predicate_op112_load_state2 : BOOLEAN;
    signal ap_enable_operation_112 : BOOLEAN;
    signal ap_predicate_op114_store_state2 : BOOLEAN;
    signal ap_enable_operation_114 : BOOLEAN;
    signal ap_predicate_op92_load_state1 : BOOLEAN;
    signal ap_enable_operation_92 : BOOLEAN;
    signal ap_predicate_op116_load_state2 : BOOLEAN;
    signal ap_enable_operation_116 : BOOLEAN;
    signal ap_predicate_op94_load_state1 : BOOLEAN;
    signal ap_enable_operation_94 : BOOLEAN;
    signal ap_predicate_op117_load_state2 : BOOLEAN;
    signal ap_enable_operation_117 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_1960 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component TOP_dsub_64ns_64ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component TOP_dadd_64ns_64ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component TOP_dmul_64ns_64ns_64_2_med_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component TOP_ddiv_64ns_64ns_64_7_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component TOP_dcmp_64ns_64ns_1_1_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component TOP_dsqrt_64ns_64ns_64_7_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component TOP_dlog_64ns_64ns_64_5_med_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component TOP_mac_muladd_16s_16s_24ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component TOP_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    dsub_64ns_64ns_64_2_no_dsp_1_U951 : component TOP_dsub_64ns_64ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv64_3FF0000000000000,
        din1 => grp_fu_489_p1,
        ce => grp_fu_489_ce,
        dout => grp_fu_489_p2);

    dadd_64ns_64ns_64_2_no_dsp_1_U952 : component TOP_dadd_64ns_64ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_uniform_reg_1869_pp0_iter12_reg,
        din1 => ap_const_lv64_BFE0000000000000,
        ce => grp_fu_494_ce,
        dout => grp_fu_494_p2);

    dadd_64ns_64ns_64_2_no_dsp_1_U953 : component TOP_dadd_64ns_64ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t4_reg_1970,
        din1 => grp_fu_499_p1,
        ce => grp_fu_499_ce,
        dout => grp_fu_499_p2);

    dadd_64ns_64ns_64_2_no_dsp_1_U954 : component TOP_dadd_64ns_64ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t13_reg_1990,
        din1 => grp_fu_503_p1,
        ce => grp_fu_503_ce,
        dout => grp_fu_503_p2);

    dadd_64ns_64ns_64_2_no_dsp_1_U955 : component TOP_dadd_64ns_64ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t6_reg_2000,
        din1 => grp_fu_507_p1,
        ce => grp_fu_507_ce,
        dout => grp_fu_507_p2);

    dadd_64ns_64ns_64_2_no_dsp_1_U956 : component TOP_dadd_64ns_64ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t15_reg_2020,
        din1 => grp_fu_511_p1,
        ce => grp_fu_511_ce,
        dout => grp_fu_511_p2);

    dadd_64ns_64ns_64_2_no_dsp_1_U957 : component TOP_dadd_64ns_64ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t8_reg_2030,
        din1 => grp_fu_515_p1,
        ce => grp_fu_515_ce,
        dout => grp_fu_515_p2);

    dadd_64ns_64ns_64_2_no_dsp_1_U958 : component TOP_dadd_64ns_64ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t17_reg_2050,
        din1 => grp_fu_519_p1,
        ce => grp_fu_519_ce,
        dout => grp_fu_519_p2);

    dadd_64ns_64ns_64_2_no_dsp_1_U959 : component TOP_dadd_64ns_64ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t10_reg_2060,
        din1 => grp_fu_523_p1,
        ce => grp_fu_523_ce,
        dout => grp_fu_523_p2);

    dadd_64ns_64ns_64_2_no_dsp_1_U960 : component TOP_dadd_64ns_64ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t18_reg_2081,
        din1 => ap_const_lv64_C02A8FB57E147826,
        ce => grp_fu_527_ce,
        dout => grp_fu_527_p2);

    dadd_64ns_64ns_64_2_no_dsp_1_U961 : component TOP_dadd_64ns_64ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t12_reg_2086,
        din1 => grp_fu_532_p1,
        ce => grp_fu_532_ce,
        dout => grp_fu_532_p2);

    dadd_64ns_64ns_64_2_no_dsp_1_U962 : component TOP_dadd_64ns_64ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t19_reg_2107,
        din1 => ap_const_lv64_3FF0000000000000,
        ce => grp_fu_536_ce,
        dout => grp_fu_536_p2);

    dmul_64ns_64ns_64_2_med_dsp_1_U963 : component TOP_dmul_64ns_64ns_64_2_med_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t1_reg_1905,
        din1 => ap_const_lv64_4000000000000000,
        ce => grp_fu_541_ce,
        dout => grp_fu_541_p2);

    dmul_64ns_64ns_64_2_med_dsp_1_U964 : component TOP_dmul_64ns_64ns_64_2_med_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => z_reg_1939,
        din1 => z_reg_1939,
        ce => grp_fu_546_ce,
        dout => grp_fu_546_p2);

    dmul_64ns_64ns_64_2_med_dsp_1_U965 : component TOP_dmul_64ns_64ns_64_2_med_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_550_p0,
        din1 => r_16_reg_1951,
        ce => grp_fu_550_ce,
        dout => grp_fu_550_p2);

    dmul_64ns_64ns_64_2_med_dsp_1_U966 : component TOP_dmul_64ns_64ns_64_2_med_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_554_p0,
        din1 => r_16_reg_1951_pp0_iter18_reg,
        ce => grp_fu_554_ce,
        dout => grp_fu_554_p2);

    dmul_64ns_64ns_64_2_med_dsp_1_U967 : component TOP_dmul_64ns_64ns_64_2_med_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t5_reg_1985,
        din1 => r_16_reg_1951_pp0_iter20_reg,
        ce => grp_fu_558_ce,
        dout => grp_fu_558_p2);

    dmul_64ns_64ns_64_2_med_dsp_1_U968 : component TOP_dmul_64ns_64ns_64_2_med_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t14_reg_2005,
        din1 => r_16_reg_1951_pp0_iter22_reg,
        ce => grp_fu_562_ce,
        dout => grp_fu_562_p2);

    dmul_64ns_64ns_64_2_med_dsp_1_U969 : component TOP_dmul_64ns_64ns_64_2_med_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t7_reg_2015,
        din1 => r_16_reg_1951_pp0_iter24_reg,
        ce => grp_fu_566_ce,
        dout => grp_fu_566_p2);

    dmul_64ns_64ns_64_2_med_dsp_1_U970 : component TOP_dmul_64ns_64ns_64_2_med_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t16_reg_2035,
        din1 => r_16_reg_1951_pp0_iter26_reg,
        ce => grp_fu_570_ce,
        dout => grp_fu_570_p2);

    dmul_64ns_64ns_64_2_med_dsp_1_U971 : component TOP_dmul_64ns_64ns_64_2_med_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t9_reg_2045,
        din1 => r_16_reg_1951_pp0_iter28_reg,
        ce => grp_fu_574_ce,
        dout => grp_fu_574_p2);

    dmul_64ns_64ns_64_2_med_dsp_1_U972 : component TOP_dmul_64ns_64ns_64_2_med_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => f2_reg_2065,
        din1 => r_16_reg_1951_pp0_iter30_reg,
        ce => grp_fu_578_ce,
        dout => grp_fu_578_p2);

    dmul_64ns_64ns_64_2_med_dsp_1_U973 : component TOP_dmul_64ns_64ns_64_2_med_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t11_reg_2076,
        din1 => r_16_reg_1951_pp0_iter32_reg,
        ce => grp_fu_582_ce,
        dout => grp_fu_582_p2);

    dmul_64ns_64ns_64_2_med_dsp_1_U974 : component TOP_dmul_64ns_64ns_64_2_med_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => f2_9_reg_2091,
        din1 => r_16_reg_1951_pp0_iter34_reg,
        ce => grp_fu_586_ce,
        dout => grp_fu_586_p2);

    dmul_64ns_64ns_64_2_med_dsp_1_U975 : component TOP_dmul_64ns_64ns_64_2_med_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => f1_1_reg_2101,
        din1 => z_9_reg_1946_pp0_iter36_reg,
        ce => grp_fu_590_ce,
        dout => grp_fu_590_p2);

    ddiv_64ns_64ns_64_7_no_dsp_1_U976 : component TOP_ddiv_64ns_64ns_64_7_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => f1_4_reg_2112,
        din1 => f2_10_reg_2117,
        ce => grp_fu_594_ce,
        dout => grp_fu_594_p2);

    dcmp_64ns_64ns_1_1_no_dsp_1_U977 : component TOP_dcmp_64ns_64ns_1_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_uniform_reg_1869,
        din1 => ap_const_lv64_3F98D4FDF3B645A2,
        opcode => ap_const_lv5_4,
        dout => tmp_s_fu_598_p2);

    dcmp_64ns_64ns_1_1_no_dsp_1_U978 : component TOP_dcmp_64ns_64ns_1_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_uniform_reg_1869_pp0_iter12_reg,
        din1 => ap_const_lv64_3FEF395810624DD3,
        opcode => ap_const_lv5_2,
        dout => tmp_5_fu_603_p2);

    dsqrt_64ns_64ns_64_7_no_dsp_1_U979 : component TOP_dsqrt_64ns_64ns_64_7_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv64_0,
        din1 => grp_fu_608_p1,
        ce => grp_fu_608_ce,
        dout => grp_fu_608_p2);

    dlog_64ns_64ns_64_5_med_dsp_1_U980 : component TOP_dlog_64ns_64ns_64_5_med_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv64_0,
        din1 => grp_fu_613_p1,
        ce => grp_fu_613_ce,
        dout => grp_fu_613_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U981 : component TOP_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => TEMP_V_fu_1758_p3,
        din1 => grp_fu_1788_p1,
        din2 => grp_fu_1788_p2,
        ce => grp_fu_1788_ce,
        dout => grp_fu_1788_p3);

    flow_control_loop_pipe_sequential_init_U : component TOP_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter48_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter38 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter39 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter40 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter41 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter42 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter43 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter44_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter44 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter45_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter45 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter46_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter46 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter47_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter47 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter48_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter48 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter49_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter49 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    j_fu_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln15_fu_650_p2 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1))) then 
                    j_fu_350 <= j_5_fu_656_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_350 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    lhs_V_fu_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    lhs_V_fu_342 <= rngMT19937ICN_uniformRNG_x_k_p_m_V;
                elsif (((icmp_ln15_reg_1836 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    lhs_V_fu_342 <= ap_phi_mux_p_0_0_0964_i_phi_fu_481_p4;
                end if;
            end if; 
        end if;
    end process;

    p_0_0_09758_i_fu_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_0_0_09758_i_fu_338 <= rngMT19937ICN_uniformRNG_x_k_p_2_V;
                elsif (((icmp_ln15_reg_1836 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    p_0_0_09758_i_fu_338 <= ap_phi_mux_p_0_0_0976_i_phi_fu_470_p4;
                end if;
            end if; 
        end if;
    end process;

    p_Val2_150_fu_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_Val2_150_fu_354 <= rngMT19937ICN_uniformRNG_x_k_p_1_V;
                elsif (((icmp_ln15_reg_1836 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    p_Val2_150_fu_354 <= p_0_0_09758_i_fu_338;
                end if;
            end if; 
        end if;
    end process;

    p_Val2_s_fu_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_Val2_s_fu_346 <= rngMT19937ICN_uniformRNG_x_k_p_0_V;
                elsif (((icmp_ln15_reg_1836 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    p_Val2_s_fu_346 <= p_Val2_150_fu_354;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln443_reg_1894 <= and_ln443_fu_1354_p2;
                and_ln443_reg_1894_pp0_iter10_reg <= and_ln443_reg_1894_pp0_iter9_reg;
                and_ln443_reg_1894_pp0_iter11_reg <= and_ln443_reg_1894_pp0_iter10_reg;
                and_ln443_reg_1894_pp0_iter12_reg <= and_ln443_reg_1894_pp0_iter11_reg;
                and_ln443_reg_1894_pp0_iter13_reg <= and_ln443_reg_1894_pp0_iter12_reg;
                and_ln443_reg_1894_pp0_iter14_reg <= and_ln443_reg_1894_pp0_iter13_reg;
                and_ln443_reg_1894_pp0_iter15_reg <= and_ln443_reg_1894_pp0_iter14_reg;
                and_ln443_reg_1894_pp0_iter16_reg <= and_ln443_reg_1894_pp0_iter15_reg;
                and_ln443_reg_1894_pp0_iter17_reg <= and_ln443_reg_1894_pp0_iter16_reg;
                and_ln443_reg_1894_pp0_iter18_reg <= and_ln443_reg_1894_pp0_iter17_reg;
                and_ln443_reg_1894_pp0_iter19_reg <= and_ln443_reg_1894_pp0_iter18_reg;
                and_ln443_reg_1894_pp0_iter20_reg <= and_ln443_reg_1894_pp0_iter19_reg;
                and_ln443_reg_1894_pp0_iter21_reg <= and_ln443_reg_1894_pp0_iter20_reg;
                and_ln443_reg_1894_pp0_iter22_reg <= and_ln443_reg_1894_pp0_iter21_reg;
                and_ln443_reg_1894_pp0_iter23_reg <= and_ln443_reg_1894_pp0_iter22_reg;
                and_ln443_reg_1894_pp0_iter24_reg <= and_ln443_reg_1894_pp0_iter23_reg;
                and_ln443_reg_1894_pp0_iter25_reg <= and_ln443_reg_1894_pp0_iter24_reg;
                and_ln443_reg_1894_pp0_iter26_reg <= and_ln443_reg_1894_pp0_iter25_reg;
                and_ln443_reg_1894_pp0_iter27_reg <= and_ln443_reg_1894_pp0_iter26_reg;
                and_ln443_reg_1894_pp0_iter28_reg <= and_ln443_reg_1894_pp0_iter27_reg;
                and_ln443_reg_1894_pp0_iter29_reg <= and_ln443_reg_1894_pp0_iter28_reg;
                and_ln443_reg_1894_pp0_iter30_reg <= and_ln443_reg_1894_pp0_iter29_reg;
                and_ln443_reg_1894_pp0_iter31_reg <= and_ln443_reg_1894_pp0_iter30_reg;
                and_ln443_reg_1894_pp0_iter32_reg <= and_ln443_reg_1894_pp0_iter31_reg;
                and_ln443_reg_1894_pp0_iter33_reg <= and_ln443_reg_1894_pp0_iter32_reg;
                and_ln443_reg_1894_pp0_iter34_reg <= and_ln443_reg_1894_pp0_iter33_reg;
                and_ln443_reg_1894_pp0_iter35_reg <= and_ln443_reg_1894_pp0_iter34_reg;
                and_ln443_reg_1894_pp0_iter36_reg <= and_ln443_reg_1894_pp0_iter35_reg;
                and_ln443_reg_1894_pp0_iter37_reg <= and_ln443_reg_1894_pp0_iter36_reg;
                and_ln443_reg_1894_pp0_iter38_reg <= and_ln443_reg_1894_pp0_iter37_reg;
                and_ln443_reg_1894_pp0_iter39_reg <= and_ln443_reg_1894_pp0_iter38_reg;
                and_ln443_reg_1894_pp0_iter40_reg <= and_ln443_reg_1894_pp0_iter39_reg;
                and_ln443_reg_1894_pp0_iter41_reg <= and_ln443_reg_1894_pp0_iter40_reg;
                and_ln443_reg_1894_pp0_iter42_reg <= and_ln443_reg_1894_pp0_iter41_reg;
                and_ln443_reg_1894_pp0_iter43_reg <= and_ln443_reg_1894_pp0_iter42_reg;
                and_ln443_reg_1894_pp0_iter44_reg <= and_ln443_reg_1894_pp0_iter43_reg;
                and_ln443_reg_1894_pp0_iter4_reg <= and_ln443_reg_1894;
                and_ln443_reg_1894_pp0_iter5_reg <= and_ln443_reg_1894_pp0_iter4_reg;
                and_ln443_reg_1894_pp0_iter6_reg <= and_ln443_reg_1894_pp0_iter5_reg;
                and_ln443_reg_1894_pp0_iter7_reg <= and_ln443_reg_1894_pp0_iter6_reg;
                and_ln443_reg_1894_pp0_iter8_reg <= and_ln443_reg_1894_pp0_iter7_reg;
                and_ln443_reg_1894_pp0_iter9_reg <= and_ln443_reg_1894_pp0_iter8_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
                ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
                ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
                ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
                ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
                ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
                ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
                ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
                ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
                ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
                ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
                ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
                ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
                ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
                ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
                ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
                ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
                ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
                ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
                ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
                ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
                ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
                ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
                ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
                ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
                ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
                ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
                ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
                ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
                ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
                ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                f1_1_reg_2101 <= grp_fu_532_p2;
                f1_1_reg_2101_pp0_iter37_reg <= f1_1_reg_2101;
                f1_4_reg_2112 <= f1_4_fu_1489_p3;
                f2_10_reg_2117 <= grp_fu_536_p2;
                f2_9_reg_2091 <= f2_9_fu_1475_p3;
                f2_reg_2065 <= grp_fu_519_p2;
                f2_reg_2065_pp0_iter31_reg <= f2_reg_2065;
                f2_reg_2065_pp0_iter32_reg <= f2_reg_2065_pp0_iter31_reg;
                f2_reg_2065_pp0_iter33_reg <= f2_reg_2065_pp0_iter32_reg;
                or_ln443_4_reg_1920 <= or_ln443_4_fu_1385_p2;
                or_ln443_4_reg_1920_pp0_iter14_reg <= or_ln443_4_reg_1920;
                or_ln443_4_reg_1920_pp0_iter15_reg <= or_ln443_4_reg_1920_pp0_iter14_reg;
                or_ln443_4_reg_1920_pp0_iter16_reg <= or_ln443_4_reg_1920_pp0_iter15_reg;
                or_ln443_4_reg_1920_pp0_iter17_reg <= or_ln443_4_reg_1920_pp0_iter16_reg;
                or_ln443_4_reg_1920_pp0_iter18_reg <= or_ln443_4_reg_1920_pp0_iter17_reg;
                or_ln443_4_reg_1920_pp0_iter19_reg <= or_ln443_4_reg_1920_pp0_iter18_reg;
                or_ln443_4_reg_1920_pp0_iter20_reg <= or_ln443_4_reg_1920_pp0_iter19_reg;
                or_ln443_4_reg_1920_pp0_iter21_reg <= or_ln443_4_reg_1920_pp0_iter20_reg;
                or_ln443_4_reg_1920_pp0_iter22_reg <= or_ln443_4_reg_1920_pp0_iter21_reg;
                or_ln443_4_reg_1920_pp0_iter23_reg <= or_ln443_4_reg_1920_pp0_iter22_reg;
                or_ln443_4_reg_1920_pp0_iter24_reg <= or_ln443_4_reg_1920_pp0_iter23_reg;
                or_ln443_4_reg_1920_pp0_iter25_reg <= or_ln443_4_reg_1920_pp0_iter24_reg;
                or_ln443_4_reg_1920_pp0_iter26_reg <= or_ln443_4_reg_1920_pp0_iter25_reg;
                or_ln443_4_reg_1920_pp0_iter27_reg <= or_ln443_4_reg_1920_pp0_iter26_reg;
                or_ln443_4_reg_1920_pp0_iter28_reg <= or_ln443_4_reg_1920_pp0_iter27_reg;
                or_ln443_4_reg_1920_pp0_iter29_reg <= or_ln443_4_reg_1920_pp0_iter28_reg;
                or_ln443_4_reg_1920_pp0_iter30_reg <= or_ln443_4_reg_1920_pp0_iter29_reg;
                or_ln443_4_reg_1920_pp0_iter31_reg <= or_ln443_4_reg_1920_pp0_iter30_reg;
                or_ln443_4_reg_1920_pp0_iter32_reg <= or_ln443_4_reg_1920_pp0_iter31_reg;
                or_ln443_4_reg_1920_pp0_iter33_reg <= or_ln443_4_reg_1920_pp0_iter32_reg;
                or_ln443_4_reg_1920_pp0_iter34_reg <= or_ln443_4_reg_1920_pp0_iter33_reg;
                or_ln443_4_reg_1920_pp0_iter35_reg <= or_ln443_4_reg_1920_pp0_iter34_reg;
                or_ln443_4_reg_1920_pp0_iter36_reg <= or_ln443_4_reg_1920_pp0_iter35_reg;
                or_ln443_4_reg_1920_pp0_iter37_reg <= or_ln443_4_reg_1920_pp0_iter36_reg;
                or_ln443_4_reg_1920_pp0_iter38_reg <= or_ln443_4_reg_1920_pp0_iter37_reg;
                or_ln443_4_reg_1920_pp0_iter39_reg <= or_ln443_4_reg_1920_pp0_iter38_reg;
                or_ln443_4_reg_1920_pp0_iter40_reg <= or_ln443_4_reg_1920_pp0_iter39_reg;
                or_ln443_4_reg_1920_pp0_iter41_reg <= or_ln443_4_reg_1920_pp0_iter40_reg;
                or_ln443_4_reg_1920_pp0_iter42_reg <= or_ln443_4_reg_1920_pp0_iter41_reg;
                or_ln443_4_reg_1920_pp0_iter43_reg <= or_ln443_4_reg_1920_pp0_iter42_reg;
                or_ln443_4_reg_1920_pp0_iter44_reg <= or_ln443_4_reg_1920_pp0_iter43_reg;
                or_ln443_reg_1889 <= or_ln443_fu_1348_p2;
                or_ln443_reg_1889_pp0_iter10_reg <= or_ln443_reg_1889_pp0_iter9_reg;
                or_ln443_reg_1889_pp0_iter11_reg <= or_ln443_reg_1889_pp0_iter10_reg;
                or_ln443_reg_1889_pp0_iter12_reg <= or_ln443_reg_1889_pp0_iter11_reg;
                or_ln443_reg_1889_pp0_iter4_reg <= or_ln443_reg_1889;
                or_ln443_reg_1889_pp0_iter5_reg <= or_ln443_reg_1889_pp0_iter4_reg;
                or_ln443_reg_1889_pp0_iter6_reg <= or_ln443_reg_1889_pp0_iter5_reg;
                or_ln443_reg_1889_pp0_iter7_reg <= or_ln443_reg_1889_pp0_iter6_reg;
                or_ln443_reg_1889_pp0_iter8_reg <= or_ln443_reg_1889_pp0_iter7_reg;
                or_ln443_reg_1889_pp0_iter9_reg <= or_ln443_reg_1889_pp0_iter8_reg;
                r_16_reg_1951 <= r_16_fu_1396_p3;
                r_16_reg_1951_pp0_iter17_reg <= r_16_reg_1951;
                r_16_reg_1951_pp0_iter18_reg <= r_16_reg_1951_pp0_iter17_reg;
                r_16_reg_1951_pp0_iter19_reg <= r_16_reg_1951_pp0_iter18_reg;
                r_16_reg_1951_pp0_iter20_reg <= r_16_reg_1951_pp0_iter19_reg;
                r_16_reg_1951_pp0_iter21_reg <= r_16_reg_1951_pp0_iter20_reg;
                r_16_reg_1951_pp0_iter22_reg <= r_16_reg_1951_pp0_iter21_reg;
                r_16_reg_1951_pp0_iter23_reg <= r_16_reg_1951_pp0_iter22_reg;
                r_16_reg_1951_pp0_iter24_reg <= r_16_reg_1951_pp0_iter23_reg;
                r_16_reg_1951_pp0_iter25_reg <= r_16_reg_1951_pp0_iter24_reg;
                r_16_reg_1951_pp0_iter26_reg <= r_16_reg_1951_pp0_iter25_reg;
                r_16_reg_1951_pp0_iter27_reg <= r_16_reg_1951_pp0_iter26_reg;
                r_16_reg_1951_pp0_iter28_reg <= r_16_reg_1951_pp0_iter27_reg;
                r_16_reg_1951_pp0_iter29_reg <= r_16_reg_1951_pp0_iter28_reg;
                r_16_reg_1951_pp0_iter30_reg <= r_16_reg_1951_pp0_iter29_reg;
                r_16_reg_1951_pp0_iter31_reg <= r_16_reg_1951_pp0_iter30_reg;
                r_16_reg_1951_pp0_iter32_reg <= r_16_reg_1951_pp0_iter31_reg;
                r_16_reg_1951_pp0_iter33_reg <= r_16_reg_1951_pp0_iter32_reg;
                r_16_reg_1951_pp0_iter34_reg <= r_16_reg_1951_pp0_iter33_reg;
                result_reg_2122 <= result_fu_1516_p3;
                t10_reg_2060 <= grp_fu_574_p2;
                t11_reg_2076 <= grp_fu_523_p2;
                t12_reg_2086 <= grp_fu_582_p2;
                t13_reg_1990 <= grp_fu_554_p2;
                t14_reg_2005 <= grp_fu_503_p2;
                t15_reg_2020 <= grp_fu_562_p2;
                t16_reg_2035 <= grp_fu_511_p2;
                t17_reg_2050 <= grp_fu_570_p2;
                t19_reg_2107 <= grp_fu_586_p2;
                t1_reg_1905 <= grp_fu_613_p2;
                t2_reg_1910 <= grp_fu_541_p2;
                t4_reg_1970 <= grp_fu_550_p2;
                t5_reg_1985 <= grp_fu_499_p2;
                t6_reg_2000 <= grp_fu_558_p2;
                t7_reg_2015 <= grp_fu_507_p2;
                t8_reg_2030 <= grp_fu_566_p2;
                t9_reg_2045 <= grp_fu_515_p2;
                tmp_6_reg_1884 <= grp_fu_489_p2;
                tmp_s_reg_1879 <= tmp_s_fu_598_p2;
                tmp_uniform_reg_1869_pp0_iter10_reg <= tmp_uniform_reg_1869_pp0_iter9_reg;
                tmp_uniform_reg_1869_pp0_iter11_reg <= tmp_uniform_reg_1869_pp0_iter10_reg;
                tmp_uniform_reg_1869_pp0_iter12_reg <= tmp_uniform_reg_1869_pp0_iter11_reg;
                tmp_uniform_reg_1869_pp0_iter2_reg <= tmp_uniform_reg_1869;
                tmp_uniform_reg_1869_pp0_iter3_reg <= tmp_uniform_reg_1869_pp0_iter2_reg;
                tmp_uniform_reg_1869_pp0_iter4_reg <= tmp_uniform_reg_1869_pp0_iter3_reg;
                tmp_uniform_reg_1869_pp0_iter5_reg <= tmp_uniform_reg_1869_pp0_iter4_reg;
                tmp_uniform_reg_1869_pp0_iter6_reg <= tmp_uniform_reg_1869_pp0_iter5_reg;
                tmp_uniform_reg_1869_pp0_iter7_reg <= tmp_uniform_reg_1869_pp0_iter6_reg;
                tmp_uniform_reg_1869_pp0_iter8_reg <= tmp_uniform_reg_1869_pp0_iter7_reg;
                tmp_uniform_reg_1869_pp0_iter9_reg <= tmp_uniform_reg_1869_pp0_iter8_reg;
                z_9_reg_1946_pp0_iter17_reg <= z_9_reg_1946;
                z_9_reg_1946_pp0_iter18_reg <= z_9_reg_1946_pp0_iter17_reg;
                z_9_reg_1946_pp0_iter19_reg <= z_9_reg_1946_pp0_iter18_reg;
                z_9_reg_1946_pp0_iter20_reg <= z_9_reg_1946_pp0_iter19_reg;
                z_9_reg_1946_pp0_iter21_reg <= z_9_reg_1946_pp0_iter20_reg;
                z_9_reg_1946_pp0_iter22_reg <= z_9_reg_1946_pp0_iter21_reg;
                z_9_reg_1946_pp0_iter23_reg <= z_9_reg_1946_pp0_iter22_reg;
                z_9_reg_1946_pp0_iter24_reg <= z_9_reg_1946_pp0_iter23_reg;
                z_9_reg_1946_pp0_iter25_reg <= z_9_reg_1946_pp0_iter24_reg;
                z_9_reg_1946_pp0_iter26_reg <= z_9_reg_1946_pp0_iter25_reg;
                z_9_reg_1946_pp0_iter27_reg <= z_9_reg_1946_pp0_iter26_reg;
                z_9_reg_1946_pp0_iter28_reg <= z_9_reg_1946_pp0_iter27_reg;
                z_9_reg_1946_pp0_iter29_reg <= z_9_reg_1946_pp0_iter28_reg;
                z_9_reg_1946_pp0_iter30_reg <= z_9_reg_1946_pp0_iter29_reg;
                z_9_reg_1946_pp0_iter31_reg <= z_9_reg_1946_pp0_iter30_reg;
                z_9_reg_1946_pp0_iter32_reg <= z_9_reg_1946_pp0_iter31_reg;
                z_9_reg_1946_pp0_iter33_reg <= z_9_reg_1946_pp0_iter32_reg;
                z_9_reg_1946_pp0_iter34_reg <= z_9_reg_1946_pp0_iter33_reg;
                z_9_reg_1946_pp0_iter35_reg <= z_9_reg_1946_pp0_iter34_reg;
                z_9_reg_1946_pp0_iter36_reg <= z_9_reg_1946_pp0_iter35_reg;
                z_reg_1939 <= grp_fu_494_p2;
                z_reg_1939_pp0_iter15_reg <= z_reg_1939;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln15_reg_1836 <= icmp_ln15_fu_650_p2;
                sext_ln1245_cast_reg_1831 <= sext_ln1245_cast_fu_618_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_fu_650_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                r_12_reg_1844 <= addr_head_p_n_V_fu_682_p2(9 downto 1);
                trunc_ln229_reg_1840 <= trunc_ln229_fu_666_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln443_4_reg_1920_pp0_iter31_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                t18_reg_2081 <= grp_fu_578_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_reg_1836 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_uniform_reg_1869 <= tmp_uniform_fu_1290_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln443_4_reg_1920_pp0_iter15_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                z_9_reg_1946 <= z_9_fu_1390_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    F2_fu_1588_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln501_fu_1548_p1));
    TEMP_V_fu_1758_p3 <= 
        ap_const_lv16_0 when (icmp_ln580_fu_1582_p2(0) = '1') else 
        select_ln590_fu_1750_p3;
    add_ln590_fu_1600_p2 <= std_logic_vector(unsigned(F2_fu_1588_p2) + unsigned(ap_const_lv12_FF8));
    add_ln961_fu_1182_p2 <= std_logic_vector(unsigned(sub_ln947_fu_1048_p2) + unsigned(ap_const_lv32_FFFFFFCA));
    add_ln968_fu_1252_p2 <= std_logic_vector(unsigned(sub_ln969_fu_1246_p2) + unsigned(ap_const_lv11_1));
    addr_head_p_3_V_fu_670_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_4) + unsigned(ap_const_lv8_3));
    addr_head_p_m_p_1_V_fu_676_p2 <= std_logic_vector(unsigned(p_cast_i_fu_662_p1) + unsigned(ap_const_lv10_18E));
    addr_head_p_n_V_fu_682_p2 <= std_logic_vector(unsigned(p_cast_i_fu_662_p1) + unsigned(ap_const_lv10_270));
    and_ln443_4_fu_1380_p2 <= (tmp_5_fu_603_p2 and or_ln443_reg_1889_pp0_iter12_reg);
    and_ln443_fu_1354_p2 <= (tmp_s_reg_1879 and or_ln443_fu_1348_p2);
    and_ln590_fu_1744_p2 <= (xor_ln591_fu_1738_p2 and icmp_ln590_fu_1594_p2);
    and_ln591_fu_1718_p2 <= (xor_ln580_fu_1712_p2 and icmp_ln591_fu_1624_p2);
    and_ln952_8_fu_1152_p2 <= (xor_ln952_fu_1132_p2 and p_Result_279_fu_1138_p3);
    and_ln952_fu_1112_p2 <= (pre_result_V_fu_1014_p2 and or_ln952_5_fu_1106_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(ap_enable_reg_pp0_iter48, ap_enable_reg_pp0_iter49, channel_out_empty_n, noise_out_full_n)
    begin
                ap_block_pp0_stage0_00001 <= (((noise_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter49 = ap_const_logic_1)) or ((channel_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter48 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter48, ap_enable_reg_pp0_iter49, channel_out_empty_n, noise_out_full_n)
    begin
                ap_block_pp0_stage0_01001 <= (((noise_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter49 = ap_const_logic_1)) or ((channel_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter48 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter48, ap_enable_reg_pp0_iter49, channel_out_empty_n, noise_out_full_n)
    begin
                ap_block_pp0_stage0_11001 <= (((noise_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter49 = ap_const_logic_1)) or ((channel_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter48 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter48, ap_enable_reg_pp0_iter49, channel_out_empty_n, noise_out_full_n)
    begin
                ap_block_pp0_stage0_subdone <= (((noise_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter49 = ap_const_logic_1)) or ((channel_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter48 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage0_iter38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage0_iter39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage0_iter42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage0_iter43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage0_iter44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage0_iter45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage0_iter46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage0_iter47 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state49_pp0_stage0_iter48_assign_proc : process(channel_out_empty_n)
    begin
                ap_block_state49_pp0_stage0_iter48 <= (channel_out_empty_n = ap_const_logic_0);
    end process;

        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state50_pp0_stage0_iter49_assign_proc : process(noise_out_full_n)
    begin
                ap_block_state50_pp0_stage0_iter49 <= (noise_out_full_n = ap_const_logic_0);
    end process;

        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1960_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln15_fu_650_p2, ap_block_pp0_stage0, ap_start_int)
    begin
                ap_condition_1960 <= ((icmp_ln15_fu_650_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln15_fu_650_p2, ap_start_int)
    begin
        if (((icmp_ln15_fu_650_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln15_reg_1836)
    begin
        if (((icmp_ln15_reg_1836 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter48_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter48_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_111_assign_proc : process(ap_predicate_op111_load_state2)
    begin
                ap_enable_operation_111 <= (ap_predicate_op111_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_112_assign_proc : process(ap_predicate_op112_load_state2)
    begin
                ap_enable_operation_112 <= (ap_predicate_op112_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_114_assign_proc : process(ap_predicate_op114_store_state2)
    begin
                ap_enable_operation_114 <= (ap_predicate_op114_store_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_116_assign_proc : process(ap_predicate_op116_load_state2)
    begin
                ap_enable_operation_116 <= (ap_predicate_op116_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_117_assign_proc : process(ap_predicate_op117_load_state2)
    begin
                ap_enable_operation_117 <= (ap_predicate_op117_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_119_assign_proc : process(ap_predicate_op119_store_state2)
    begin
                ap_enable_operation_119 <= (ap_predicate_op119_store_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_88_assign_proc : process(ap_predicate_op88_load_state1)
    begin
                ap_enable_operation_88 <= (ap_predicate_op88_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_90_assign_proc : process(ap_predicate_op90_load_state1)
    begin
                ap_enable_operation_90 <= (ap_predicate_op90_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_92_assign_proc : process(ap_predicate_op92_load_state1)
    begin
                ap_enable_operation_92 <= (ap_predicate_op92_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_94_assign_proc : process(ap_predicate_op94_load_state1)
    begin
                ap_enable_operation_94 <= (ap_predicate_op94_load_state1 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state1_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_start_int)
    begin
                ap_enable_state1_pp0_iter0_stage0 <= ((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state2_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state2_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter39, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter41, ap_enable_reg_pp0_iter42, ap_enable_reg_pp0_iter43, ap_enable_reg_pp0_iter44, ap_enable_reg_pp0_iter45, ap_enable_reg_pp0_iter46, ap_enable_reg_pp0_iter47, ap_enable_reg_pp0_iter48, ap_enable_reg_pp0_iter49)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter49 = ap_const_logic_0) and (ap_enable_reg_pp0_iter48 = ap_const_logic_0) and (ap_enable_reg_pp0_iter47 = ap_const_logic_0) and (ap_enable_reg_pp0_iter46 = ap_const_logic_0) and (ap_enable_reg_pp0_iter45 = ap_const_logic_0) and (ap_enable_reg_pp0_iter44 = ap_const_logic_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_0) and (ap_enable_reg_pp0_iter42 = ap_const_logic_0) and (ap_enable_reg_pp0_iter41 = ap_const_logic_0) and (ap_enable_reg_pp0_iter40 = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_p_0_0_0964_i_phi_fu_481_p4_assign_proc : process(rngMT19937ICN_uniformRNG_mt_even_0_V_q1, rngMT19937ICN_uniformRNG_mt_odd_0_V_q1, icmp_ln15_reg_1836, trunc_ln229_reg_1840, ap_phi_reg_pp0_iter1_p_0_0_0964_i_reg_478)
    begin
        if ((icmp_ln15_reg_1836 = ap_const_lv1_0)) then
            if ((trunc_ln229_reg_1840 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0_0_0964_i_phi_fu_481_p4 <= rngMT19937ICN_uniformRNG_mt_odd_0_V_q1;
            elsif ((trunc_ln229_reg_1840 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0_0_0964_i_phi_fu_481_p4 <= rngMT19937ICN_uniformRNG_mt_even_0_V_q1;
            else 
                ap_phi_mux_p_0_0_0964_i_phi_fu_481_p4 <= ap_phi_reg_pp0_iter1_p_0_0_0964_i_reg_478;
            end if;
        else 
            ap_phi_mux_p_0_0_0964_i_phi_fu_481_p4 <= ap_phi_reg_pp0_iter1_p_0_0_0964_i_reg_478;
        end if; 
    end process;


    ap_phi_mux_p_0_0_0976_i_phi_fu_470_p4_assign_proc : process(rngMT19937ICN_uniformRNG_mt_even_0_V_q1, rngMT19937ICN_uniformRNG_mt_odd_0_V_q1, icmp_ln15_reg_1836, trunc_ln229_reg_1840, ap_phi_reg_pp0_iter1_p_0_0_0976_i_reg_467)
    begin
        if ((icmp_ln15_reg_1836 = ap_const_lv1_0)) then
            if ((trunc_ln229_reg_1840 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0_0_0976_i_phi_fu_470_p4 <= rngMT19937ICN_uniformRNG_mt_even_0_V_q1;
            elsif ((trunc_ln229_reg_1840 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0_0_0976_i_phi_fu_470_p4 <= rngMT19937ICN_uniformRNG_mt_odd_0_V_q1;
            else 
                ap_phi_mux_p_0_0_0976_i_phi_fu_470_p4 <= ap_phi_reg_pp0_iter1_p_0_0_0976_i_reg_467;
            end if;
        else 
            ap_phi_mux_p_0_0_0976_i_phi_fu_470_p4 <= ap_phi_reg_pp0_iter1_p_0_0_0976_i_reg_467;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_p_0_0_0964_i_reg_478 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_p_0_0_0976_i_reg_467 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op111_load_state2_assign_proc : process(icmp_ln15_reg_1836, trunc_ln229_reg_1840)
    begin
                ap_predicate_op111_load_state2 <= ((trunc_ln229_reg_1840 = ap_const_lv1_0) and (icmp_ln15_reg_1836 = ap_const_lv1_0));
    end process;


    ap_predicate_op112_load_state2_assign_proc : process(icmp_ln15_reg_1836, trunc_ln229_reg_1840)
    begin
                ap_predicate_op112_load_state2 <= ((trunc_ln229_reg_1840 = ap_const_lv1_0) and (icmp_ln15_reg_1836 = ap_const_lv1_0));
    end process;


    ap_predicate_op114_store_state2_assign_proc : process(icmp_ln15_reg_1836, trunc_ln229_reg_1840)
    begin
                ap_predicate_op114_store_state2 <= ((trunc_ln229_reg_1840 = ap_const_lv1_0) and (icmp_ln15_reg_1836 = ap_const_lv1_0));
    end process;


    ap_predicate_op116_load_state2_assign_proc : process(icmp_ln15_reg_1836, trunc_ln229_reg_1840)
    begin
                ap_predicate_op116_load_state2 <= ((trunc_ln229_reg_1840 = ap_const_lv1_1) and (icmp_ln15_reg_1836 = ap_const_lv1_0));
    end process;


    ap_predicate_op117_load_state2_assign_proc : process(icmp_ln15_reg_1836, trunc_ln229_reg_1840)
    begin
                ap_predicate_op117_load_state2 <= ((trunc_ln229_reg_1840 = ap_const_lv1_1) and (icmp_ln15_reg_1836 = ap_const_lv1_0));
    end process;


    ap_predicate_op119_store_state2_assign_proc : process(icmp_ln15_reg_1836, trunc_ln229_reg_1840)
    begin
                ap_predicate_op119_store_state2 <= ((trunc_ln229_reg_1840 = ap_const_lv1_1) and (icmp_ln15_reg_1836 = ap_const_lv1_0));
    end process;


    ap_predicate_op88_load_state1_assign_proc : process(icmp_ln15_fu_650_p2, trunc_ln229_fu_666_p1)
    begin
                ap_predicate_op88_load_state1 <= ((trunc_ln229_fu_666_p1 = ap_const_lv1_0) and (icmp_ln15_fu_650_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op90_load_state1_assign_proc : process(icmp_ln15_fu_650_p2, trunc_ln229_fu_666_p1)
    begin
                ap_predicate_op90_load_state1 <= ((trunc_ln229_fu_666_p1 = ap_const_lv1_0) and (icmp_ln15_fu_650_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op92_load_state1_assign_proc : process(icmp_ln15_fu_650_p2, trunc_ln229_fu_666_p1)
    begin
                ap_predicate_op92_load_state1 <= ((trunc_ln229_fu_666_p1 = ap_const_lv1_1) and (icmp_ln15_fu_650_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op94_load_state1_assign_proc : process(icmp_ln15_fu_650_p2, trunc_ln229_fu_666_p1)
    begin
                ap_predicate_op94_load_state1 <= ((trunc_ln229_fu_666_p1 = ap_const_lv1_1) and (icmp_ln15_fu_650_p2 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, j_fu_350)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_4 <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_j_4 <= j_fu_350;
        end if; 
    end process;

    ashr_ln595_fu_1644_p2 <= std_logic_vector(shift_right(signed(man_V_497_fu_1574_p3),to_integer(unsigned('0' & zext_ln595_fu_1640_p1(31-1 downto 0)))));
    bitcast_ln443_fu_1319_p1 <= tmp_uniform_reg_1869_pp0_iter2_reg;
    bitcast_ln456_fu_1366_p1 <= t2_reg_1910;
    bitcast_ln541_4_fu_1505_p1 <= xor_ln541_fu_1499_p2;
    bitcast_ln541_fu_1495_p1 <= grp_fu_594_p2;
    bitcast_ln746_fu_1286_p1 <= p_Result_280_fu_1274_p5;

    channel_out_blk_n_assign_proc : process(ap_enable_reg_pp0_iter48, channel_out_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter48 = ap_const_logic_1))) then 
            channel_out_blk_n <= channel_out_empty_n;
        else 
            channel_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    channel_out_read_assign_proc : process(ap_enable_reg_pp0_iter48, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter48 = ap_const_logic_1))) then 
            channel_out_read <= ap_const_logic_1;
        else 
            channel_out_read <= ap_const_logic_0;
        end if; 
    end process;

    exp_tmp_fu_1538_p4 <= ireg_fu_1523_p1(62 downto 52);
    f1_4_fu_1489_p3 <= 
        f1_1_reg_2101_pp0_iter37_reg when (or_ln443_4_reg_1920_pp0_iter37_reg(0) = '1') else 
        grp_fu_590_p2;
    f2_9_fu_1475_p3 <= 
        f2_reg_2065_pp0_iter33_reg when (or_ln443_4_reg_1920_pp0_iter33_reg(0) = '1') else 
        grp_fu_527_p2;

    grp_fu_1788_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1788_ce <= ap_const_logic_1;
        else 
            grp_fu_1788_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1788_p1 <= sext_ln1245_cast_reg_1831(16 - 1 downto 0);
    grp_fu_1788_p2 <= (channel_out_dout & ap_const_lv8_0);

    grp_fu_489_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_489_ce <= ap_const_logic_1;
        else 
            grp_fu_489_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_489_p1 <= 
        ap_const_lv64_0 when (icmp_ln938_fu_1020_p2(0) = '1') else 
        bitcast_ln746_fu_1286_p1;

    grp_fu_494_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_494_ce <= ap_const_logic_1;
        else 
            grp_fu_494_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_499_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_499_ce <= ap_const_logic_1;
        else 
            grp_fu_499_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_499_p1 <= 
        ap_const_lv64_BFD4A224C0E881B8 when (or_ln443_4_reg_1920_pp0_iter18_reg(0) = '1') else 
        ap_const_lv64_406B9E467034039B;

    grp_fu_503_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_503_ce <= ap_const_logic_1;
        else 
            grp_fu_503_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_503_p1 <= 
        ap_const_lv64_3FD4A34D2B590364 when (or_ln443_4_reg_1920_pp0_iter20_reg(0) = '1') else 
        ap_const_lv64_406432BF2CF04277;

    grp_fu_507_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_507_ce <= ap_const_logic_1;
        else 
            grp_fu_507_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_507_p1 <= 
        ap_const_lv64_C00334C0C1701758 when (or_ln443_4_reg_1920_pp0_iter22_reg(0) = '1') else 
        ap_const_lv64_C0713EDB2DC53B99;

    grp_fu_511_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_511_ce <= ap_const_logic_1;
        else 
            grp_fu_511_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_511_p1 <= 
        ap_const_lv64_40038FA27C8AE616 when (or_ln443_4_reg_1920_pp0_iter24_reg(0) = '1') else 
        ap_const_lv64_C063765E0B02D8D2;

    grp_fu_515_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_515_ce <= ap_const_logic_1;
        else 
            grp_fu_515_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_515_p1 <= 
        ap_const_lv64_C00465DA2C703A1A when (or_ln443_4_reg_1920_pp0_iter26_reg(0) = '1') else 
        ap_const_lv64_40614B72B40B401B;

    grp_fu_519_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_519_ce <= ap_const_logic_1;
        else 
            grp_fu_519_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_519_p1 <= 
        ap_const_lv64_400E09076895B119 when (or_ln443_4_reg_1920_pp0_iter28_reg(0) = '1') else 
        ap_const_lv64_4050B348B1A7E9BE;

    grp_fu_523_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_523_ce <= ap_const_logic_1;
        else 
            grp_fu_523_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_523_p1 <= 
        ap_const_lv64_40117FA7F4EA4DC7 when (or_ln443_4_reg_1920_pp0_iter30_reg(0) = '1') else 
        ap_const_lv64_C03EAA3034C08BCD;

    grp_fu_527_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_527_ce <= ap_const_logic_1;
        else 
            grp_fu_527_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_532_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_532_ce <= ap_const_logic_1;
        else 
            grp_fu_532_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_532_p1 <= 
        ap_const_lv64_4007815C1E3FCFA2 when (or_ln443_4_reg_1920_pp0_iter34_reg(0) = '1') else 
        ap_const_lv64_40040D9320575479;

    grp_fu_536_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_536_ce <= ap_const_logic_1;
        else 
            grp_fu_536_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_541_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_541_ce <= ap_const_logic_1;
        else 
            grp_fu_541_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_546_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_546_ce <= ap_const_logic_1;
        else 
            grp_fu_546_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_550_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_550_ce <= ap_const_logic_1;
        else 
            grp_fu_550_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_550_p0 <= 
        ap_const_lv64_BF7FE30D924ACFE0 when (or_ln443_4_reg_1920_pp0_iter16_reg(0) = '1') else 
        ap_const_lv64_C043D931BC1E0525;

    grp_fu_554_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_554_ce <= ap_const_logic_1;
        else 
            grp_fu_554_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_554_p0 <= 
        ap_const_lv64_3F7FE2D857AC9FD4 when (or_ln443_4_reg_1920_pp0_iter18_reg(0) = '1') else 
        ap_const_lv64_C04B3CF0CE3004C4;

    grp_fu_558_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_558_ce <= ap_const_logic_1;
        else 
            grp_fu_558_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_562_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_562_ce <= ap_const_logic_1;
        else 
            grp_fu_562_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_566_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_566_ce <= ap_const_logic_1;
        else 
            grp_fu_566_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_570_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_570_ce <= ap_const_logic_1;
        else 
            grp_fu_570_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_574_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_574_ce <= ap_const_logic_1;
        else 
            grp_fu_574_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_578_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_578_ce <= ap_const_logic_1;
        else 
            grp_fu_578_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_582_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_582_ce <= ap_const_logic_1;
        else 
            grp_fu_582_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_586_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_586_ce <= ap_const_logic_1;
        else 
            grp_fu_586_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_590_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_590_ce <= ap_const_logic_1;
        else 
            grp_fu_590_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_594_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_594_ce <= ap_const_logic_1;
        else 
            grp_fu_594_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_608_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_608_ce <= ap_const_logic_1;
        else 
            grp_fu_608_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_608_p1 <= xor_ln456_fu_1369_p2;

    grp_fu_613_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_613_ce <= ap_const_logic_1;
        else 
            grp_fu_613_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_613_p1 <= 
        tmp_uniform_reg_1869_pp0_iter2_reg when (and_ln443_fu_1354_p2(0) = '1') else 
        tmp_6_reg_1884;
    icmp_ln15_fu_650_p2 <= "1" when (ap_sig_allocacmp_j_4 = ap_const_lv8_80) else "0";
    icmp_ln443_4_fu_1342_p2 <= "1" when (trunc_ln443_fu_1332_p1 = ap_const_lv52_0) else "0";
    icmp_ln443_fu_1336_p2 <= "0" when (tmp_fu_1322_p4 = ap_const_lv11_7FF) else "1";
    icmp_ln580_fu_1582_p2 <= "1" when (trunc_ln564_fu_1526_p1 = ap_const_lv63_0) else "0";
    icmp_ln590_fu_1594_p2 <= "1" when (signed(F2_fu_1588_p2) > signed(ap_const_lv12_8)) else "0";
    icmp_ln591_fu_1624_p2 <= "1" when (F2_fu_1588_p2 = ap_const_lv12_8) else "0";
    icmp_ln594_fu_1634_p2 <= "1" when (unsigned(sh_amt_fu_1612_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln612_fu_1688_p2 <= "1" when (tmp_451_fu_1678_p4 = ap_const_lv8_0) else "0";
    icmp_ln938_fu_1020_p2 <= "1" when (zext_ln1691_4_fu_1010_p1 = pre_result_V_13_fu_994_p2) else "0";
    icmp_ln949_fu_1070_p2 <= "1" when (signed(tmp_445_fu_1060_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln952_fu_1118_p2 <= "0" when (and_ln952_fu_1112_p2 = ap_const_lv32_0) else "1";
    icmp_ln961_fu_1146_p2 <= "1" when (signed(lsb_index_fu_1054_p2) > signed(ap_const_lv32_0)) else "0";
    ireg_fu_1523_p1 <= result_reg_2122;
    j_5_fu_656_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_4) + unsigned(ap_const_lv8_1));
    
    l_fu_1036_p3_proc : process(p_Result_278_fu_1026_p4)
    begin
        l_fu_1036_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_278_fu_1026_p4(i) = '1' then
                l_fu_1036_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    lsb_index_fu_1054_p2 <= std_logic_vector(unsigned(sub_ln947_fu_1048_p2) + unsigned(ap_const_lv32_FFFFFFCB));
    lshr_ln950_fu_1094_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln950_fu_1090_p1(31-1 downto 0)))));
    lshr_ln961_fu_1192_p2 <= std_logic_vector(shift_right(unsigned(zext_ln960_fu_1076_p1),to_integer(unsigned('0' & zext_ln961_fu_1188_p1(31-1 downto 0)))));
    m_34_fu_1206_p3 <= 
        lshr_ln961_fu_1192_p2 when (icmp_ln961_fu_1146_p2(0) = '1') else 
        shl_ln962_fu_1168_p2;
    m_35_fu_1218_p2 <= std_logic_vector(unsigned(m_34_fu_1206_p3) + unsigned(zext_ln964_fu_1214_p1));
    m_fu_1224_p4 <= m_35_fu_1218_p2(63 downto 1);
    man_V_496_fu_1568_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln578_fu_1564_p1));
    man_V_497_fu_1574_p3 <= 
        man_V_496_fu_1568_p2 when (p_Result_281_fu_1530_p3(0) = '1') else 
        zext_ln578_fu_1564_p1;

    noise_out_blk_n_assign_proc : process(ap_enable_reg_pp0_iter49, noise_out_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter49 = ap_const_logic_1))) then 
            noise_out_blk_n <= noise_out_full_n;
        else 
            noise_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    noise_out_din <= p_0_fu_1778_p1(23 downto 8);

    noise_out_write_assign_proc : process(ap_enable_reg_pp0_iter49, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter49 = ap_const_logic_1))) then 
            noise_out_write <= ap_const_logic_1;
        else 
            noise_out_write <= ap_const_logic_0;
        end if; 
    end process;

    or_ln443_4_fu_1385_p2 <= (and_ln443_reg_1894_pp0_iter12_reg or and_ln443_4_fu_1380_p2);
    or_ln443_fu_1348_p2 <= (icmp_ln443_fu_1336_p2 or icmp_ln443_4_fu_1342_p2);
    or_ln591_fu_1732_p2 <= (icmp_ln591_fu_1624_p2 or icmp_ln580_fu_1582_p2);
    or_ln952_5_fu_1106_p2 <= (shl_ln952_fu_1100_p2 or lshr_ln950_fu_1094_p2);
    p_0_fu_1778_p1 <= grp_fu_1788_p3;
    
    p_Result_278_fu_1026_p4_proc : process(pre_result_V_fu_1014_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_278_fu_1026_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := pre_result_V_fu_1014_p2;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_278_fu_1026_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_278_fu_1026_p4_i) := pre_result_V_fu_1014_p2(32-1-p_Result_278_fu_1026_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_278_fu_1026_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_279_fu_1138_p3 <= pre_result_V_fu_1014_p2(to_integer(unsigned(lsb_index_fu_1054_p2)) downto to_integer(unsigned(lsb_index_fu_1054_p2))) when (to_integer(unsigned(lsb_index_fu_1054_p2)) >= 0 and to_integer(unsigned(lsb_index_fu_1054_p2)) <=31) else "-";
    p_Result_280_fu_1274_p5 <= (tmp_i_fu_1266_p3 & zext_ln965_fu_1234_p1(51 downto 0));
    p_Result_281_fu_1530_p3 <= ireg_fu_1523_p1(63 downto 63);
    p_Result_282_fu_1556_p3 <= (ap_const_lv1_1 & trunc_ln574_fu_1552_p1);
    p_Result_283_fu_752_p1 <= p_Val2_150_fu_354(1 - 1 downto 0);
    p_Result_s_fu_1238_p3 <= m_35_fu_1218_p2(54 downto 54);
    p_cast_i_fu_662_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j_4),10));
    pre_result_V_10_fu_792_p2 <= (zext_ln1043_fu_774_p1 xor xor_ln1544_fu_786_p2);
    pre_result_V_11_fu_822_p2 <= (zext_ln1691_fu_818_p1 xor pre_result_V_10_fu_792_p2);
    pre_result_V_12_fu_942_p2 <= (ret_fu_902_p19 xor pre_result_V_11_fu_822_p2);
    pre_result_V_13_fu_994_p2 <= (ret_13_fu_978_p7 xor pre_result_V_12_fu_942_p2);
    pre_result_V_fu_1014_p2 <= (zext_ln1691_4_fu_1010_p1 xor pre_result_V_13_fu_994_p2);
    r_11_fu_698_p4 <= addr_head_p_m_p_1_V_fu_676_p2(9 downto 1);
    r_13_fu_1000_p4 <= pre_result_V_13_fu_994_p2(31 downto 18);
    r_16_fu_1396_p3 <= 
        grp_fu_608_p2 when (or_ln443_4_reg_1920_pp0_iter15_reg(0) = '1') else 
        grp_fu_546_p2;
    r_fu_808_p4 <= pre_result_V_10_fu_792_p2(31 downto 11);
    r_s_fu_688_p4 <= addr_head_p_3_V_fu_670_p2(7 downto 1);
    result_fu_1516_p3 <= 
        select_ln540_fu_1509_p3 when (or_ln443_4_reg_1920_pp0_iter44_reg(0) = '1') else 
        grp_fu_594_p2;
    ret_13_fu_978_p7 <= (((((tmp_140_fu_948_p4 & ap_const_lv1_0) & tmp_141_fu_958_p4) & ap_const_lv3_0) & tmp_142_fu_968_p4) & ap_const_lv17_0);
    ret_fu_902_p19 <= (((((((((((((((((tmp_440_fu_828_p3 & ap_const_lv2_0) & tmp_137_fu_836_p4) & ap_const_lv1_0) & tmp_441_fu_846_p3) & ap_const_lv2_0) & tmp_442_fu_854_p3) & ap_const_lv1_0) & tmp_138_fu_862_p4) & ap_const_lv3_0) & tmp_443_fu_872_p3) & ap_const_lv1_0) & tmp_444_fu_880_p3) & ap_const_lv1_0) & tmp_139_fu_888_p4) & ap_const_lv1_0) & trunc_ln1542_fu_898_p1) & ap_const_lv7_0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_address0 <= zext_ln587_7_fu_800_p1(9 - 1 downto 0);

    rngMT19937ICN_uniformRNG_mt_even_0_V_address1_assign_proc : process(trunc_ln229_fu_666_p1, zext_ln587_fu_718_p1, zext_ln587_6_fu_724_p1, ap_condition_1960)
    begin
        if ((ap_const_boolean_1 = ap_condition_1960)) then
            if ((trunc_ln229_fu_666_p1 = ap_const_lv1_1)) then 
                rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= zext_ln587_fu_718_p1(9 - 1 downto 0);
            elsif ((trunc_ln229_fu_666_p1 = ap_const_lv1_0)) then 
                rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= zext_ln587_6_fu_724_p1(9 - 1 downto 0);
            else 
                rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= "XXXXXXXXX";
            end if;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln15_fu_650_p2, ap_block_pp0_stage0_11001, trunc_ln229_fu_666_p1, ap_start_int)
    begin
        if ((((trunc_ln229_fu_666_p1 = ap_const_lv1_1) and (icmp_ln15_fu_650_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((trunc_ln229_fu_666_p1 = ap_const_lv1_0) and (icmp_ln15_fu_650_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_mt_even_0_V_d0 <= pre_result_V_10_fu_792_p2;

    rngMT19937ICN_uniformRNG_mt_even_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln15_reg_1836, trunc_ln229_reg_1840)
    begin
        if (((trunc_ln229_reg_1840 = ap_const_lv1_0) and (icmp_ln15_reg_1836 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_we0 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 <= zext_ln587_7_fu_800_p1(9 - 1 downto 0);

    rngMT19937ICN_uniformRNG_mt_odd_0_V_address1_assign_proc : process(trunc_ln229_fu_666_p1, zext_ln587_fu_718_p1, zext_ln587_6_fu_724_p1, ap_condition_1960)
    begin
        if ((ap_const_boolean_1 = ap_condition_1960)) then
            if ((trunc_ln229_fu_666_p1 = ap_const_lv1_1)) then 
                rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= zext_ln587_6_fu_724_p1(9 - 1 downto 0);
            elsif ((trunc_ln229_fu_666_p1 = ap_const_lv1_0)) then 
                rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= zext_ln587_fu_718_p1(9 - 1 downto 0);
            else 
                rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= "XXXXXXXXX";
            end if;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln15_fu_650_p2, ap_block_pp0_stage0_11001, trunc_ln229_fu_666_p1, ap_start_int)
    begin
        if ((((trunc_ln229_fu_666_p1 = ap_const_lv1_1) and (icmp_ln15_fu_650_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((trunc_ln229_fu_666_p1 = ap_const_lv1_0) and (icmp_ln15_fu_650_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 <= pre_result_V_10_fu_792_p2;

    rngMT19937ICN_uniformRNG_mt_odd_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln15_reg_1836, trunc_ln229_reg_1840)
    begin
        if (((trunc_ln229_reg_1840 = ap_const_lv1_1) and (icmp_ln15_reg_1836 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln540_fu_1509_p3 <= 
        grp_fu_594_p2 when (and_ln443_reg_1894_pp0_iter44_reg(0) = '1') else 
        bitcast_ln541_4_fu_1505_p1;
    select_ln590_fu_1750_p3 <= 
        select_ln594_fu_1670_p3 when (and_ln590_fu_1744_p2(0) = '1') else 
        select_ln591_fu_1724_p3;
    select_ln591_fu_1724_p3 <= 
        trunc_ln592_fu_1630_p1 when (and_ln591_fu_1718_p2(0) = '1') else 
        select_ln612_fu_1704_p3;
    select_ln594_fu_1670_p3 <= 
        trunc_ln595_fu_1650_p1 when (icmp_ln594_fu_1634_p2(0) = '1') else 
        select_ln597_fu_1662_p3;
    select_ln597_fu_1662_p3 <= 
        ap_const_lv16_FFFF when (tmp_450_fu_1654_p3(0) = '1') else 
        ap_const_lv16_0;
    select_ln612_fu_1704_p3 <= 
        shl_ln613_fu_1698_p2 when (icmp_ln612_fu_1688_p2(0) = '1') else 
        ap_const_lv16_0;
    select_ln724_fu_778_p3 <= 
        ap_const_lv32_9908B0DF when (p_Result_283_fu_752_p1(0) = '1') else 
        ap_const_lv32_0;
    select_ln949_fu_1174_p3 <= 
        icmp_ln952_fu_1118_p2 when (icmp_ln949_fu_1070_p2(0) = '1') else 
        p_Result_279_fu_1138_p3;
    select_ln961_fu_1198_p3 <= 
        select_ln949_fu_1174_p3 when (icmp_ln961_fu_1146_p2(0) = '1') else 
        and_ln952_8_fu_1152_p2;
    select_ln968_fu_1258_p3 <= 
        add_ln968_fu_1252_p2 when (p_Result_s_fu_1238_p3(0) = '1') else 
        sub_ln969_fu_1246_p2;
        sext_ln1245_cast_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1245),24));

        sext_ln590_fu_1620_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_1612_p3),32));

    sext_ln590cast_fu_1694_p1 <= sext_ln590_fu_1620_p1(16 - 1 downto 0);
    sh_amt_fu_1612_p3 <= 
        add_ln590_fu_1600_p2 when (icmp_ln590_fu_1594_p2(0) = '1') else 
        sub_ln590_fu_1606_p2;
    shl_ln613_fu_1698_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln592_fu_1630_p1),to_integer(unsigned('0' & sext_ln590cast_fu_1694_p1(16-1 downto 0)))));
    shl_ln952_fu_1100_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_fu_1054_p2(31-1 downto 0)))));
    shl_ln962_fu_1168_p2 <= std_logic_vector(shift_left(unsigned(zext_ln960_fu_1076_p1),to_integer(unsigned('0' & zext_ln962_fu_1164_p1(31-1 downto 0)))));
    sub_ln590_fu_1606_p2 <= std_logic_vector(unsigned(ap_const_lv12_8) - unsigned(F2_fu_1588_p2));
    sub_ln947_fu_1048_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_fu_1036_p3));
    sub_ln950_fu_1084_p2 <= std_logic_vector(unsigned(ap_const_lv6_16) - unsigned(trunc_ln950_fu_1080_p1));
    sub_ln962_fu_1158_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln947_fu_1048_p2));
    sub_ln969_fu_1246_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FE) - unsigned(trunc_ln946_fu_1044_p1));
    tmp_136_fu_756_p4 <= p_Val2_150_fu_354(30 downto 1);
    tmp_137_fu_836_p4 <= pre_result_V_11_fu_822_p2(21 downto 19);
    tmp_138_fu_862_p4 <= pre_result_V_11_fu_822_p2(12 downto 11);
    tmp_139_fu_888_p4 <= pre_result_V_11_fu_822_p2(3 downto 2);
    tmp_140_fu_948_p4 <= pre_result_V_12_fu_942_p2(16 downto 14);
    tmp_141_fu_958_p4 <= pre_result_V_12_fu_942_p2(12 downto 7);
    tmp_142_fu_968_p4 <= pre_result_V_12_fu_942_p2(3 downto 2);
    tmp_439_fu_744_p3 <= p_Val2_s_fu_346(31 downto 31);
    tmp_440_fu_828_p3 <= pre_result_V_11_fu_822_p2(24 downto 24);
    tmp_441_fu_846_p3 <= pre_result_V_11_fu_822_p2(17 downto 17);
    tmp_442_fu_854_p3 <= pre_result_V_11_fu_822_p2(14 downto 14);
    tmp_443_fu_872_p3 <= pre_result_V_11_fu_822_p2(7 downto 7);
    tmp_444_fu_880_p3 <= pre_result_V_11_fu_822_p2(5 downto 5);
    tmp_445_fu_1060_p4 <= lsb_index_fu_1054_p2(31 downto 1);
    tmp_446_fu_1124_p3 <= lsb_index_fu_1054_p2(31 downto 31);
    tmp_450_fu_1654_p3 <= ireg_fu_1523_p1(63 downto 63);
    tmp_451_fu_1678_p4 <= sh_amt_fu_1612_p3(11 downto 4);
    tmp_V_fu_766_p3 <= (tmp_439_fu_744_p3 & tmp_136_fu_756_p4);
    tmp_fu_1322_p4 <= bitcast_ln443_fu_1319_p1(62 downto 52);
    tmp_i_fu_1266_p3 <= (ap_const_lv1_0 & select_ln968_fu_1258_p3);
    tmp_uniform_fu_1290_p3 <= 
        ap_const_lv64_0 when (icmp_ln938_fu_1020_p2(0) = '1') else 
        bitcast_ln746_fu_1286_p1;
    trunc_ln1542_fu_898_p1 <= pre_result_V_11_fu_822_p2(1 - 1 downto 0);
    trunc_ln229_fu_666_p1 <= ap_sig_allocacmp_j_4(1 - 1 downto 0);
    trunc_ln443_fu_1332_p1 <= bitcast_ln443_fu_1319_p1(52 - 1 downto 0);
    trunc_ln564_fu_1526_p1 <= ireg_fu_1523_p1(63 - 1 downto 0);
    trunc_ln574_fu_1552_p1 <= ireg_fu_1523_p1(52 - 1 downto 0);
    trunc_ln592_fu_1630_p1 <= man_V_497_fu_1574_p3(16 - 1 downto 0);
    trunc_ln595_fu_1650_p1 <= ashr_ln595_fu_1644_p2(16 - 1 downto 0);
    trunc_ln946_fu_1044_p1 <= l_fu_1036_p3(11 - 1 downto 0);
    trunc_ln950_fu_1080_p1 <= sub_ln947_fu_1048_p2(6 - 1 downto 0);
    xor_ln1544_fu_786_p2 <= (select_ln724_fu_778_p3 xor lhs_V_fu_342);
    xor_ln456_fu_1369_p2 <= (bitcast_ln456_fu_1366_p1 xor ap_const_lv64_8000000000000000);
    xor_ln541_fu_1499_p2 <= (bitcast_ln541_fu_1495_p1 xor ap_const_lv64_8000000000000000);
    xor_ln580_fu_1712_p2 <= (icmp_ln580_fu_1582_p2 xor ap_const_lv1_1);
    xor_ln591_fu_1738_p2 <= (or_ln591_fu_1732_p2 xor ap_const_lv1_1);
    xor_ln952_fu_1132_p2 <= (tmp_446_fu_1124_p3 xor ap_const_lv1_1);
    z_9_fu_1390_p3 <= 
        grp_fu_608_p2 when (or_ln443_4_reg_1920_pp0_iter15_reg(0) = '1') else 
        z_reg_1939_pp0_iter15_reg;
    zext_ln1043_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_fu_766_p3),32));
    zext_ln1691_4_fu_1010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_13_fu_1000_p4),32));
    zext_ln1691_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_808_p4),32));
    zext_ln501_fu_1548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_1538_p4),12));
    zext_ln578_fu_1564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_282_fu_1556_p3),54));
    zext_ln587_6_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_11_fu_698_p4),64));
    zext_ln587_7_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_12_reg_1844),64));
    zext_ln587_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_s_fu_688_p4),64));
    zext_ln595_fu_1640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln590_fu_1620_p1),54));
    zext_ln950_fu_1090_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln950_fu_1084_p2),32));
    zext_ln960_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pre_result_V_fu_1014_p2),64));
    zext_ln961_fu_1188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln961_fu_1182_p2),64));
    zext_ln962_fu_1164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln962_fu_1158_p2),64));
    zext_ln964_fu_1214_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln961_fu_1198_p3),64));
    zext_ln965_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_fu_1224_p4),64));
end behav;
