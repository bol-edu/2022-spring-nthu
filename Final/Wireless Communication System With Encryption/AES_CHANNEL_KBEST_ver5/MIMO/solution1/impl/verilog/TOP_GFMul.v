// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module TOP_GFMul (
        ap_ready,
        n,
        s,
        ap_return
);


output   ap_ready;
input  [3:0] n;
input  [31:0] s;
output  [31:0] ap_return;

wire   [6:0] trunc_ln224_fu_50_p1;
wire   [7:0] result_3_fu_54_p3;
wire   [7:0] result_6_fu_70_p2;
wire   [0:0] tmp_fu_62_p3;
wire   [31:0] zext_ln224_fu_76_p1;
wire   [31:0] result_fu_44_p2;
wire   [31:0] result_10_fu_80_p3;
wire   [6:0] trunc_ln224_1_fu_94_p1;
wire   [7:0] result_7_fu_98_p3;
wire   [7:0] result_25_fu_114_p2;
wire   [0:0] tmp_403_fu_106_p3;
wire   [31:0] zext_ln224_1_fu_120_p1;
wire   [31:0] result_24_fu_88_p2;
wire   [31:0] result_26_fu_124_p3;
wire   [6:0] trunc_ln224_2_fu_138_p1;
wire   [7:0] result_1_fu_142_p3;
wire   [7:0] result_28_fu_158_p2;
wire   [0:0] tmp_404_fu_150_p3;
wire   [31:0] zext_ln224_2_fu_164_p1;
wire   [31:0] result_27_fu_132_p2;
wire   [31:0] result_29_fu_168_p3;
wire   [31:0] xor_ln264_fu_176_p2;
wire   [31:0] result_31_fu_188_p2;
wire   [31:0] result_32_fu_194_p2;
wire   [0:0] icmp_ln271_fu_212_p2;
wire   [0:0] icmp_ln271_1_fu_226_p2;
wire   [31:0] result_35_fu_218_p3;
wire   [0:0] icmp_ln271_2_fu_240_p2;
wire   [31:0] result_36_fu_232_p3;
wire   [0:0] icmp_ln271_3_fu_254_p2;
wire   [31:0] result_33_fu_200_p2;
wire   [31:0] result_37_fu_246_p3;
wire   [0:0] icmp_ln271_4_fu_268_p2;
wire   [31:0] result_34_fu_206_p2;
wire   [31:0] result_38_fu_260_p3;
wire   [0:0] icmp_ln271_5_fu_282_p2;
wire   [31:0] result_30_fu_182_p2;
wire   [31:0] result_39_fu_274_p3;
wire    ap_ce_reg;

assign ap_ready = 1'b1;

assign ap_return = ((icmp_ln271_5_fu_282_p2[0:0] == 1'b1) ? result_30_fu_182_p2 : result_39_fu_274_p3);

assign icmp_ln271_1_fu_226_p2 = ((n == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln271_2_fu_240_p2 = ((n == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln271_3_fu_254_p2 = ((n == 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln271_4_fu_268_p2 = ((n == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln271_5_fu_282_p2 = ((n == 4'd14) ? 1'b1 : 1'b0);

assign icmp_ln271_fu_212_p2 = ((n == 4'd2) ? 1'b1 : 1'b0);

assign result_10_fu_80_p3 = ((tmp_fu_62_p3[0:0] == 1'b1) ? zext_ln224_fu_76_p1 : result_fu_44_p2);

assign result_1_fu_142_p3 = {{trunc_ln224_2_fu_138_p1}, {1'd0}};

assign result_24_fu_88_p2 = result_10_fu_80_p3 << 32'd1;

assign result_25_fu_114_p2 = (result_7_fu_98_p3 ^ 8'd27);

assign result_26_fu_124_p3 = ((tmp_403_fu_106_p3[0:0] == 1'b1) ? zext_ln224_1_fu_120_p1 : result_24_fu_88_p2);

assign result_27_fu_132_p2 = result_26_fu_124_p3 << 32'd1;

assign result_28_fu_158_p2 = (result_1_fu_142_p3 ^ 8'd27);

assign result_29_fu_168_p3 = ((tmp_404_fu_150_p3[0:0] == 1'b1) ? zext_ln224_2_fu_164_p1 : result_27_fu_132_p2);

assign result_30_fu_182_p2 = (xor_ln264_fu_176_p2 ^ result_26_fu_124_p3);

assign result_31_fu_188_p2 = (s ^ result_10_fu_80_p3);

assign result_32_fu_194_p2 = (s ^ result_29_fu_168_p3);

assign result_33_fu_200_p2 = (result_31_fu_188_p2 ^ result_29_fu_168_p3);

assign result_34_fu_206_p2 = (result_32_fu_194_p2 ^ result_26_fu_124_p3);

assign result_35_fu_218_p3 = ((icmp_ln271_fu_212_p2[0:0] == 1'b1) ? result_10_fu_80_p3 : s);

assign result_36_fu_232_p3 = ((icmp_ln271_1_fu_226_p2[0:0] == 1'b1) ? result_31_fu_188_p2 : result_35_fu_218_p3);

assign result_37_fu_246_p3 = ((icmp_ln271_2_fu_240_p2[0:0] == 1'b1) ? result_32_fu_194_p2 : result_36_fu_232_p3);

assign result_38_fu_260_p3 = ((icmp_ln271_3_fu_254_p2[0:0] == 1'b1) ? result_33_fu_200_p2 : result_37_fu_246_p3);

assign result_39_fu_274_p3 = ((icmp_ln271_4_fu_268_p2[0:0] == 1'b1) ? result_34_fu_206_p2 : result_38_fu_260_p3);

assign result_3_fu_54_p3 = {{trunc_ln224_fu_50_p1}, {1'd0}};

assign result_6_fu_70_p2 = (result_3_fu_54_p3 ^ 8'd27);

assign result_7_fu_98_p3 = {{trunc_ln224_1_fu_94_p1}, {1'd0}};

assign result_fu_44_p2 = s << 32'd1;

assign tmp_403_fu_106_p3 = result_10_fu_80_p3[32'd7];

assign tmp_404_fu_150_p3 = result_26_fu_124_p3[32'd7];

assign tmp_fu_62_p3 = s[32'd7];

assign trunc_ln224_1_fu_94_p1 = result_10_fu_80_p3[6:0];

assign trunc_ln224_2_fu_138_p1 = result_26_fu_124_p3[6:0];

assign trunc_ln224_fu_50_p1 = s[6:0];

assign xor_ln264_fu_176_p2 = (result_29_fu_168_p3 ^ result_10_fu_80_p3);

assign zext_ln224_1_fu_120_p1 = result_25_fu_114_p2;

assign zext_ln224_2_fu_164_p1 = result_28_fu_158_p2;

assign zext_ln224_fu_76_p1 = result_6_fu_70_p2;

endmodule //TOP_GFMul
