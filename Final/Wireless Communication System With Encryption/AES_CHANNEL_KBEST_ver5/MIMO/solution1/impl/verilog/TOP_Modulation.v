// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module TOP_Modulation (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_data_dout,
        in_data_empty_n,
        in_data_read,
        xr_din,
        xr_full_n,
        xr_write,
        xi_din,
        xi_full_n,
        xi_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] in_data_dout;
input   in_data_empty_n;
output   in_data_read;
output  [15:0] xr_din;
input   xr_full_n;
output   xr_write;
output  [15:0] xi_din;
input   xi_full_n;
output   xi_write;
output   start_out;
output   start_write;

reg ap_idle;
reg in_data_read;
reg[15:0] xr_din;
reg xr_write;
reg[15:0] xi_din;
reg xi_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    internal_ap_ready;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] icmp_ln15_reg_178;
reg    ap_block_state2_pp0_stage1_iter0;
reg   [0:0] tmp_405_reg_206;
reg   [0:0] tmp_406_reg_210;
reg    ap_block_state6_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage3;
reg   [0:0] tmp_401_reg_190;
reg    ap_predicate_op55_write_state4;
reg    ap_predicate_op57_write_state4;
reg   [0:0] tmp_402_reg_194;
reg    ap_predicate_op59_write_state4;
reg    ap_predicate_op61_write_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_subdone;
reg    in_data_blk_n;
wire    ap_block_pp0_stage1;
reg    xi_blk_n;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] tmp_reg_186;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_404_reg_202;
reg    xr_blk_n;
reg   [0:0] trunc_ln223_reg_182;
reg   [0:0] tmp_403_reg_198;
wire   [0:0] icmp_ln15_fu_94_p2;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] trunc_ln223_fu_111_p1;
reg    ap_block_pp0_stage1_11001;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [4:0] data_idx_fu_58;
wire   [4:0] data_idx_6_fu_100_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_data_idx_5;
reg    ap_predicate_op47_write_state3;
reg    ap_predicate_op49_write_state3;
reg    ap_predicate_op51_write_state3;
reg    ap_predicate_op53_write_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp0_stage3_11001;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_260;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

TOP_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_260)) begin
        if ((icmp_ln15_fu_94_p2 == 1'd0)) begin
            data_idx_fu_58 <= data_idx_6_fu_100_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            data_idx_fu_58 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln15_reg_178 <= icmp_ln15_fu_94_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln15_reg_178 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_401_reg_190 <= in_data_dout[32'd2];
        tmp_402_reg_194 <= in_data_dout[32'd3];
        tmp_403_reg_198 <= in_data_dout[32'd4];
        tmp_404_reg_202 <= in_data_dout[32'd5];
        tmp_405_reg_206 <= in_data_dout[32'd6];
        tmp_406_reg_210 <= in_data_dout[32'd7];
        tmp_reg_186 <= in_data_dout[32'd1];
        trunc_ln223_reg_182 <= trunc_ln223_fu_111_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln15_reg_178 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_data_idx_5 = 5'd0;
    end else begin
        ap_sig_allocacmp_data_idx_5 = data_idx_fu_58;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (icmp_ln15_reg_178 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_data_blk_n = in_data_empty_n;
    end else begin
        in_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln15_reg_178 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_data_read = 1'b1;
    end else begin
        in_data_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_404_reg_202 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_404_reg_202 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op61_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op59_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln15_reg_178 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_reg_186 == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln15_reg_178 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_reg_186 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_406_reg_210 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_406_reg_210 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        xi_blk_n = xi_full_n;
    end else begin
        xi_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_01001) & (tmp_406_reg_210 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_404_reg_202 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op61_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op53_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        xi_din = 16'd181;
    end else if ((((1'b0 == ap_block_pp0_stage1_01001) & (tmp_406_reg_210 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_404_reg_202 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op59_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op51_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        xi_din = 16'd65354;
    end else begin
        xi_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op61_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op59_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op53_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op51_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (tmp_406_reg_210 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (tmp_406_reg_210 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_404_reg_202 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_404_reg_202 == 1'd1)))) begin
        xi_write = 1'b1;
    end else begin
        xi_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_403_reg_198 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_403_reg_198 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op57_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op55_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln15_reg_178 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln223_reg_182 == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln15_reg_178 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln223_reg_182 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_405_reg_206 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_405_reg_206 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        xr_blk_n = xr_full_n;
    end else begin
        xr_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_01001) & (tmp_405_reg_206 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_403_reg_198 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op57_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op49_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        xr_din = 16'd181;
    end else if ((((1'b0 == ap_block_pp0_stage1_01001) & (tmp_405_reg_206 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_403_reg_198 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op55_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op47_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        xr_din = 16'd65354;
    end else begin
        xr_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op57_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op55_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op49_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op47_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (tmp_405_reg_206 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (tmp_405_reg_206 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_403_reg_198 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_403_reg_198 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        xr_write = 1'b1;
    end else begin
        xr_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((xi_full_n == 1'b0) & (tmp_404_reg_202 == 1'd0)) | ((xi_full_n == 1'b0) & (tmp_404_reg_202 == 1'd1)) | ((xr_full_n == 1'b0) & (tmp_403_reg_198 == 1'd0)) | ((xr_full_n == 1'b0) & (tmp_403_reg_198 == 1'd1)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((xi_full_n == 1'b0) & (tmp_404_reg_202 == 1'd0)) | ((xi_full_n == 1'b0) & (tmp_404_reg_202 == 1'd1)) | ((xr_full_n == 1'b0) & (tmp_403_reg_198 == 1'd0)) | ((xr_full_n == 1'b0) & (tmp_403_reg_198 == 1'd1)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((xi_full_n == 1'b0) & (tmp_404_reg_202 == 1'd0)) | ((xi_full_n == 1'b0) & (tmp_404_reg_202 == 1'd1)) | ((xr_full_n == 1'b0) & (tmp_403_reg_198 == 1'd0)) | ((xr_full_n == 1'b0) & (tmp_403_reg_198 == 1'd1)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_406_reg_210 == 1'd1) & (xi_full_n == 1'b0)) | ((tmp_406_reg_210 == 1'd0) & (xi_full_n == 1'b0)) | ((tmp_405_reg_206 == 1'd1) & (xr_full_n == 1'b0)) | ((tmp_405_reg_206 == 1'd0) & (xr_full_n == 1'b0)))) | ((icmp_ln15_reg_178 == 1'd0) & (in_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_406_reg_210 == 1'd1) & (xi_full_n == 1'b0)) | ((tmp_406_reg_210 == 1'd0) & (xi_full_n == 1'b0)) | ((tmp_405_reg_206 == 1'd1) & (xr_full_n == 1'b0)) | ((tmp_405_reg_206 == 1'd0) & (xr_full_n == 1'b0)))) | ((icmp_ln15_reg_178 == 1'd0) & (in_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_406_reg_210 == 1'd1) & (xi_full_n == 1'b0)) | ((tmp_406_reg_210 == 1'd0) & (xi_full_n == 1'b0)) | ((tmp_405_reg_206 == 1'd1) & (xr_full_n == 1'b0)) | ((tmp_405_reg_206 == 1'd0) & (xr_full_n == 1'b0)))) | ((icmp_ln15_reg_178 == 1'd0) & (in_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((xi_full_n == 1'b0) & (ap_predicate_op53_write_state3 == 1'b1)) | ((xi_full_n == 1'b0) & (ap_predicate_op51_write_state3 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op49_write_state3 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op47_write_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((xi_full_n == 1'b0) & (ap_predicate_op53_write_state3 == 1'b1)) | ((xi_full_n == 1'b0) & (ap_predicate_op51_write_state3 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op49_write_state3 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op47_write_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((xi_full_n == 1'b0) & (ap_predicate_op53_write_state3 == 1'b1)) | ((xi_full_n == 1'b0) & (ap_predicate_op51_write_state3 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op49_write_state3 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op47_write_state3 == 1'b1)))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((xi_full_n == 1'b0) & (ap_predicate_op61_write_state4 == 1'b1)) | ((xi_full_n == 1'b0) & (ap_predicate_op59_write_state4 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op57_write_state4 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op55_write_state4 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((xi_full_n == 1'b0) & (ap_predicate_op61_write_state4 == 1'b1)) | ((xi_full_n == 1'b0) & (ap_predicate_op59_write_state4 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op57_write_state4 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op55_write_state4 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((xi_full_n == 1'b0) & (ap_predicate_op61_write_state4 == 1'b1)) | ((xi_full_n == 1'b0) & (ap_predicate_op59_write_state4 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op57_write_state4 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op55_write_state4 == 1'b1))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((icmp_ln15_reg_178 == 1'd0) & (in_data_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = (((xi_full_n == 1'b0) & (ap_predicate_op53_write_state3 == 1'b1)) | ((xi_full_n == 1'b0) & (ap_predicate_op51_write_state3 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op49_write_state3 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op47_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = (((xi_full_n == 1'b0) & (ap_predicate_op61_write_state4 == 1'b1)) | ((xi_full_n == 1'b0) & (ap_predicate_op59_write_state4 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op57_write_state4 == 1'b1)) | ((xr_full_n == 1'b0) & (ap_predicate_op55_write_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = (((xi_full_n == 1'b0) & (tmp_404_reg_202 == 1'd0)) | ((xi_full_n == 1'b0) & (tmp_404_reg_202 == 1'd1)) | ((xr_full_n == 1'b0) & (tmp_403_reg_198 == 1'd0)) | ((xr_full_n == 1'b0) & (tmp_403_reg_198 == 1'd1)));
end

always @ (*) begin
    ap_block_state6_pp0_stage1_iter1 = (((tmp_406_reg_210 == 1'd1) & (xi_full_n == 1'b0)) | ((tmp_406_reg_210 == 1'd0) & (xi_full_n == 1'b0)) | ((tmp_405_reg_206 == 1'd1) & (xr_full_n == 1'b0)) | ((tmp_405_reg_206 == 1'd0) & (xr_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_260 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

always @ (*) begin
    ap_predicate_op47_write_state3 = ((icmp_ln15_reg_178 == 1'd0) & (trunc_ln223_reg_182 == 1'd0));
end

always @ (*) begin
    ap_predicate_op49_write_state3 = ((icmp_ln15_reg_178 == 1'd0) & (trunc_ln223_reg_182 == 1'd1));
end

always @ (*) begin
    ap_predicate_op51_write_state3 = ((icmp_ln15_reg_178 == 1'd0) & (tmp_reg_186 == 1'd0));
end

always @ (*) begin
    ap_predicate_op53_write_state3 = ((icmp_ln15_reg_178 == 1'd0) & (tmp_reg_186 == 1'd1));
end

always @ (*) begin
    ap_predicate_op55_write_state4 = ((icmp_ln15_reg_178 == 1'd0) & (tmp_401_reg_190 == 1'd0));
end

always @ (*) begin
    ap_predicate_op57_write_state4 = ((icmp_ln15_reg_178 == 1'd0) & (tmp_401_reg_190 == 1'd1));
end

always @ (*) begin
    ap_predicate_op59_write_state4 = ((icmp_ln15_reg_178 == 1'd0) & (tmp_402_reg_194 == 1'd0));
end

always @ (*) begin
    ap_predicate_op61_write_state4 = ((icmp_ln15_reg_178 == 1'd0) & (tmp_402_reg_194 == 1'd1));
end

assign ap_ready = internal_ap_ready;

assign data_idx_6_fu_100_p2 = (ap_sig_allocacmp_data_idx_5 + 5'd1);

assign icmp_ln15_fu_94_p2 = ((ap_sig_allocacmp_data_idx_5 == 5'd16) ? 1'b1 : 1'b0);

assign start_out = real_start;

assign trunc_ln223_fu_111_p1 = in_data_dout[0:0];

endmodule //TOP_Modulation
