// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module TOP_matrix_mult (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        Q_dout,
        Q_empty_n,
        Q_read,
        noise_out_dout,
        noise_out_empty_n,
        noise_out_read,
        MULQ_out_din,
        MULQ_out_full_n,
        MULQ_out_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] Q_dout;
input   Q_empty_n;
output   Q_read;
input  [15:0] noise_out_dout;
input   noise_out_empty_n;
output   noise_out_read;
output  [15:0] MULQ_out_din;
input   MULQ_out_full_n;
output   MULQ_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Q_read;
reg noise_out_read;
reg MULQ_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] Q_TEMP_V_address0;
reg    Q_TEMP_V_ce0;
reg    Q_TEMP_V_we0;
wire   [15:0] Q_TEMP_V_q0;
reg    Q_TEMP_V_ce1;
wire   [15:0] Q_TEMP_V_q1;
reg    Q_TEMP_V_ce2;
wire   [15:0] Q_TEMP_V_q2;
reg    Q_TEMP_V_ce3;
wire   [15:0] Q_TEMP_V_q3;
reg    Q_TEMP_V_ce4;
wire   [15:0] Q_TEMP_V_q4;
reg    Q_TEMP_V_ce5;
wire   [15:0] Q_TEMP_V_q5;
reg    Q_TEMP_V_ce6;
wire   [15:0] Q_TEMP_V_q6;
reg    Q_TEMP_V_ce7;
wire   [15:0] Q_TEMP_V_q7;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_start;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_done;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_idle;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_ready;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_read;
wire   [5:0] grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_TEMP_V_address0;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_TEMP_V_ce0;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_TEMP_V_we0;
wire   [15:0] grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_TEMP_V_d0;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_start;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_done;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_idle;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_ready;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_noise_out_read;
wire   [15:0] grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_MULQ_out_din;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_MULQ_out_write;
wire   [5:0] grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address0;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce0;
wire   [5:0] grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address1;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce1;
wire   [5:0] grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address2;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce2;
wire   [5:0] grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address3;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce3;
wire   [5:0] grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address4;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce4;
wire   [5:0] grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address5;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce5;
wire   [5:0] grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address6;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce6;
wire   [5:0] grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address7;
wire    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce7;
reg    grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_start_reg;
reg    ap_block_state1_ignore_call14;
wire    ap_CS_fsm_state2;
reg    grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg   [4:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_start_reg = 1'b0;
#0 grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_start_reg = 1'b0;
end

TOP_matrix_mult_Q_TEMP_V_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
Q_TEMP_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Q_TEMP_V_address0),
    .ce0(Q_TEMP_V_ce0),
    .we0(Q_TEMP_V_we0),
    .d0(grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_TEMP_V_d0),
    .q0(Q_TEMP_V_q0),
    .address1(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address1),
    .ce1(Q_TEMP_V_ce1),
    .q1(Q_TEMP_V_q1),
    .address2(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address2),
    .ce2(Q_TEMP_V_ce2),
    .q2(Q_TEMP_V_q2),
    .address3(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address3),
    .ce3(Q_TEMP_V_ce3),
    .q3(Q_TEMP_V_q3),
    .address4(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address4),
    .ce4(Q_TEMP_V_ce4),
    .q4(Q_TEMP_V_q4),
    .address5(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address5),
    .ce5(Q_TEMP_V_ce5),
    .q5(Q_TEMP_V_q5),
    .address6(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address6),
    .ce6(Q_TEMP_V_ce6),
    .q6(Q_TEMP_V_q6),
    .address7(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address7),
    .ce7(Q_TEMP_V_ce7),
    .q7(Q_TEMP_V_q7)
);

TOP_matrix_mult_Pipeline_VITIS_LOOP_85_1 grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_start),
    .ap_done(grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_done),
    .ap_idle(grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_idle),
    .ap_ready(grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_ready),
    .Q_dout(Q_dout),
    .Q_empty_n(Q_empty_n),
    .Q_read(grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_read),
    .Q_TEMP_V_address0(grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_TEMP_V_address0),
    .Q_TEMP_V_ce0(grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_TEMP_V_ce0),
    .Q_TEMP_V_we0(grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_TEMP_V_we0),
    .Q_TEMP_V_d0(grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_TEMP_V_d0)
);

TOP_matrix_mult_Pipeline_VITIS_LOOP_91_2 grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_start),
    .ap_done(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_done),
    .ap_idle(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_idle),
    .ap_ready(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_ready),
    .noise_out_dout(noise_out_dout),
    .noise_out_empty_n(noise_out_empty_n),
    .noise_out_read(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_noise_out_read),
    .MULQ_out_din(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_MULQ_out_din),
    .MULQ_out_full_n(MULQ_out_full_n),
    .MULQ_out_write(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_MULQ_out_write),
    .Q_TEMP_V_address0(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address0),
    .Q_TEMP_V_ce0(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce0),
    .Q_TEMP_V_q0(Q_TEMP_V_q0),
    .Q_TEMP_V_address1(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address1),
    .Q_TEMP_V_ce1(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce1),
    .Q_TEMP_V_q1(Q_TEMP_V_q1),
    .Q_TEMP_V_address2(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address2),
    .Q_TEMP_V_ce2(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce2),
    .Q_TEMP_V_q2(Q_TEMP_V_q2),
    .Q_TEMP_V_address3(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address3),
    .Q_TEMP_V_ce3(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce3),
    .Q_TEMP_V_q3(Q_TEMP_V_q3),
    .Q_TEMP_V_address4(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address4),
    .Q_TEMP_V_ce4(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce4),
    .Q_TEMP_V_q4(Q_TEMP_V_q4),
    .Q_TEMP_V_address5(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address5),
    .Q_TEMP_V_ce5(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce5),
    .Q_TEMP_V_q5(Q_TEMP_V_q5),
    .Q_TEMP_V_address6(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address6),
    .Q_TEMP_V_ce6(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce6),
    .Q_TEMP_V_q6(Q_TEMP_V_q6),
    .Q_TEMP_V_address7(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address7),
    .Q_TEMP_V_ce7(grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce7),
    .Q_TEMP_V_q7(Q_TEMP_V_q7)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_done == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_start_reg <= 1'b1;
        end else if ((grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_ready == 1'b1)) begin
            grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_start_reg <= 1'b1;
        end else if ((grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_ready == 1'b1)) begin
            grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        MULQ_out_write = grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_MULQ_out_write;
    end else begin
        MULQ_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Q_TEMP_V_address0 = grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        Q_TEMP_V_address0 = grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_TEMP_V_address0;
    end else begin
        Q_TEMP_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Q_TEMP_V_ce0 = grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        Q_TEMP_V_ce0 = grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_TEMP_V_ce0;
    end else begin
        Q_TEMP_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Q_TEMP_V_ce1 = grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce1;
    end else begin
        Q_TEMP_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Q_TEMP_V_ce2 = grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce2;
    end else begin
        Q_TEMP_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Q_TEMP_V_ce3 = grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce3;
    end else begin
        Q_TEMP_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Q_TEMP_V_ce4 = grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce4;
    end else begin
        Q_TEMP_V_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Q_TEMP_V_ce5 = grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce5;
    end else begin
        Q_TEMP_V_ce5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Q_TEMP_V_ce6 = grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce6;
    end else begin
        Q_TEMP_V_ce6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Q_TEMP_V_ce7 = grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_Q_TEMP_V_ce7;
    end else begin
        Q_TEMP_V_ce7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        Q_TEMP_V_we0 = grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_TEMP_V_we0;
    end else begin
        Q_TEMP_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        Q_read = grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_Q_read;
    end else begin
        Q_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        noise_out_read = grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_noise_out_read;
    end else begin
        noise_out_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign MULQ_out_din = grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_MULQ_out_din;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call14 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_start = grp_matrix_mult_Pipeline_VITIS_LOOP_85_1_fu_26_ap_start_reg;

assign grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_start = grp_matrix_mult_Pipeline_VITIS_LOOP_91_2_fu_34_ap_start_reg;

endmodule //TOP_matrix_mult
