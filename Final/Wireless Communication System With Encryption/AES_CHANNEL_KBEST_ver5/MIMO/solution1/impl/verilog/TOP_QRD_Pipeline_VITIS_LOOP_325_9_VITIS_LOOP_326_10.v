// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module TOP_QRD_Pipeline_VITIS_LOOP_325_9_VITIS_LOOP_326_10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Q_din,
        Q_full_n,
        Q_write,
        conv_i_i_i1582975_lcssa1488,
        conv_i_i_i15491263_lcssa1632,
        conv_i_i_i15161295_lcssa1648,
        conv_i_i_i14831327_lcssa1664,
        conv_i_i_i14501359_lcssa1680,
        conv_i_i_i14171391_lcssa1696,
        conv_i_i_i13841423_lcssa1712,
        conv_i_i_i13511455_lcssa1728,
        conv_i_i_i1582979_lcssa1490,
        conv_i_i_i15491267_lcssa1634,
        conv_i_i_i15161299_lcssa1650,
        conv_i_i_i14831331_lcssa1666,
        conv_i_i_i14501363_lcssa1682,
        conv_i_i_i14171395_lcssa1698,
        conv_i_i_i13841427_lcssa1714,
        conv_i_i_i13511459_lcssa1730,
        conv_i_i_i1582983_lcssa1492,
        conv_i_i_i15491271_lcssa1636,
        conv_i_i_i15161303_lcssa1652,
        conv_i_i_i14831335_lcssa1668,
        conv_i_i_i14501367_lcssa1684,
        conv_i_i_i14171399_lcssa1700,
        conv_i_i_i13841431_lcssa1716,
        conv_i_i_i13511463_lcssa1732,
        conv_i_i_i1582987_lcssa1494,
        conv_i_i_i15491275_lcssa1638,
        conv_i_i_i15161307_lcssa1654,
        conv_i_i_i14831339_lcssa1670,
        conv_i_i_i14501371_lcssa1686,
        conv_i_i_i14171403_lcssa1702,
        conv_i_i_i13841435_lcssa1718,
        conv_i_i_i13511467_lcssa1734,
        conv_i_i_i1582991_lcssa1496,
        conv_i_i_i15491279_lcssa1640,
        conv_i_i_i15161311_lcssa1656,
        conv_i_i_i14831343_lcssa1672,
        conv_i_i_i14501375_lcssa1688,
        conv_i_i_i14171407_lcssa1704,
        conv_i_i_i13841439_lcssa1720,
        conv_i_i_i13511471_lcssa1736,
        conv_i_i_i1582995_lcssa1498,
        conv_i_i_i15491283_lcssa1642,
        conv_i_i_i15161315_lcssa1658,
        conv_i_i_i14831347_lcssa1674,
        conv_i_i_i14501379_lcssa1690,
        conv_i_i_i14171411_lcssa1706,
        conv_i_i_i13841443_lcssa1722,
        conv_i_i_i13511475_lcssa1738,
        conv_i_i_i1582999_lcssa1500,
        conv_i_i_i15491287_lcssa1644,
        conv_i_i_i15161319_lcssa1660,
        conv_i_i_i14831351_lcssa1676,
        conv_i_i_i14501383_lcssa1692,
        conv_i_i_i14171415_lcssa1708,
        conv_i_i_i13841447_lcssa1724,
        conv_i_i_i13511479_lcssa1740,
        conv_i_i_i15821003_lcssa1502,
        conv_i_i_i15491291_lcssa1646,
        conv_i_i_i15161323_lcssa1662,
        conv_i_i_i14831355_lcssa1678,
        conv_i_i_i14501387_lcssa1694,
        conv_i_i_i14171419_lcssa1710,
        conv_i_i_i13841451_lcssa1726,
        conv_i_i_i13511483_lcssa1742,
        Y_V_load,
        Y_V_1_load,
        Y_V_2_load,
        Y_V_3_load,
        Y_V_4_load,
        Y_V_5_load,
        Y_V_6_load,
        Y_V_7_load,
        Y_V_load_1,
        Y_V_1_load_1,
        Y_V_2_load_1,
        Y_V_3_load_1,
        Y_V_4_load_1,
        Y_V_5_load_1,
        Y_V_6_load_1,
        Y_V_7_load_1,
        Y_V_load_2,
        Y_V_1_load_2,
        Y_V_2_load_2,
        Y_V_3_load_2,
        Y_V_4_load_2,
        Y_V_5_load_2,
        Y_V_6_load_2,
        Y_V_7_load_2,
        Y_V_load_3,
        Y_V_1_load_3,
        Y_V_2_load_3,
        Y_V_3_load_3,
        Y_V_4_load_3,
        Y_V_5_load_3,
        Y_V_6_load_3,
        Y_V_7_load_3,
        Y_V_load_4,
        Y_V_1_load_4,
        Y_V_2_load_4,
        Y_V_3_load_4,
        Y_V_4_load_4,
        Y_V_5_load_4,
        Y_V_6_load_4,
        Y_V_7_load_4,
        Y_V_load_5,
        Y_V_1_load_5,
        Y_V_2_load_5,
        Y_V_3_load_5,
        Y_V_4_load_5,
        Y_V_5_load_5,
        Y_V_6_load_5,
        Y_V_7_load_5,
        Y_V_load_6,
        Y_V_1_load_6,
        Y_V_2_load_6,
        Y_V_3_load_6,
        Y_V_4_load_6,
        Y_V_5_load_6,
        Y_V_6_load_6,
        Y_V_7_load_6,
        Y_V_load_7,
        Y_V_1_load_7,
        Y_V_2_load_7,
        Y_V_3_load_7,
        Y_V_4_load_7,
        Y_V_5_load_7,
        Y_V_6_load_7,
        Y_V_7_load_7
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] Q_din;
input   Q_full_n;
output   Q_write;
input  [15:0] conv_i_i_i1582975_lcssa1488;
input  [15:0] conv_i_i_i15491263_lcssa1632;
input  [15:0] conv_i_i_i15161295_lcssa1648;
input  [15:0] conv_i_i_i14831327_lcssa1664;
input  [15:0] conv_i_i_i14501359_lcssa1680;
input  [15:0] conv_i_i_i14171391_lcssa1696;
input  [15:0] conv_i_i_i13841423_lcssa1712;
input  [15:0] conv_i_i_i13511455_lcssa1728;
input  [15:0] conv_i_i_i1582979_lcssa1490;
input  [15:0] conv_i_i_i15491267_lcssa1634;
input  [15:0] conv_i_i_i15161299_lcssa1650;
input  [15:0] conv_i_i_i14831331_lcssa1666;
input  [15:0] conv_i_i_i14501363_lcssa1682;
input  [15:0] conv_i_i_i14171395_lcssa1698;
input  [15:0] conv_i_i_i13841427_lcssa1714;
input  [15:0] conv_i_i_i13511459_lcssa1730;
input  [15:0] conv_i_i_i1582983_lcssa1492;
input  [15:0] conv_i_i_i15491271_lcssa1636;
input  [15:0] conv_i_i_i15161303_lcssa1652;
input  [15:0] conv_i_i_i14831335_lcssa1668;
input  [15:0] conv_i_i_i14501367_lcssa1684;
input  [15:0] conv_i_i_i14171399_lcssa1700;
input  [15:0] conv_i_i_i13841431_lcssa1716;
input  [15:0] conv_i_i_i13511463_lcssa1732;
input  [15:0] conv_i_i_i1582987_lcssa1494;
input  [15:0] conv_i_i_i15491275_lcssa1638;
input  [15:0] conv_i_i_i15161307_lcssa1654;
input  [15:0] conv_i_i_i14831339_lcssa1670;
input  [15:0] conv_i_i_i14501371_lcssa1686;
input  [15:0] conv_i_i_i14171403_lcssa1702;
input  [15:0] conv_i_i_i13841435_lcssa1718;
input  [15:0] conv_i_i_i13511467_lcssa1734;
input  [15:0] conv_i_i_i1582991_lcssa1496;
input  [15:0] conv_i_i_i15491279_lcssa1640;
input  [15:0] conv_i_i_i15161311_lcssa1656;
input  [15:0] conv_i_i_i14831343_lcssa1672;
input  [15:0] conv_i_i_i14501375_lcssa1688;
input  [15:0] conv_i_i_i14171407_lcssa1704;
input  [15:0] conv_i_i_i13841439_lcssa1720;
input  [15:0] conv_i_i_i13511471_lcssa1736;
input  [15:0] conv_i_i_i1582995_lcssa1498;
input  [15:0] conv_i_i_i15491283_lcssa1642;
input  [15:0] conv_i_i_i15161315_lcssa1658;
input  [15:0] conv_i_i_i14831347_lcssa1674;
input  [15:0] conv_i_i_i14501379_lcssa1690;
input  [15:0] conv_i_i_i14171411_lcssa1706;
input  [15:0] conv_i_i_i13841443_lcssa1722;
input  [15:0] conv_i_i_i13511475_lcssa1738;
input  [15:0] conv_i_i_i1582999_lcssa1500;
input  [15:0] conv_i_i_i15491287_lcssa1644;
input  [15:0] conv_i_i_i15161319_lcssa1660;
input  [15:0] conv_i_i_i14831351_lcssa1676;
input  [15:0] conv_i_i_i14501383_lcssa1692;
input  [15:0] conv_i_i_i14171415_lcssa1708;
input  [15:0] conv_i_i_i13841447_lcssa1724;
input  [15:0] conv_i_i_i13511479_lcssa1740;
input  [15:0] conv_i_i_i15821003_lcssa1502;
input  [15:0] conv_i_i_i15491291_lcssa1646;
input  [15:0] conv_i_i_i15161323_lcssa1662;
input  [15:0] conv_i_i_i14831355_lcssa1678;
input  [15:0] conv_i_i_i14501387_lcssa1694;
input  [15:0] conv_i_i_i14171419_lcssa1710;
input  [15:0] conv_i_i_i13841451_lcssa1726;
input  [15:0] conv_i_i_i13511483_lcssa1742;
input  [15:0] Y_V_load;
input  [15:0] Y_V_1_load;
input  [15:0] Y_V_2_load;
input  [15:0] Y_V_3_load;
input  [15:0] Y_V_4_load;
input  [15:0] Y_V_5_load;
input  [15:0] Y_V_6_load;
input  [15:0] Y_V_7_load;
input  [15:0] Y_V_load_1;
input  [15:0] Y_V_1_load_1;
input  [15:0] Y_V_2_load_1;
input  [15:0] Y_V_3_load_1;
input  [15:0] Y_V_4_load_1;
input  [15:0] Y_V_5_load_1;
input  [15:0] Y_V_6_load_1;
input  [15:0] Y_V_7_load_1;
input  [15:0] Y_V_load_2;
input  [15:0] Y_V_1_load_2;
input  [15:0] Y_V_2_load_2;
input  [15:0] Y_V_3_load_2;
input  [15:0] Y_V_4_load_2;
input  [15:0] Y_V_5_load_2;
input  [15:0] Y_V_6_load_2;
input  [15:0] Y_V_7_load_2;
input  [15:0] Y_V_load_3;
input  [15:0] Y_V_1_load_3;
input  [15:0] Y_V_2_load_3;
input  [15:0] Y_V_3_load_3;
input  [15:0] Y_V_4_load_3;
input  [15:0] Y_V_5_load_3;
input  [15:0] Y_V_6_load_3;
input  [15:0] Y_V_7_load_3;
input  [15:0] Y_V_load_4;
input  [15:0] Y_V_1_load_4;
input  [15:0] Y_V_2_load_4;
input  [15:0] Y_V_3_load_4;
input  [15:0] Y_V_4_load_4;
input  [15:0] Y_V_5_load_4;
input  [15:0] Y_V_6_load_4;
input  [15:0] Y_V_7_load_4;
input  [15:0] Y_V_load_5;
input  [15:0] Y_V_1_load_5;
input  [15:0] Y_V_2_load_5;
input  [15:0] Y_V_3_load_5;
input  [15:0] Y_V_4_load_5;
input  [15:0] Y_V_5_load_5;
input  [15:0] Y_V_6_load_5;
input  [15:0] Y_V_7_load_5;
input  [15:0] Y_V_load_6;
input  [15:0] Y_V_1_load_6;
input  [15:0] Y_V_2_load_6;
input  [15:0] Y_V_3_load_6;
input  [15:0] Y_V_4_load_6;
input  [15:0] Y_V_5_load_6;
input  [15:0] Y_V_6_load_6;
input  [15:0] Y_V_7_load_6;
input  [15:0] Y_V_load_7;
input  [15:0] Y_V_1_load_7;
input  [15:0] Y_V_2_load_7;
input  [15:0] Y_V_3_load_7;
input  [15:0] Y_V_4_load_7;
input  [15:0] Y_V_5_load_7;
input  [15:0] Y_V_6_load_7;
input  [15:0] Y_V_7_load_7;

reg ap_idle;
reg Q_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
reg    ap_block_state11_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln325_fu_1117_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    Q_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [3:0] select_ln118_fu_1147_p3;
reg   [3:0] select_ln118_reg_2258;
reg   [3:0] select_ln118_reg_2258_pp0_iter1_reg;
reg   [3:0] select_ln118_reg_2258_pp0_iter2_reg;
reg   [3:0] select_ln118_reg_2258_pp0_iter3_reg;
reg   [3:0] select_ln118_reg_2258_pp0_iter4_reg;
reg   [3:0] select_ln118_reg_2258_pp0_iter5_reg;
reg   [3:0] select_ln118_reg_2258_pp0_iter6_reg;
wire   [3:0] select_ln325_fu_1155_p3;
reg   [3:0] select_ln325_reg_2269;
reg   [3:0] select_ln325_reg_2269_pp0_iter1_reg;
reg   [3:0] select_ln325_reg_2269_pp0_iter2_reg;
reg   [3:0] select_ln325_reg_2269_pp0_iter3_reg;
reg   [3:0] select_ln325_reg_2269_pp0_iter4_reg;
reg   [3:0] select_ln325_reg_2269_pp0_iter5_reg;
reg   [3:0] select_ln325_reg_2269_pp0_iter6_reg;
reg   [3:0] j_fu_312;
wire   [3:0] add_ln326_fu_1215_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_load;
reg   [3:0] i_fu_316;
reg   [3:0] ap_sig_allocacmp_i_load;
reg   [6:0] indvar_flatten7_fu_320;
wire   [6:0] add_ln325_1_fu_1123_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten7_load;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln326_fu_1141_p2;
wire   [3:0] add_ln325_fu_1135_p2;
wire   [3:0] tmp_25_fu_1185_p9;
wire  signed [15:0] tmp_25_fu_1185_p10;
wire  signed [15:0] tmp_17_fu_1163_p10;
wire  signed [15:0] tmp_98_1_fu_1249_p10;
wire  signed [15:0] tmp_18_fu_1236_p10;
wire  signed [15:0] tmp_98_2_fu_1283_p10;
wire  signed [15:0] tmp_19_fu_1270_p10;
wire  signed [23:0] grp_fu_1603_p2;
wire   [15:0] tmp_s_fu_1317_p4;
wire  signed [15:0] tmp_98_3_fu_1334_p10;
wire  signed [15:0] tmp_20_fu_1304_p10;
wire  signed [23:0] tmp_119_fu_1368_p1;
wire   [23:0] grp_fu_1610_p3;
wire   [15:0] tmp_119_fu_1368_p4;
wire  signed [15:0] tmp_98_4_fu_1385_p10;
wire  signed [15:0] tmp_21_fu_1355_p10;
wire  signed [23:0] tmp_120_fu_1419_p1;
wire   [23:0] grp_fu_1619_p3;
wire   [15:0] tmp_120_fu_1419_p4;
wire  signed [15:0] tmp_98_5_fu_1436_p10;
wire  signed [15:0] tmp_22_fu_1406_p10;
wire  signed [23:0] tmp_121_fu_1470_p1;
wire   [23:0] grp_fu_1628_p3;
wire   [15:0] tmp_121_fu_1470_p4;
wire  signed [15:0] tmp_98_6_fu_1487_p10;
wire  signed [15:0] tmp_23_fu_1457_p10;
wire  signed [23:0] tmp_122_fu_1521_p1;
wire   [23:0] grp_fu_1637_p3;
wire   [15:0] tmp_122_fu_1521_p4;
wire  signed [15:0] tmp_98_7_fu_1538_p10;
wire  signed [15:0] tmp_24_fu_1508_p10;
wire  signed [23:0] tmp_123_fu_1559_p1;
wire   [23:0] grp_fu_1646_p3;
wire   [15:0] tmp_123_fu_1559_p4;
wire  signed [23:0] tmp_124_fu_1576_p1;
wire   [23:0] grp_fu_1655_p3;
wire   [15:0] tmp_124_fu_1576_p4;
wire  signed [23:0] p_0_fu_1593_p1;
wire   [23:0] grp_fu_1664_p3;
wire   [23:0] grp_fu_1610_p2;
wire   [23:0] grp_fu_1619_p2;
wire   [23:0] grp_fu_1628_p2;
wire   [23:0] grp_fu_1637_p2;
wire   [23:0] grp_fu_1646_p2;
wire   [23:0] grp_fu_1655_p2;
wire   [23:0] grp_fu_1664_p2;
reg    grp_fu_1603_ce;
reg    grp_fu_1610_ce;
reg    grp_fu_1619_ce;
reg    grp_fu_1628_ce;
reg    grp_fu_1637_ce;
reg    grp_fu_1646_ce;
reg    grp_fu_1655_ce;
reg    grp_fu_1664_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_done_reg = 1'b0;
end

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U615(
    .din0(conv_i_i_i1582975_lcssa1488),
    .din1(conv_i_i_i15491263_lcssa1632),
    .din2(conv_i_i_i15161295_lcssa1648),
    .din3(conv_i_i_i14831327_lcssa1664),
    .din4(conv_i_i_i14501359_lcssa1680),
    .din5(conv_i_i_i14171391_lcssa1696),
    .din6(conv_i_i_i13841423_lcssa1712),
    .din7(conv_i_i_i13511455_lcssa1728),
    .din8(select_ln118_fu_1147_p3),
    .dout(tmp_17_fu_1163_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U616(
    .din0(Y_V_load),
    .din1(Y_V_1_load),
    .din2(Y_V_2_load),
    .din3(Y_V_3_load),
    .din4(Y_V_4_load),
    .din5(Y_V_5_load),
    .din6(Y_V_6_load),
    .din7(Y_V_7_load),
    .din8(tmp_25_fu_1185_p9),
    .dout(tmp_25_fu_1185_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U617(
    .din0(conv_i_i_i1582979_lcssa1490),
    .din1(conv_i_i_i15491267_lcssa1634),
    .din2(conv_i_i_i15161299_lcssa1650),
    .din3(conv_i_i_i14831331_lcssa1666),
    .din4(conv_i_i_i14501363_lcssa1682),
    .din5(conv_i_i_i14171395_lcssa1698),
    .din6(conv_i_i_i13841427_lcssa1714),
    .din7(conv_i_i_i13511459_lcssa1730),
    .din8(select_ln118_reg_2258),
    .dout(tmp_18_fu_1236_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U618(
    .din0(Y_V_load_1),
    .din1(Y_V_1_load_1),
    .din2(Y_V_2_load_1),
    .din3(Y_V_3_load_1),
    .din4(Y_V_4_load_1),
    .din5(Y_V_5_load_1),
    .din6(Y_V_6_load_1),
    .din7(Y_V_7_load_1),
    .din8(select_ln325_reg_2269),
    .dout(tmp_98_1_fu_1249_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U619(
    .din0(conv_i_i_i1582983_lcssa1492),
    .din1(conv_i_i_i15491271_lcssa1636),
    .din2(conv_i_i_i15161303_lcssa1652),
    .din3(conv_i_i_i14831335_lcssa1668),
    .din4(conv_i_i_i14501367_lcssa1684),
    .din5(conv_i_i_i14171399_lcssa1700),
    .din6(conv_i_i_i13841431_lcssa1716),
    .din7(conv_i_i_i13511463_lcssa1732),
    .din8(select_ln118_reg_2258_pp0_iter1_reg),
    .dout(tmp_19_fu_1270_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U620(
    .din0(Y_V_load_2),
    .din1(Y_V_1_load_2),
    .din2(Y_V_2_load_2),
    .din3(Y_V_3_load_2),
    .din4(Y_V_4_load_2),
    .din5(Y_V_5_load_2),
    .din6(Y_V_6_load_2),
    .din7(Y_V_7_load_2),
    .din8(select_ln325_reg_2269_pp0_iter1_reg),
    .dout(tmp_98_2_fu_1283_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U621(
    .din0(conv_i_i_i1582987_lcssa1494),
    .din1(conv_i_i_i15491275_lcssa1638),
    .din2(conv_i_i_i15161307_lcssa1654),
    .din3(conv_i_i_i14831339_lcssa1670),
    .din4(conv_i_i_i14501371_lcssa1686),
    .din5(conv_i_i_i14171403_lcssa1702),
    .din6(conv_i_i_i13841435_lcssa1718),
    .din7(conv_i_i_i13511467_lcssa1734),
    .din8(select_ln118_reg_2258_pp0_iter2_reg),
    .dout(tmp_20_fu_1304_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U622(
    .din0(Y_V_load_3),
    .din1(Y_V_1_load_3),
    .din2(Y_V_2_load_3),
    .din3(Y_V_3_load_3),
    .din4(Y_V_4_load_3),
    .din5(Y_V_5_load_3),
    .din6(Y_V_6_load_3),
    .din7(Y_V_7_load_3),
    .din8(select_ln325_reg_2269_pp0_iter2_reg),
    .dout(tmp_98_3_fu_1334_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U623(
    .din0(conv_i_i_i1582991_lcssa1496),
    .din1(conv_i_i_i15491279_lcssa1640),
    .din2(conv_i_i_i15161311_lcssa1656),
    .din3(conv_i_i_i14831343_lcssa1672),
    .din4(conv_i_i_i14501375_lcssa1688),
    .din5(conv_i_i_i14171407_lcssa1704),
    .din6(conv_i_i_i13841439_lcssa1720),
    .din7(conv_i_i_i13511471_lcssa1736),
    .din8(select_ln118_reg_2258_pp0_iter3_reg),
    .dout(tmp_21_fu_1355_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U624(
    .din0(Y_V_load_4),
    .din1(Y_V_1_load_4),
    .din2(Y_V_2_load_4),
    .din3(Y_V_3_load_4),
    .din4(Y_V_4_load_4),
    .din5(Y_V_5_load_4),
    .din6(Y_V_6_load_4),
    .din7(Y_V_7_load_4),
    .din8(select_ln325_reg_2269_pp0_iter3_reg),
    .dout(tmp_98_4_fu_1385_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U625(
    .din0(conv_i_i_i1582995_lcssa1498),
    .din1(conv_i_i_i15491283_lcssa1642),
    .din2(conv_i_i_i15161315_lcssa1658),
    .din3(conv_i_i_i14831347_lcssa1674),
    .din4(conv_i_i_i14501379_lcssa1690),
    .din5(conv_i_i_i14171411_lcssa1706),
    .din6(conv_i_i_i13841443_lcssa1722),
    .din7(conv_i_i_i13511475_lcssa1738),
    .din8(select_ln118_reg_2258_pp0_iter4_reg),
    .dout(tmp_22_fu_1406_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U626(
    .din0(Y_V_load_5),
    .din1(Y_V_1_load_5),
    .din2(Y_V_2_load_5),
    .din3(Y_V_3_load_5),
    .din4(Y_V_4_load_5),
    .din5(Y_V_5_load_5),
    .din6(Y_V_6_load_5),
    .din7(Y_V_7_load_5),
    .din8(select_ln325_reg_2269_pp0_iter4_reg),
    .dout(tmp_98_5_fu_1436_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U627(
    .din0(conv_i_i_i1582999_lcssa1500),
    .din1(conv_i_i_i15491287_lcssa1644),
    .din2(conv_i_i_i15161319_lcssa1660),
    .din3(conv_i_i_i14831351_lcssa1676),
    .din4(conv_i_i_i14501383_lcssa1692),
    .din5(conv_i_i_i14171415_lcssa1708),
    .din6(conv_i_i_i13841447_lcssa1724),
    .din7(conv_i_i_i13511479_lcssa1740),
    .din8(select_ln118_reg_2258_pp0_iter5_reg),
    .dout(tmp_23_fu_1457_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U628(
    .din0(Y_V_load_6),
    .din1(Y_V_1_load_6),
    .din2(Y_V_2_load_6),
    .din3(Y_V_3_load_6),
    .din4(Y_V_4_load_6),
    .din5(Y_V_5_load_6),
    .din6(Y_V_6_load_6),
    .din7(Y_V_7_load_6),
    .din8(select_ln325_reg_2269_pp0_iter5_reg),
    .dout(tmp_98_6_fu_1487_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U629(
    .din0(conv_i_i_i15821003_lcssa1502),
    .din1(conv_i_i_i15491291_lcssa1646),
    .din2(conv_i_i_i15161323_lcssa1662),
    .din3(conv_i_i_i14831355_lcssa1678),
    .din4(conv_i_i_i14501387_lcssa1694),
    .din5(conv_i_i_i14171419_lcssa1710),
    .din6(conv_i_i_i13841451_lcssa1726),
    .din7(conv_i_i_i13511483_lcssa1742),
    .din8(select_ln118_reg_2258_pp0_iter6_reg),
    .dout(tmp_24_fu_1508_p10)
);

TOP_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U630(
    .din0(Y_V_load_7),
    .din1(Y_V_1_load_7),
    .din2(Y_V_2_load_7),
    .din3(Y_V_3_load_7),
    .din4(Y_V_4_load_7),
    .din5(Y_V_5_load_7),
    .din6(Y_V_6_load_7),
    .din7(Y_V_7_load_7),
    .din8(select_ln325_reg_2269_pp0_iter6_reg),
    .dout(tmp_98_7_fu_1538_p10)
);

TOP_mul_mul_16s_16s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_16s_24_4_1_U631(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_17_fu_1163_p10),
    .din1(tmp_25_fu_1185_p10),
    .ce(grp_fu_1603_ce),
    .dout(grp_fu_1603_p2)
);

TOP_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U632(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_18_fu_1236_p10),
    .din1(tmp_98_1_fu_1249_p10),
    .din2(grp_fu_1610_p2),
    .ce(grp_fu_1610_ce),
    .dout(grp_fu_1610_p3)
);

TOP_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U633(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_19_fu_1270_p10),
    .din1(tmp_98_2_fu_1283_p10),
    .din2(grp_fu_1619_p2),
    .ce(grp_fu_1619_ce),
    .dout(grp_fu_1619_p3)
);

TOP_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U634(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_20_fu_1304_p10),
    .din1(tmp_98_3_fu_1334_p10),
    .din2(grp_fu_1628_p2),
    .ce(grp_fu_1628_ce),
    .dout(grp_fu_1628_p3)
);

TOP_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U635(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_21_fu_1355_p10),
    .din1(tmp_98_4_fu_1385_p10),
    .din2(grp_fu_1637_p2),
    .ce(grp_fu_1637_ce),
    .dout(grp_fu_1637_p3)
);

TOP_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U636(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_22_fu_1406_p10),
    .din1(tmp_98_5_fu_1436_p10),
    .din2(grp_fu_1646_p2),
    .ce(grp_fu_1646_ce),
    .dout(grp_fu_1646_p3)
);

TOP_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U637(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_23_fu_1457_p10),
    .din1(tmp_98_6_fu_1487_p10),
    .din2(grp_fu_1655_p2),
    .ce(grp_fu_1655_ce),
    .dout(grp_fu_1655_p3)
);

TOP_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U638(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_24_fu_1508_p10),
    .din1(tmp_98_7_fu_1538_p10),
    .din2(grp_fu_1664_p2),
    .ce(grp_fu_1664_ce),
    .dout(grp_fu_1664_p3)
);

TOP_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln325_fu_1117_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_316 <= select_ln325_fu_1155_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_316 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln325_fu_1117_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten7_fu_320 <= add_ln325_1_fu_1123_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten7_fu_320 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln325_fu_1117_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_312 <= add_ln326_fu_1215_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_312 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        select_ln118_reg_2258_pp0_iter1_reg <= select_ln118_reg_2258;
        select_ln325_reg_2269_pp0_iter1_reg <= select_ln325_reg_2269;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        select_ln118_reg_2258_pp0_iter2_reg <= select_ln118_reg_2258_pp0_iter1_reg;
        select_ln118_reg_2258_pp0_iter3_reg <= select_ln118_reg_2258_pp0_iter2_reg;
        select_ln118_reg_2258_pp0_iter4_reg <= select_ln118_reg_2258_pp0_iter3_reg;
        select_ln118_reg_2258_pp0_iter5_reg <= select_ln118_reg_2258_pp0_iter4_reg;
        select_ln118_reg_2258_pp0_iter6_reg <= select_ln118_reg_2258_pp0_iter5_reg;
        select_ln325_reg_2269_pp0_iter2_reg <= select_ln325_reg_2269_pp0_iter1_reg;
        select_ln325_reg_2269_pp0_iter3_reg <= select_ln325_reg_2269_pp0_iter2_reg;
        select_ln325_reg_2269_pp0_iter4_reg <= select_ln325_reg_2269_pp0_iter3_reg;
        select_ln325_reg_2269_pp0_iter5_reg <= select_ln325_reg_2269_pp0_iter4_reg;
        select_ln325_reg_2269_pp0_iter6_reg <= select_ln325_reg_2269_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln325_fu_1117_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln118_reg_2258 <= select_ln118_fu_1147_p3;
        select_ln325_reg_2269 <= select_ln325_fu_1155_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        Q_blk_n = Q_full_n;
    end else begin
        Q_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        Q_write = 1'b1;
    end else begin
        Q_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln325_fu_1117_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_316;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten7_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten7_load = indvar_flatten7_fu_320;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_312;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1603_ce = 1'b1;
    end else begin
        grp_fu_1603_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1610_ce = 1'b1;
    end else begin
        grp_fu_1610_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1619_ce = 1'b1;
    end else begin
        grp_fu_1619_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1628_ce = 1'b1;
    end else begin
        grp_fu_1628_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1637_ce = 1'b1;
    end else begin
        grp_fu_1637_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1646_ce = 1'b1;
    end else begin
        grp_fu_1646_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1655_ce = 1'b1;
    end else begin
        grp_fu_1655_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1664_ce = 1'b1;
    end else begin
        grp_fu_1664_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Q_din = {{p_0_fu_1593_p1[23:8]}};

assign add_ln325_1_fu_1123_p2 = (ap_sig_allocacmp_indvar_flatten7_load + 7'd1);

assign add_ln325_fu_1135_p2 = (ap_sig_allocacmp_i_load + 4'd1);

assign add_ln326_fu_1215_p2 = (select_ln118_fu_1147_p3 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == Q_full_n));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == Q_full_n));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == Q_full_n));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter10 = (1'b0 == Q_full_n);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_1610_p2 = {{tmp_s_fu_1317_p4}, {8'd0}};

assign grp_fu_1619_p2 = {{tmp_119_fu_1368_p4}, {8'd0}};

assign grp_fu_1628_p2 = {{tmp_120_fu_1419_p4}, {8'd0}};

assign grp_fu_1637_p2 = {{tmp_121_fu_1470_p4}, {8'd0}};

assign grp_fu_1646_p2 = {{tmp_122_fu_1521_p4}, {8'd0}};

assign grp_fu_1655_p2 = {{tmp_123_fu_1559_p4}, {8'd0}};

assign grp_fu_1664_p2 = {{tmp_124_fu_1576_p4}, {8'd0}};

assign icmp_ln325_fu_1117_p2 = ((ap_sig_allocacmp_indvar_flatten7_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln326_fu_1141_p2 = ((ap_sig_allocacmp_j_load == 4'd8) ? 1'b1 : 1'b0);

assign p_0_fu_1593_p1 = grp_fu_1664_p3;

assign select_ln118_fu_1147_p3 = ((icmp_ln326_fu_1141_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_load);

assign select_ln325_fu_1155_p3 = ((icmp_ln326_fu_1141_p2[0:0] == 1'b1) ? add_ln325_fu_1135_p2 : ap_sig_allocacmp_i_load);

assign tmp_119_fu_1368_p1 = grp_fu_1610_p3;

assign tmp_119_fu_1368_p4 = {{tmp_119_fu_1368_p1[23:8]}};

assign tmp_120_fu_1419_p1 = grp_fu_1619_p3;

assign tmp_120_fu_1419_p4 = {{tmp_120_fu_1419_p1[23:8]}};

assign tmp_121_fu_1470_p1 = grp_fu_1628_p3;

assign tmp_121_fu_1470_p4 = {{tmp_121_fu_1470_p1[23:8]}};

assign tmp_122_fu_1521_p1 = grp_fu_1637_p3;

assign tmp_122_fu_1521_p4 = {{tmp_122_fu_1521_p1[23:8]}};

assign tmp_123_fu_1559_p1 = grp_fu_1646_p3;

assign tmp_123_fu_1559_p4 = {{tmp_123_fu_1559_p1[23:8]}};

assign tmp_124_fu_1576_p1 = grp_fu_1655_p3;

assign tmp_124_fu_1576_p4 = {{tmp_124_fu_1576_p1[23:8]}};

assign tmp_25_fu_1185_p9 = ((icmp_ln326_fu_1141_p2[0:0] == 1'b1) ? add_ln325_fu_1135_p2 : ap_sig_allocacmp_i_load);

assign tmp_s_fu_1317_p4 = {{grp_fu_1603_p2[23:8]}};

endmodule //TOP_QRD_Pipeline_VITIS_LOOP_325_9_VITIS_LOOP_326_10
