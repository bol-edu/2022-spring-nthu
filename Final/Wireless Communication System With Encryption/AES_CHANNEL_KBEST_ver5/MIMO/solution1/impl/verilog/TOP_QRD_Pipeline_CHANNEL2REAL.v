// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module TOP_QRD_Pipeline_CHANNEL2REAL (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        H_real_spl1_dout,
        H_real_spl1_empty_n,
        H_real_spl1_read,
        H_imag_spl1_dout,
        H_imag_spl1_empty_n,
        H_imag_spl1_read,
        Y_V_1_address0,
        Y_V_1_ce0,
        Y_V_1_we0,
        Y_V_1_d0,
        Y_V_1_address1,
        Y_V_1_ce1,
        Y_V_1_we1,
        Y_V_1_d1,
        Y_V_address0,
        Y_V_ce0,
        Y_V_we0,
        Y_V_d0,
        Y_V_address1,
        Y_V_ce1,
        Y_V_we1,
        Y_V_d1,
        Y_V_2_address0,
        Y_V_2_ce0,
        Y_V_2_we0,
        Y_V_2_d0,
        Y_V_2_address1,
        Y_V_2_ce1,
        Y_V_2_we1,
        Y_V_2_d1,
        Y_V_4_address0,
        Y_V_4_ce0,
        Y_V_4_we0,
        Y_V_4_d0,
        Y_V_4_address1,
        Y_V_4_ce1,
        Y_V_4_we1,
        Y_V_4_d1,
        Y_V_6_address0,
        Y_V_6_ce0,
        Y_V_6_we0,
        Y_V_6_d0,
        Y_V_6_address1,
        Y_V_6_ce1,
        Y_V_6_we1,
        Y_V_6_d1,
        Y_V_3_address0,
        Y_V_3_ce0,
        Y_V_3_we0,
        Y_V_3_d0,
        Y_V_3_address1,
        Y_V_3_ce1,
        Y_V_3_we1,
        Y_V_3_d1,
        Y_V_5_address0,
        Y_V_5_ce0,
        Y_V_5_we0,
        Y_V_5_d0,
        Y_V_5_address1,
        Y_V_5_ce1,
        Y_V_5_we1,
        Y_V_5_d1,
        Y_V_7_address0,
        Y_V_7_ce0,
        Y_V_7_we0,
        Y_V_7_d0,
        Y_V_7_address1,
        Y_V_7_ce1,
        Y_V_7_we1,
        Y_V_7_d1,
        p_0_0_036012404_out,
        p_0_0_036012404_out_ap_vld,
        p_0_0_036012400_out,
        p_0_0_036012400_out_ap_vld,
        p_0_0_036012396_out,
        p_0_0_036012396_out_ap_vld,
        p_0_0_036012392_out,
        p_0_0_036012392_out_ap_vld,
        p_0_0_036012386_out,
        p_0_0_036012386_out_ap_vld,
        p_0_0_036012382_out,
        p_0_0_036012382_out_ap_vld,
        p_0_0_036012378_out,
        p_0_0_036012378_out_ap_vld,
        p_0_0_036012374_out,
        p_0_0_036012374_out_ap_vld,
        p_0_0_036012372_out,
        p_0_0_036012372_out_ap_vld,
        p_0_0_036012368_out,
        p_0_0_036012368_out_ap_vld,
        p_0_0_036012364_out,
        p_0_0_036012364_out_ap_vld,
        p_0_0_036012360_out,
        p_0_0_036012360_out_ap_vld,
        p_0_0_036012356_out,
        p_0_0_036012356_out_ap_vld,
        p_0_0_036012352_out,
        p_0_0_036012352_out_ap_vld,
        p_0_0_036012348_out,
        p_0_0_036012348_out_ap_vld,
        p_0_0_036012344_out,
        p_0_0_036012344_out_ap_vld,
        p_0_0_036002340_out,
        p_0_0_036002340_out_ap_vld,
        p_0_0_036002336_out,
        p_0_0_036002336_out_ap_vld,
        p_0_0_036002332_out,
        p_0_0_036002332_out_ap_vld,
        p_0_0_036002328_out,
        p_0_0_036002328_out_ap_vld,
        p_0_0_036002322_out,
        p_0_0_036002322_out_ap_vld,
        p_0_0_036002318_out,
        p_0_0_036002318_out_ap_vld,
        p_0_0_036002314_out,
        p_0_0_036002314_out_ap_vld,
        p_0_0_036002310_out,
        p_0_0_036002310_out_ap_vld,
        p_0_0_036002308_out,
        p_0_0_036002308_out_ap_vld,
        p_0_0_036002304_out,
        p_0_0_036002304_out_ap_vld,
        p_0_0_036002300_out,
        p_0_0_036002300_out_ap_vld,
        p_0_0_036002296_out,
        p_0_0_036002296_out_ap_vld,
        p_0_0_036002292_out,
        p_0_0_036002292_out_ap_vld,
        p_0_0_036002288_out,
        p_0_0_036002288_out_ap_vld,
        p_0_0_036002284_out,
        p_0_0_036002284_out_ap_vld,
        p_0_0_036002280_out,
        p_0_0_036002280_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] H_real_spl1_dout;
input   H_real_spl1_empty_n;
output   H_real_spl1_read;
input  [15:0] H_imag_spl1_dout;
input   H_imag_spl1_empty_n;
output   H_imag_spl1_read;
output  [2:0] Y_V_1_address0;
output   Y_V_1_ce0;
output   Y_V_1_we0;
output  [15:0] Y_V_1_d0;
output  [2:0] Y_V_1_address1;
output   Y_V_1_ce1;
output   Y_V_1_we1;
output  [15:0] Y_V_1_d1;
output  [2:0] Y_V_address0;
output   Y_V_ce0;
output   Y_V_we0;
output  [15:0] Y_V_d0;
output  [2:0] Y_V_address1;
output   Y_V_ce1;
output   Y_V_we1;
output  [15:0] Y_V_d1;
output  [2:0] Y_V_2_address0;
output   Y_V_2_ce0;
output   Y_V_2_we0;
output  [15:0] Y_V_2_d0;
output  [2:0] Y_V_2_address1;
output   Y_V_2_ce1;
output   Y_V_2_we1;
output  [15:0] Y_V_2_d1;
output  [2:0] Y_V_4_address0;
output   Y_V_4_ce0;
output   Y_V_4_we0;
output  [15:0] Y_V_4_d0;
output  [2:0] Y_V_4_address1;
output   Y_V_4_ce1;
output   Y_V_4_we1;
output  [15:0] Y_V_4_d1;
output  [2:0] Y_V_6_address0;
output   Y_V_6_ce0;
output   Y_V_6_we0;
output  [15:0] Y_V_6_d0;
output  [2:0] Y_V_6_address1;
output   Y_V_6_ce1;
output   Y_V_6_we1;
output  [15:0] Y_V_6_d1;
output  [2:0] Y_V_3_address0;
output   Y_V_3_ce0;
output   Y_V_3_we0;
output  [15:0] Y_V_3_d0;
output  [2:0] Y_V_3_address1;
output   Y_V_3_ce1;
output   Y_V_3_we1;
output  [15:0] Y_V_3_d1;
output  [2:0] Y_V_5_address0;
output   Y_V_5_ce0;
output   Y_V_5_we0;
output  [15:0] Y_V_5_d0;
output  [2:0] Y_V_5_address1;
output   Y_V_5_ce1;
output   Y_V_5_we1;
output  [15:0] Y_V_5_d1;
output  [2:0] Y_V_7_address0;
output   Y_V_7_ce0;
output   Y_V_7_we0;
output  [15:0] Y_V_7_d0;
output  [2:0] Y_V_7_address1;
output   Y_V_7_ce1;
output   Y_V_7_we1;
output  [15:0] Y_V_7_d1;
output  [15:0] p_0_0_036012404_out;
output   p_0_0_036012404_out_ap_vld;
output  [15:0] p_0_0_036012400_out;
output   p_0_0_036012400_out_ap_vld;
output  [15:0] p_0_0_036012396_out;
output   p_0_0_036012396_out_ap_vld;
output  [15:0] p_0_0_036012392_out;
output   p_0_0_036012392_out_ap_vld;
output  [15:0] p_0_0_036012386_out;
output   p_0_0_036012386_out_ap_vld;
output  [15:0] p_0_0_036012382_out;
output   p_0_0_036012382_out_ap_vld;
output  [15:0] p_0_0_036012378_out;
output   p_0_0_036012378_out_ap_vld;
output  [15:0] p_0_0_036012374_out;
output   p_0_0_036012374_out_ap_vld;
output  [15:0] p_0_0_036012372_out;
output   p_0_0_036012372_out_ap_vld;
output  [15:0] p_0_0_036012368_out;
output   p_0_0_036012368_out_ap_vld;
output  [15:0] p_0_0_036012364_out;
output   p_0_0_036012364_out_ap_vld;
output  [15:0] p_0_0_036012360_out;
output   p_0_0_036012360_out_ap_vld;
output  [15:0] p_0_0_036012356_out;
output   p_0_0_036012356_out_ap_vld;
output  [15:0] p_0_0_036012352_out;
output   p_0_0_036012352_out_ap_vld;
output  [15:0] p_0_0_036012348_out;
output   p_0_0_036012348_out_ap_vld;
output  [15:0] p_0_0_036012344_out;
output   p_0_0_036012344_out_ap_vld;
output  [15:0] p_0_0_036002340_out;
output   p_0_0_036002340_out_ap_vld;
output  [15:0] p_0_0_036002336_out;
output   p_0_0_036002336_out_ap_vld;
output  [15:0] p_0_0_036002332_out;
output   p_0_0_036002332_out_ap_vld;
output  [15:0] p_0_0_036002328_out;
output   p_0_0_036002328_out_ap_vld;
output  [15:0] p_0_0_036002322_out;
output   p_0_0_036002322_out_ap_vld;
output  [15:0] p_0_0_036002318_out;
output   p_0_0_036002318_out_ap_vld;
output  [15:0] p_0_0_036002314_out;
output   p_0_0_036002314_out_ap_vld;
output  [15:0] p_0_0_036002310_out;
output   p_0_0_036002310_out_ap_vld;
output  [15:0] p_0_0_036002308_out;
output   p_0_0_036002308_out_ap_vld;
output  [15:0] p_0_0_036002304_out;
output   p_0_0_036002304_out_ap_vld;
output  [15:0] p_0_0_036002300_out;
output   p_0_0_036002300_out_ap_vld;
output  [15:0] p_0_0_036002296_out;
output   p_0_0_036002296_out_ap_vld;
output  [15:0] p_0_0_036002292_out;
output   p_0_0_036002292_out_ap_vld;
output  [15:0] p_0_0_036002288_out;
output   p_0_0_036002288_out_ap_vld;
output  [15:0] p_0_0_036002284_out;
output   p_0_0_036002284_out_ap_vld;
output  [15:0] p_0_0_036002280_out;
output   p_0_0_036002280_out_ap_vld;

reg ap_idle;
reg H_real_spl1_read;
reg H_imag_spl1_read;
reg Y_V_1_ce0;
reg Y_V_1_we0;
reg Y_V_1_ce1;
reg Y_V_1_we1;
reg Y_V_ce0;
reg Y_V_we0;
reg Y_V_ce1;
reg Y_V_we1;
reg Y_V_2_ce0;
reg Y_V_2_we0;
reg Y_V_2_ce1;
reg Y_V_2_we1;
reg Y_V_4_ce0;
reg Y_V_4_we0;
reg Y_V_4_ce1;
reg Y_V_4_we1;
reg Y_V_6_ce0;
reg Y_V_6_we0;
reg Y_V_6_ce1;
reg Y_V_6_we1;
reg Y_V_3_ce0;
reg Y_V_3_we0;
reg Y_V_3_ce1;
reg Y_V_3_we1;
reg Y_V_5_ce0;
reg Y_V_5_we0;
reg Y_V_5_ce1;
reg Y_V_5_we1;
reg Y_V_7_ce0;
reg Y_V_7_we0;
reg Y_V_7_ce1;
reg Y_V_7_we1;
reg[15:0] p_0_0_036012404_out;
reg p_0_0_036012404_out_ap_vld;
reg[15:0] p_0_0_036012400_out;
reg p_0_0_036012400_out_ap_vld;
reg[15:0] p_0_0_036012396_out;
reg p_0_0_036012396_out_ap_vld;
reg[15:0] p_0_0_036012392_out;
reg p_0_0_036012392_out_ap_vld;
reg[15:0] p_0_0_036012386_out;
reg p_0_0_036012386_out_ap_vld;
reg[15:0] p_0_0_036012382_out;
reg p_0_0_036012382_out_ap_vld;
reg[15:0] p_0_0_036012378_out;
reg p_0_0_036012378_out_ap_vld;
reg[15:0] p_0_0_036012374_out;
reg p_0_0_036012374_out_ap_vld;
reg[15:0] p_0_0_036012372_out;
reg p_0_0_036012372_out_ap_vld;
reg[15:0] p_0_0_036012368_out;
reg p_0_0_036012368_out_ap_vld;
reg[15:0] p_0_0_036012364_out;
reg p_0_0_036012364_out_ap_vld;
reg[15:0] p_0_0_036012360_out;
reg p_0_0_036012360_out_ap_vld;
reg[15:0] p_0_0_036012356_out;
reg p_0_0_036012356_out_ap_vld;
reg[15:0] p_0_0_036012352_out;
reg p_0_0_036012352_out_ap_vld;
reg[15:0] p_0_0_036012348_out;
reg p_0_0_036012348_out_ap_vld;
reg[15:0] p_0_0_036012344_out;
reg p_0_0_036012344_out_ap_vld;
reg[15:0] p_0_0_036002340_out;
reg p_0_0_036002340_out_ap_vld;
reg p_0_0_036002336_out_ap_vld;
reg[15:0] p_0_0_036002332_out;
reg p_0_0_036002332_out_ap_vld;
reg[15:0] p_0_0_036002328_out;
reg p_0_0_036002328_out_ap_vld;
reg[15:0] p_0_0_036002322_out;
reg p_0_0_036002322_out_ap_vld;
reg p_0_0_036002318_out_ap_vld;
reg[15:0] p_0_0_036002314_out;
reg p_0_0_036002314_out_ap_vld;
reg[15:0] p_0_0_036002310_out;
reg p_0_0_036002310_out_ap_vld;
reg[15:0] p_0_0_036002308_out;
reg p_0_0_036002308_out_ap_vld;
reg p_0_0_036002304_out_ap_vld;
reg[15:0] p_0_0_036002300_out;
reg p_0_0_036002300_out_ap_vld;
reg[15:0] p_0_0_036002296_out;
reg p_0_0_036002296_out_ap_vld;
reg[15:0] p_0_0_036002292_out;
reg p_0_0_036002292_out_ap_vld;
reg p_0_0_036002288_out_ap_vld;
reg[15:0] p_0_0_036002284_out;
reg p_0_0_036002284_out_ap_vld;
reg[15:0] p_0_0_036002280_out;
reg p_0_0_036002280_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln124_fu_596_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    H_real_spl1_blk_n;
wire    ap_block_pp0_stage0;
reg    H_imag_spl1_blk_n;
wire   [1:0] empty_400_fu_608_p1;
reg   [1:0] empty_400_reg_920;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] and_ln_fu_622_p3;
reg   [2:0] and_ln_reg_925;
wire   [63:0] zext_ln127_fu_642_p1;
wire   [63:0] zext_ln128_fu_660_p1;
wire    ap_loop_init;
reg   [4:0] i_fu_148;
wire   [4:0] i_18_fu_602_p2;
reg   [4:0] ap_sig_allocacmp_i_17;
reg   [15:0] HH_V_fu_152;
reg   [15:0] HH_V_1_fu_156;
reg   [15:0] HH_V_2_fu_160;
reg   [15:0] HH_V_3_fu_164;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] sub_ln712_fu_672_p2;
wire   [1:0] tmp_s_fu_612_p4;
wire   [2:0] shl_ln_fu_635_p3;
wire   [2:0] or_ln128_fu_654_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_450;
reg    ap_condition_453;
reg    ap_condition_456;
reg    ap_condition_460;
reg    ap_condition_463;
reg    ap_condition_466;
reg    ap_condition_470;
reg    ap_condition_473;
reg    ap_condition_476;
reg    ap_condition_480;
reg    ap_condition_483;
reg    ap_condition_486;
reg    ap_condition_489;
reg    ap_condition_492;
reg    ap_condition_495;
reg    ap_condition_498;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

TOP_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln124_fu_596_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_148 <= i_18_fu_602_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_148 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        HH_V_1_fu_156 <= H_real_spl1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        HH_V_2_fu_160 <= H_real_spl1_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        HH_V_3_fu_164 <= H_real_spl1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        HH_V_fu_152 <= H_real_spl1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_596_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln_reg_925[2 : 1] <= and_ln_fu_622_p3[2 : 1];
        empty_400_reg_920 <= empty_400_fu_608_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        H_imag_spl1_blk_n = H_imag_spl1_empty_n;
    end else begin
        H_imag_spl1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        H_imag_spl1_read = 1'b1;
    end else begin
        H_imag_spl1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        H_real_spl1_blk_n = H_real_spl1_empty_n;
    end else begin
        H_real_spl1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        H_real_spl1_read = 1'b1;
    end else begin
        H_real_spl1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_1_ce0 = 1'b1;
    end else begin
        Y_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_1_ce1 = 1'b1;
    end else begin
        Y_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_1_we0 = 1'b1;
    end else begin
        Y_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_1_we1 = 1'b1;
    end else begin
        Y_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_2_ce0 = 1'b1;
    end else begin
        Y_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_2_ce1 = 1'b1;
    end else begin
        Y_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_2_we0 = 1'b1;
    end else begin
        Y_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_2_we1 = 1'b1;
    end else begin
        Y_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_3_ce0 = 1'b1;
    end else begin
        Y_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_3_ce1 = 1'b1;
    end else begin
        Y_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_3_we0 = 1'b1;
    end else begin
        Y_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_3_we1 = 1'b1;
    end else begin
        Y_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_4_ce0 = 1'b1;
    end else begin
        Y_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_4_ce1 = 1'b1;
    end else begin
        Y_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_4_we0 = 1'b1;
    end else begin
        Y_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_4_we1 = 1'b1;
    end else begin
        Y_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_5_ce0 = 1'b1;
    end else begin
        Y_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_5_ce1 = 1'b1;
    end else begin
        Y_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_5_we0 = 1'b1;
    end else begin
        Y_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_5_we1 = 1'b1;
    end else begin
        Y_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_6_ce0 = 1'b1;
    end else begin
        Y_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_6_ce1 = 1'b1;
    end else begin
        Y_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_6_we0 = 1'b1;
    end else begin
        Y_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_6_we1 = 1'b1;
    end else begin
        Y_V_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_7_ce0 = 1'b1;
    end else begin
        Y_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_7_ce1 = 1'b1;
    end else begin
        Y_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_7_we0 = 1'b1;
    end else begin
        Y_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_7_we1 = 1'b1;
    end else begin
        Y_V_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_ce0 = 1'b1;
    end else begin
        Y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_ce1 = 1'b1;
    end else begin
        Y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_we0 = 1'b1;
    end else begin
        Y_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_V_we1 = 1'b1;
    end else begin
        Y_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln124_fu_596_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_17 = 5'd0;
    end else begin
        ap_sig_allocacmp_i_17 = i_fu_148;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036002280_out = 16'd0;
        end else if ((1'b1 == ap_condition_450)) begin
            p_0_0_036002280_out = H_real_spl1_dout;
        end else begin
            p_0_0_036002280_out = 'bx;
        end
    end else begin
        p_0_0_036002280_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036002280_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002280_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036002284_out = 16'd0;
        end else if ((1'b1 == ap_condition_453)) begin
            p_0_0_036002284_out = H_real_spl1_dout;
        end else begin
            p_0_0_036002284_out = 'bx;
        end
    end else begin
        p_0_0_036002284_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036002284_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002284_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln124_fu_596_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_036002288_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002288_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036002292_out = 16'd0;
        end else if ((1'b1 == ap_condition_456)) begin
            p_0_0_036002292_out = H_real_spl1_dout;
        end else begin
            p_0_0_036002292_out = 'bx;
        end
    end else begin
        p_0_0_036002292_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036002292_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002292_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036002296_out = 16'd0;
        end else if ((1'b1 == ap_condition_460)) begin
            p_0_0_036002296_out = H_real_spl1_dout;
        end else begin
            p_0_0_036002296_out = 'bx;
        end
    end else begin
        p_0_0_036002296_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036002296_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002296_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036002300_out = 16'd0;
        end else if ((1'b1 == ap_condition_463)) begin
            p_0_0_036002300_out = H_real_spl1_dout;
        end else begin
            p_0_0_036002300_out = 'bx;
        end
    end else begin
        p_0_0_036002300_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036002300_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002300_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln124_fu_596_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_036002304_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002304_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036002308_out = 16'd0;
        end else if ((1'b1 == ap_condition_466)) begin
            p_0_0_036002308_out = H_real_spl1_dout;
        end else begin
            p_0_0_036002308_out = 'bx;
        end
    end else begin
        p_0_0_036002308_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036002308_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002308_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036002310_out = 16'd0;
        end else if ((1'b1 == ap_condition_470)) begin
            p_0_0_036002310_out = H_real_spl1_dout;
        end else begin
            p_0_0_036002310_out = 'bx;
        end
    end else begin
        p_0_0_036002310_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036002310_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002310_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036002314_out = 16'd0;
        end else if ((1'b1 == ap_condition_473)) begin
            p_0_0_036002314_out = H_real_spl1_dout;
        end else begin
            p_0_0_036002314_out = 'bx;
        end
    end else begin
        p_0_0_036002314_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036002314_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002314_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln124_fu_596_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_036002318_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002318_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036002322_out = 16'd0;
        end else if ((1'b1 == ap_condition_476)) begin
            p_0_0_036002322_out = H_real_spl1_dout;
        end else begin
            p_0_0_036002322_out = 'bx;
        end
    end else begin
        p_0_0_036002322_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036002322_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002322_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036002328_out = 16'd0;
        end else if ((1'b1 == ap_condition_480)) begin
            p_0_0_036002328_out = H_real_spl1_dout;
        end else begin
            p_0_0_036002328_out = 'bx;
        end
    end else begin
        p_0_0_036002328_out = 'bx;
    end
end

always @ (*) begin
    if (((~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036002328_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002328_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036002332_out = 16'd0;
        end else if ((1'b1 == ap_condition_483)) begin
            p_0_0_036002332_out = H_real_spl1_dout;
        end else begin
            p_0_0_036002332_out = 'bx;
        end
    end else begin
        p_0_0_036002332_out = 'bx;
    end
end

always @ (*) begin
    if (((~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036002332_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002332_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln124_fu_596_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_036002336_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002336_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036002340_out = 16'd0;
        end else if ((1'b1 == ap_condition_486)) begin
            p_0_0_036002340_out = H_real_spl1_dout;
        end else begin
            p_0_0_036002340_out = 'bx;
        end
    end else begin
        p_0_0_036002340_out = 'bx;
    end
end

always @ (*) begin
    if (((~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036002340_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036002340_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012344_out = 16'd0;
        end else if ((1'b1 == ap_condition_450)) begin
            p_0_0_036012344_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012344_out = 'bx;
        end
    end else begin
        p_0_0_036012344_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012344_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012344_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012348_out = 16'd0;
        end else if ((1'b1 == ap_condition_453)) begin
            p_0_0_036012348_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012348_out = 'bx;
        end
    end else begin
        p_0_0_036012348_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012348_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012348_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012352_out = 16'd0;
        end else if ((1'b1 == ap_condition_489)) begin
            p_0_0_036012352_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012352_out = 'bx;
        end
    end else begin
        p_0_0_036012352_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012352_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012352_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012356_out = 16'd0;
        end else if ((1'b1 == ap_condition_456)) begin
            p_0_0_036012356_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012356_out = 'bx;
        end
    end else begin
        p_0_0_036012356_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012356_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012356_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012360_out = 16'd0;
        end else if ((1'b1 == ap_condition_460)) begin
            p_0_0_036012360_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012360_out = 'bx;
        end
    end else begin
        p_0_0_036012360_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012360_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012360_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012364_out = 16'd0;
        end else if ((1'b1 == ap_condition_463)) begin
            p_0_0_036012364_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012364_out = 'bx;
        end
    end else begin
        p_0_0_036012364_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012364_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012364_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012368_out = 16'd0;
        end else if ((1'b1 == ap_condition_492)) begin
            p_0_0_036012368_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012368_out = 'bx;
        end
    end else begin
        p_0_0_036012368_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012368_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012368_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012372_out = 16'd0;
        end else if ((1'b1 == ap_condition_466)) begin
            p_0_0_036012372_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012372_out = 'bx;
        end
    end else begin
        p_0_0_036012372_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012372_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012372_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012374_out = 16'd0;
        end else if ((1'b1 == ap_condition_470)) begin
            p_0_0_036012374_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012374_out = 'bx;
        end
    end else begin
        p_0_0_036012374_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012374_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012374_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012378_out = 16'd0;
        end else if ((1'b1 == ap_condition_473)) begin
            p_0_0_036012378_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012378_out = 'bx;
        end
    end else begin
        p_0_0_036012378_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012378_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012378_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012382_out = 16'd0;
        end else if ((1'b1 == ap_condition_495)) begin
            p_0_0_036012382_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012382_out = 'bx;
        end
    end else begin
        p_0_0_036012382_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012382_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012382_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012386_out = 16'd0;
        end else if ((1'b1 == ap_condition_476)) begin
            p_0_0_036012386_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012386_out = 'bx;
        end
    end else begin
        p_0_0_036012386_out = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012386_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012386_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012392_out = 16'd0;
        end else if ((1'b1 == ap_condition_480)) begin
            p_0_0_036012392_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012392_out = 'bx;
        end
    end else begin
        p_0_0_036012392_out = 'bx;
    end
end

always @ (*) begin
    if (((~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012392_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012392_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012396_out = 16'd0;
        end else if ((1'b1 == ap_condition_483)) begin
            p_0_0_036012396_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012396_out = 'bx;
        end
    end else begin
        p_0_0_036012396_out = 'bx;
    end
end

always @ (*) begin
    if (((~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012396_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012396_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012400_out = 16'd0;
        end else if ((1'b1 == ap_condition_498)) begin
            p_0_0_036012400_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012400_out = 'bx;
        end
    end else begin
        p_0_0_036012400_out = 'bx;
    end
end

always @ (*) begin
    if (((~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012400_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012400_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_036012404_out = 16'd0;
        end else if ((1'b1 == ap_condition_486)) begin
            p_0_0_036012404_out = H_imag_spl1_dout;
        end else begin
            p_0_0_036012404_out = 'bx;
        end
    end else begin
        p_0_0_036012404_out = 'bx;
    end
end

always @ (*) begin
    if (((~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_0_0_036012404_out_ap_vld = 1'b1;
    end else begin
        p_0_0_036012404_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Y_V_1_address0 = zext_ln127_fu_642_p1;

assign Y_V_1_address1 = zext_ln128_fu_660_p1;

assign Y_V_1_d0 = H_imag_spl1_dout;

assign Y_V_1_d1 = H_real_spl1_dout;

assign Y_V_2_address0 = zext_ln128_fu_660_p1;

assign Y_V_2_address1 = zext_ln127_fu_642_p1;

assign Y_V_2_d0 = sub_ln712_fu_672_p2;

assign Y_V_2_d1 = H_real_spl1_dout;

assign Y_V_3_address0 = zext_ln127_fu_642_p1;

assign Y_V_3_address1 = zext_ln128_fu_660_p1;

assign Y_V_3_d0 = H_imag_spl1_dout;

assign Y_V_3_d1 = H_real_spl1_dout;

assign Y_V_4_address0 = zext_ln128_fu_660_p1;

assign Y_V_4_address1 = zext_ln127_fu_642_p1;

assign Y_V_4_d0 = sub_ln712_fu_672_p2;

assign Y_V_4_d1 = H_real_spl1_dout;

assign Y_V_5_address0 = zext_ln127_fu_642_p1;

assign Y_V_5_address1 = zext_ln128_fu_660_p1;

assign Y_V_5_d0 = H_imag_spl1_dout;

assign Y_V_5_d1 = H_real_spl1_dout;

assign Y_V_6_address0 = zext_ln128_fu_660_p1;

assign Y_V_6_address1 = zext_ln127_fu_642_p1;

assign Y_V_6_d0 = sub_ln712_fu_672_p2;

assign Y_V_6_d1 = H_real_spl1_dout;

assign Y_V_7_address0 = zext_ln127_fu_642_p1;

assign Y_V_7_address1 = zext_ln128_fu_660_p1;

assign Y_V_7_d0 = H_imag_spl1_dout;

assign Y_V_7_d1 = H_real_spl1_dout;

assign Y_V_address0 = zext_ln128_fu_660_p1;

assign Y_V_address1 = zext_ln127_fu_642_p1;

assign Y_V_d0 = sub_ln712_fu_672_p2;

assign Y_V_d1 = H_real_spl1_dout;

assign and_ln_fu_622_p3 = {{tmp_s_fu_612_p4}, {1'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b0 == H_imag_spl1_empty_n) | (1'b0 == H_real_spl1_empty_n)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b0 == H_imag_spl1_empty_n) | (1'b0 == H_real_spl1_empty_n)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b0 == H_imag_spl1_empty_n) | (1'b0 == H_real_spl1_empty_n)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((1'b0 == H_imag_spl1_empty_n) | (1'b0 == H_real_spl1_empty_n));
end

always @ (*) begin
    ap_condition_450 = ((3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd2));
end

always @ (*) begin
    ap_condition_453 = ((3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd1));
end

always @ (*) begin
    ap_condition_456 = ((3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd3));
end

always @ (*) begin
    ap_condition_460 = ((3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd2));
end

always @ (*) begin
    ap_condition_463 = ((3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd1));
end

always @ (*) begin
    ap_condition_466 = ((3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd3));
end

always @ (*) begin
    ap_condition_470 = ((3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd2));
end

always @ (*) begin
    ap_condition_473 = ((3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd1));
end

always @ (*) begin
    ap_condition_476 = ((3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd3));
end

always @ (*) begin
    ap_condition_480 = (~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd2));
end

always @ (*) begin
    ap_condition_483 = (~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd1));
end

always @ (*) begin
    ap_condition_486 = (~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd3));
end

always @ (*) begin
    ap_condition_489 = ((3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd0));
end

always @ (*) begin
    ap_condition_492 = ((3'd2 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd0));
end

always @ (*) begin
    ap_condition_495 = ((3'd0 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd0));
end

always @ (*) begin
    ap_condition_498 = (~(3'd0 == and_ln_reg_925) & ~(3'd2 == and_ln_reg_925) & ~(3'd4 == and_ln_reg_925) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_400_reg_920 == 2'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_400_fu_608_p1 = ap_sig_allocacmp_i_17[1:0];

assign i_18_fu_602_p2 = (ap_sig_allocacmp_i_17 + 5'd1);

assign icmp_ln124_fu_596_p2 = ((ap_sig_allocacmp_i_17 == 5'd16) ? 1'b1 : 1'b0);

assign or_ln128_fu_654_p2 = (shl_ln_fu_635_p3 | 3'd1);

assign p_0_0_036002288_out = HH_V_fu_152;

assign p_0_0_036002304_out = HH_V_1_fu_156;

assign p_0_0_036002318_out = HH_V_2_fu_160;

assign p_0_0_036002336_out = HH_V_3_fu_164;

assign shl_ln_fu_635_p3 = {{empty_400_reg_920}, {1'd0}};

assign sub_ln712_fu_672_p2 = (16'd0 - H_imag_spl1_dout);

assign tmp_s_fu_612_p4 = {{ap_sig_allocacmp_i_17[3:2]}};

assign zext_ln127_fu_642_p1 = shl_ln_fu_635_p3;

assign zext_ln128_fu_660_p1 = or_ln128_fu_654_p2;

always @ (posedge ap_clk) begin
    and_ln_reg_925[0] <= 1'b0;
end

endmodule //TOP_QRD_Pipeline_CHANNEL2REAL
