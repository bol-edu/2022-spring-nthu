// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module TOP_CORDIC_V (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_in,
        y_in,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] x_in;
input  [15:0] y_in;
output  [63:0] ap_return_0;
output  [63:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] ap_return_0;
reg[63:0] ap_return_1;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] cordic_phase_V30_address0;
reg    cordic_phase_V30_ce0;
wire   [7:0] cordic_phase_V30_q0;
reg   [3:0] k_3_reg_1147;
wire    ap_CS_fsm_state2;
reg   [15:0] r_V_17_load_1_reg_1155;
wire   [0:0] icmp_ln91_fu_327_p2;
reg   [0:0] tmp_427_reg_1165;
wire    grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_start;
wire    grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_done;
wire    grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_idle;
wire    grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_ready;
wire   [15:0] grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_temp_y_V_2_out;
wire    grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_temp_y_V_2_out_ap_vld;
wire   [15:0] grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_temp_x_V_2_out;
wire    grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_temp_x_V_2_out_ap_vld;
reg    grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_start_reg;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln91_fu_343_p1;
reg  signed [15:0] r_V_17_fu_130;
wire   [15:0] x_V_6_fu_419_p3;
wire   [15:0] x_V_3_fu_291_p3;
wire    ap_CS_fsm_state4;
reg   [15:0] y_V_4_fu_134;
wire   [15:0] y_V_13_fu_426_p3;
wire   [15:0] y_V_10_fu_283_p3;
reg   [15:0] p_Val2_s_fu_138;
wire   [15:0] z_V_4_fu_381_p3;
wire  signed [15:0] sext_ln60_fu_299_p1;
wire    ap_CS_fsm_state7;
reg   [3:0] k_fu_142;
wire   [3:0] add_ln91_fu_333_p2;
wire   [0:0] tmp_416_fu_195_p3;
wire   [15:0] x_V_fu_203_p2;
wire   [15:0] y_V_fu_209_p2;
wire   [0:0] tmp_417_fu_231_p3;
wire   [15:0] x_V_1_fu_215_p3;
wire   [15:0] y_V_8_fu_223_p3;
wire   [0:0] tmp_418_fu_247_p3;
wire   [11:0] z_V_fu_267_p3;
wire   [11:0] select_ln1548_fu_239_p3;
wire   [15:0] y_V_9_fu_261_p2;
wire   [15:0] x_V_2_fu_255_p2;
wire   [11:0] z_V_1_fu_275_p3;
wire   [15:0] cordic_phase_V_load_cast_fu_365_p1;
wire   [15:0] z_V_2_fu_369_p2;
wire   [15:0] z_V_3_fu_375_p2;
wire   [15:0] x_V_4_fu_399_p2;
wire   [15:0] x_V_5_fu_409_p2;
wire   [15:0] y_V_11_fu_404_p2;
wire   [15:0] y_V_12_fu_414_p2;
wire  signed [24:0] grp_fu_1098_p2;
wire   [22:0] trunc_ln1168_fu_443_p1;
wire   [0:0] p_Result_249_fu_451_p3;
wire   [22:0] tmp_V_fu_458_p2;
wire   [22:0] tmp_V_9_fu_464_p3;
wire   [31:0] zext_ln940_fu_472_p1;
reg   [31:0] p_Result_250_fu_476_p4;
reg   [31:0] l_fu_486_p3;
wire   [31:0] sub_ln947_fu_494_p2;
wire   [31:0] lsb_index_fu_500_p2;
wire   [30:0] tmp_420_fu_506_p4;
wire   [5:0] trunc_ln950_fu_526_p1;
wire   [5:0] sub_ln950_fu_530_p2;
wire   [31:0] zext_ln950_fu_536_p1;
wire   [31:0] lshr_ln950_fu_540_p2;
wire   [31:0] shl_ln952_fu_552_p2;
wire   [22:0] trunc_ln952_fu_558_p1;
wire   [31:0] p_Result_s_fu_546_p2;
wire   [22:0] trunc_ln952_1_fu_568_p1;
wire   [22:0] and_ln952_fu_562_p2;
wire   [8:0] tmp_2_fu_578_p4;
wire   [22:0] or_ln952_fu_572_p2;
wire   [31:0] or_ln_fu_588_p3;
wire   [0:0] tmp_421_fu_602_p3;
wire   [0:0] p_Result_251_fu_616_p3;
wire   [0:0] xor_ln952_fu_610_p2;
wire   [31:0] sub_ln962_fu_636_p2;
wire   [63:0] zext_ln960_fu_522_p1;
wire   [63:0] zext_ln962_fu_642_p1;
wire   [0:0] icmp_ln949_fu_516_p2;
wire   [0:0] icmp_ln952_fu_596_p2;
wire   [31:0] add_ln961_fu_660_p2;
wire   [63:0] zext_ln961_fu_666_p1;
wire   [0:0] icmp_ln961_fu_624_p2;
wire   [0:0] select_ln949_fu_652_p3;
wire   [0:0] and_ln952_4_fu_630_p2;
wire   [63:0] lshr_ln961_fu_670_p2;
wire   [63:0] shl_ln962_fu_646_p2;
wire   [0:0] select_ln961_fu_676_p3;
wire   [63:0] m_13_fu_684_p3;
wire   [63:0] zext_ln964_fu_692_p1;
wire   [63:0] m_14_fu_696_p2;
wire   [62:0] m_20_fu_702_p4;
wire   [0:0] p_Result_240_fu_716_p3;
wire   [10:0] trunc_ln946_fu_732_p1;
wire   [10:0] sub_ln968_fu_736_p2;
wire   [10:0] select_ln946_fu_724_p3;
wire   [10:0] add_ln968_fu_742_p2;
wire   [63:0] zext_ln965_fu_712_p1;
wire   [11:0] tmp_fu_748_p3;
wire   [63:0] p_Result_252_fu_756_p5;
wire   [0:0] icmp_ln938_fu_446_p2;
wire   [63:0] bitcast_ln746_fu_768_p1;
wire   [0:0] p_Result_253_fu_786_p3;
wire   [15:0] tmp_V_7_fu_794_p2;
wire   [15:0] m_21_fu_800_p3;
wire   [16:0] zext_ln954_fu_808_p1;
reg   [16:0] p_Result_243_fu_812_p4;
wire   [31:0] p_Result_254_fu_822_p3;
reg   [31:0] l_2_fu_830_p3;
wire   [31:0] sub_ln947_2_fu_838_p2;
wire   [31:0] lsb_index_2_fu_848_p2;
wire   [30:0] tmp_424_fu_854_p4;
wire   [4:0] trunc_ln950_2_fu_870_p1;
wire   [4:0] sub_ln950_2_fu_874_p2;
wire   [16:0] zext_ln950_2_fu_880_p1;
wire   [16:0] lshr_ln950_2_fu_884_p2;
wire   [16:0] p_Result_245_fu_890_p2;
wire   [0:0] tmp_425_fu_902_p3;
wire   [0:0] icmp_ln949_2_fu_864_p2;
wire   [0:0] icmp_ln950_fu_896_p2;
wire   [16:0] trunc_ln947_fu_844_p1;
wire   [16:0] add_ln952_fu_922_p2;
wire   [0:0] p_Result_246_fu_928_p3;
wire   [0:0] and_ln949_fu_916_p2;
wire   [31:0] sub_ln962_2_fu_952_p2;
wire   [63:0] zext_ln960_2_fu_942_p1;
wire   [63:0] zext_ln962_2_fu_958_p1;
wire   [31:0] add_ln961_2_fu_968_p2;
wire   [63:0] zext_ln961_2_fu_974_p1;
wire   [0:0] a_fu_936_p2;
wire   [0:0] xor_ln952_2_fu_910_p2;
wire   [0:0] icmp_ln961_2_fu_946_p2;
wire   [63:0] lshr_ln961_2_fu_978_p2;
wire   [63:0] shl_ln962_2_fu_962_p2;
wire   [0:0] and_ln952_5_fu_984_p2;
wire   [63:0] m_fu_990_p3;
wire   [63:0] zext_ln964_2_fu_998_p1;
wire   [63:0] m_18_fu_1002_p2;
wire   [62:0] m_22_fu_1008_p4;
wire   [0:0] p_Result_247_fu_1022_p3;
wire   [10:0] trunc_ln946_2_fu_1038_p1;
wire   [10:0] sub_ln968_1_fu_1042_p2;
wire   [10:0] select_ln946_1_fu_1030_p3;
wire   [10:0] add_ln968_2_fu_1048_p2;
wire   [63:0] zext_ln965_2_fu_1018_p1;
wire   [11:0] tmp_s_fu_1054_p3;
wire   [63:0] p_Result_255_fu_1062_p5;
wire   [0:0] icmp_ln938_2_fu_780_p2;
wire   [63:0] bitcast_ln746_2_fu_1074_p1;
wire   [63:0] output_o1_fu_772_p3;
wire   [63:0] output_o2_fu_1078_p3;
wire   [7:0] grp_fu_1098_p1;
reg   [63:0] ap_return_0_preg;
reg   [63:0] ap_return_1_preg;
reg   [6:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 64'd0;
#0 ap_return_1_preg = 64'd0;
end

TOP_CORDIC_V_cordic_phase_V30_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
cordic_phase_V30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cordic_phase_V30_address0),
    .ce0(cordic_phase_V30_ce0),
    .q0(cordic_phase_V30_q0)
);

TOP_CORDIC_V_Pipeline_VITIS_LOOP_94_2 grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_start),
    .ap_done(grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_done),
    .ap_idle(grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_idle),
    .ap_ready(grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_ready),
    .temp_y_V_1(y_V_4_fu_134),
    .temp_x_V_1(r_V_17_load_1_reg_1155),
    .k(k_3_reg_1147),
    .temp_y_V_2_out(grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_temp_y_V_2_out),
    .temp_y_V_2_out_ap_vld(grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_temp_y_V_2_out_ap_vld),
    .temp_x_V_2_out(grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_temp_x_V_2_out),
    .temp_x_V_2_out_ap_vld(grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_temp_x_V_2_out_ap_vld)
);

TOP_mul_mul_16s_8ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 25 ))
mul_mul_16s_8ns_25_4_1_U175(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(r_V_17_fu_130),
    .din1(grp_fu_1098_p1),
    .ce(1'b1),
    .dout(grp_fu_1098_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_0_preg <= output_o1_fu_772_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_1_preg <= output_o2_fu_1078_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln91_fu_327_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_start_reg <= 1'b1;
        end else if ((grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_ready == 1'b1)) begin
            grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_fu_142 <= 4'd0;
    end else if (((icmp_ln91_fu_327_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        k_fu_142 <= add_ln91_fu_333_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_s_fu_138 <= sext_ln60_fu_299_p1;
    end else if (((grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        p_Val2_s_fu_138 <= z_V_4_fu_381_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_V_17_fu_130 <= x_V_3_fu_291_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_V_17_fu_130 <= x_V_6_fu_419_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        y_V_4_fu_134 <= y_V_10_fu_283_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        y_V_4_fu_134 <= y_V_13_fu_426_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        k_3_reg_1147 <= k_fu_142;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_fu_327_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        r_V_17_load_1_reg_1155 <= r_V_17_fu_130;
        tmp_427_reg_1165 <= y_V_4_fu_134[32'd15];
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_0 = output_o1_fu_772_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_1 = output_o2_fu_1078_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        cordic_phase_V30_ce0 = 1'b1;
    end else begin
        cordic_phase_V30_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln91_fu_327_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_936_p2 = (p_Result_246_fu_928_p3 | and_ln949_fu_916_p2);

assign add_ln91_fu_333_p2 = (k_fu_142 + 4'd1);

assign add_ln952_fu_922_p2 = ($signed(trunc_ln947_fu_844_p1) + $signed(17'd131019));

assign add_ln961_2_fu_968_p2 = ($signed(sub_ln947_2_fu_838_p2) + $signed(32'd4294967242));

assign add_ln961_fu_660_p2 = ($signed(sub_ln947_fu_494_p2) + $signed(32'd4294967242));

assign add_ln968_2_fu_1048_p2 = (sub_ln968_1_fu_1042_p2 + select_ln946_1_fu_1030_p3);

assign add_ln968_fu_742_p2 = (sub_ln968_fu_736_p2 + select_ln946_fu_724_p3);

assign and_ln949_fu_916_p2 = (icmp_ln950_fu_896_p2 & icmp_ln949_2_fu_864_p2);

assign and_ln952_4_fu_630_p2 = (xor_ln952_fu_610_p2 & p_Result_251_fu_616_p3);

assign and_ln952_5_fu_984_p2 = (xor_ln952_2_fu_910_p2 & a_fu_936_p2);

assign and_ln952_fu_562_p2 = (trunc_ln952_fu_558_p1 & tmp_V_9_fu_464_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign bitcast_ln746_2_fu_1074_p1 = p_Result_255_fu_1062_p5;

assign bitcast_ln746_fu_768_p1 = p_Result_252_fu_756_p5;

assign cordic_phase_V30_address0 = zext_ln91_fu_343_p1;

assign cordic_phase_V_load_cast_fu_365_p1 = cordic_phase_V30_q0;

assign grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_start = grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_ap_start_reg;

assign grp_fu_1098_p1 = 25'd155;

assign icmp_ln91_fu_327_p2 = ((k_fu_142 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln938_2_fu_780_p2 = ((p_Val2_s_fu_138 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln938_fu_446_p2 = ((grp_fu_1098_p2 == 25'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_2_fu_864_p2 = (($signed(tmp_424_fu_854_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_516_p2 = (($signed(tmp_420_fu_506_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln950_fu_896_p2 = ((p_Result_245_fu_890_p2 != 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln952_fu_596_p2 = ((or_ln_fu_588_p3 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln961_2_fu_946_p2 = (($signed(lsb_index_2_fu_848_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln961_fu_624_p2 = (($signed(lsb_index_fu_500_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);


always @ (p_Result_254_fu_822_p3) begin
    if (p_Result_254_fu_822_p3[0] == 1'b1) begin
        l_2_fu_830_p3 = 32'd0;
    end else if (p_Result_254_fu_822_p3[1] == 1'b1) begin
        l_2_fu_830_p3 = 32'd1;
    end else if (p_Result_254_fu_822_p3[2] == 1'b1) begin
        l_2_fu_830_p3 = 32'd2;
    end else if (p_Result_254_fu_822_p3[3] == 1'b1) begin
        l_2_fu_830_p3 = 32'd3;
    end else if (p_Result_254_fu_822_p3[4] == 1'b1) begin
        l_2_fu_830_p3 = 32'd4;
    end else if (p_Result_254_fu_822_p3[5] == 1'b1) begin
        l_2_fu_830_p3 = 32'd5;
    end else if (p_Result_254_fu_822_p3[6] == 1'b1) begin
        l_2_fu_830_p3 = 32'd6;
    end else if (p_Result_254_fu_822_p3[7] == 1'b1) begin
        l_2_fu_830_p3 = 32'd7;
    end else if (p_Result_254_fu_822_p3[8] == 1'b1) begin
        l_2_fu_830_p3 = 32'd8;
    end else if (p_Result_254_fu_822_p3[9] == 1'b1) begin
        l_2_fu_830_p3 = 32'd9;
    end else if (p_Result_254_fu_822_p3[10] == 1'b1) begin
        l_2_fu_830_p3 = 32'd10;
    end else if (p_Result_254_fu_822_p3[11] == 1'b1) begin
        l_2_fu_830_p3 = 32'd11;
    end else if (p_Result_254_fu_822_p3[12] == 1'b1) begin
        l_2_fu_830_p3 = 32'd12;
    end else if (p_Result_254_fu_822_p3[13] == 1'b1) begin
        l_2_fu_830_p3 = 32'd13;
    end else if (p_Result_254_fu_822_p3[14] == 1'b1) begin
        l_2_fu_830_p3 = 32'd14;
    end else if (p_Result_254_fu_822_p3[15] == 1'b1) begin
        l_2_fu_830_p3 = 32'd15;
    end else if (p_Result_254_fu_822_p3[16] == 1'b1) begin
        l_2_fu_830_p3 = 32'd16;
    end else if (p_Result_254_fu_822_p3[17] == 1'b1) begin
        l_2_fu_830_p3 = 32'd17;
    end else if (p_Result_254_fu_822_p3[18] == 1'b1) begin
        l_2_fu_830_p3 = 32'd18;
    end else if (p_Result_254_fu_822_p3[19] == 1'b1) begin
        l_2_fu_830_p3 = 32'd19;
    end else if (p_Result_254_fu_822_p3[20] == 1'b1) begin
        l_2_fu_830_p3 = 32'd20;
    end else if (p_Result_254_fu_822_p3[21] == 1'b1) begin
        l_2_fu_830_p3 = 32'd21;
    end else if (p_Result_254_fu_822_p3[22] == 1'b1) begin
        l_2_fu_830_p3 = 32'd22;
    end else if (p_Result_254_fu_822_p3[23] == 1'b1) begin
        l_2_fu_830_p3 = 32'd23;
    end else if (p_Result_254_fu_822_p3[24] == 1'b1) begin
        l_2_fu_830_p3 = 32'd24;
    end else if (p_Result_254_fu_822_p3[25] == 1'b1) begin
        l_2_fu_830_p3 = 32'd25;
    end else if (p_Result_254_fu_822_p3[26] == 1'b1) begin
        l_2_fu_830_p3 = 32'd26;
    end else if (p_Result_254_fu_822_p3[27] == 1'b1) begin
        l_2_fu_830_p3 = 32'd27;
    end else if (p_Result_254_fu_822_p3[28] == 1'b1) begin
        l_2_fu_830_p3 = 32'd28;
    end else if (p_Result_254_fu_822_p3[29] == 1'b1) begin
        l_2_fu_830_p3 = 32'd29;
    end else if (p_Result_254_fu_822_p3[30] == 1'b1) begin
        l_2_fu_830_p3 = 32'd30;
    end else if (p_Result_254_fu_822_p3[31] == 1'b1) begin
        l_2_fu_830_p3 = 32'd31;
    end else begin
        l_2_fu_830_p3 = 32'd32;
    end
end


always @ (p_Result_250_fu_476_p4) begin
    if (p_Result_250_fu_476_p4[0] == 1'b1) begin
        l_fu_486_p3 = 32'd0;
    end else if (p_Result_250_fu_476_p4[1] == 1'b1) begin
        l_fu_486_p3 = 32'd1;
    end else if (p_Result_250_fu_476_p4[2] == 1'b1) begin
        l_fu_486_p3 = 32'd2;
    end else if (p_Result_250_fu_476_p4[3] == 1'b1) begin
        l_fu_486_p3 = 32'd3;
    end else if (p_Result_250_fu_476_p4[4] == 1'b1) begin
        l_fu_486_p3 = 32'd4;
    end else if (p_Result_250_fu_476_p4[5] == 1'b1) begin
        l_fu_486_p3 = 32'd5;
    end else if (p_Result_250_fu_476_p4[6] == 1'b1) begin
        l_fu_486_p3 = 32'd6;
    end else if (p_Result_250_fu_476_p4[7] == 1'b1) begin
        l_fu_486_p3 = 32'd7;
    end else if (p_Result_250_fu_476_p4[8] == 1'b1) begin
        l_fu_486_p3 = 32'd8;
    end else if (p_Result_250_fu_476_p4[9] == 1'b1) begin
        l_fu_486_p3 = 32'd9;
    end else if (p_Result_250_fu_476_p4[10] == 1'b1) begin
        l_fu_486_p3 = 32'd10;
    end else if (p_Result_250_fu_476_p4[11] == 1'b1) begin
        l_fu_486_p3 = 32'd11;
    end else if (p_Result_250_fu_476_p4[12] == 1'b1) begin
        l_fu_486_p3 = 32'd12;
    end else if (p_Result_250_fu_476_p4[13] == 1'b1) begin
        l_fu_486_p3 = 32'd13;
    end else if (p_Result_250_fu_476_p4[14] == 1'b1) begin
        l_fu_486_p3 = 32'd14;
    end else if (p_Result_250_fu_476_p4[15] == 1'b1) begin
        l_fu_486_p3 = 32'd15;
    end else if (p_Result_250_fu_476_p4[16] == 1'b1) begin
        l_fu_486_p3 = 32'd16;
    end else if (p_Result_250_fu_476_p4[17] == 1'b1) begin
        l_fu_486_p3 = 32'd17;
    end else if (p_Result_250_fu_476_p4[18] == 1'b1) begin
        l_fu_486_p3 = 32'd18;
    end else if (p_Result_250_fu_476_p4[19] == 1'b1) begin
        l_fu_486_p3 = 32'd19;
    end else if (p_Result_250_fu_476_p4[20] == 1'b1) begin
        l_fu_486_p3 = 32'd20;
    end else if (p_Result_250_fu_476_p4[21] == 1'b1) begin
        l_fu_486_p3 = 32'd21;
    end else if (p_Result_250_fu_476_p4[22] == 1'b1) begin
        l_fu_486_p3 = 32'd22;
    end else if (p_Result_250_fu_476_p4[23] == 1'b1) begin
        l_fu_486_p3 = 32'd23;
    end else if (p_Result_250_fu_476_p4[24] == 1'b1) begin
        l_fu_486_p3 = 32'd24;
    end else if (p_Result_250_fu_476_p4[25] == 1'b1) begin
        l_fu_486_p3 = 32'd25;
    end else if (p_Result_250_fu_476_p4[26] == 1'b1) begin
        l_fu_486_p3 = 32'd26;
    end else if (p_Result_250_fu_476_p4[27] == 1'b1) begin
        l_fu_486_p3 = 32'd27;
    end else if (p_Result_250_fu_476_p4[28] == 1'b1) begin
        l_fu_486_p3 = 32'd28;
    end else if (p_Result_250_fu_476_p4[29] == 1'b1) begin
        l_fu_486_p3 = 32'd29;
    end else if (p_Result_250_fu_476_p4[30] == 1'b1) begin
        l_fu_486_p3 = 32'd30;
    end else if (p_Result_250_fu_476_p4[31] == 1'b1) begin
        l_fu_486_p3 = 32'd31;
    end else begin
        l_fu_486_p3 = 32'd32;
    end
end

assign lsb_index_2_fu_848_p2 = ($signed(sub_ln947_2_fu_838_p2) + $signed(32'd4294967243));

assign lsb_index_fu_500_p2 = ($signed(sub_ln947_fu_494_p2) + $signed(32'd4294967243));

assign lshr_ln950_2_fu_884_p2 = 17'd131071 >> zext_ln950_2_fu_880_p1;

assign lshr_ln950_fu_540_p2 = 32'd4294967295 >> zext_ln950_fu_536_p1;

assign lshr_ln961_2_fu_978_p2 = zext_ln960_2_fu_942_p1 >> zext_ln961_2_fu_974_p1;

assign lshr_ln961_fu_670_p2 = zext_ln960_fu_522_p1 >> zext_ln961_fu_666_p1;

assign m_13_fu_684_p3 = ((icmp_ln961_fu_624_p2[0:0] == 1'b1) ? lshr_ln961_fu_670_p2 : shl_ln962_fu_646_p2);

assign m_14_fu_696_p2 = (m_13_fu_684_p3 + zext_ln964_fu_692_p1);

assign m_18_fu_1002_p2 = (m_fu_990_p3 + zext_ln964_2_fu_998_p1);

assign m_20_fu_702_p4 = {{m_14_fu_696_p2[63:1]}};

assign m_21_fu_800_p3 = ((p_Result_253_fu_786_p3[0:0] == 1'b1) ? tmp_V_7_fu_794_p2 : p_Val2_s_fu_138);

assign m_22_fu_1008_p4 = {{m_18_fu_1002_p2[63:1]}};

assign m_fu_990_p3 = ((icmp_ln961_2_fu_946_p2[0:0] == 1'b1) ? lshr_ln961_2_fu_978_p2 : shl_ln962_2_fu_962_p2);

assign or_ln952_fu_572_p2 = (trunc_ln952_1_fu_568_p1 | and_ln952_fu_562_p2);

assign or_ln_fu_588_p3 = {{tmp_2_fu_578_p4}, {or_ln952_fu_572_p2}};

assign output_o1_fu_772_p3 = ((icmp_ln938_fu_446_p2[0:0] == 1'b1) ? 64'd0 : bitcast_ln746_fu_768_p1);

assign output_o2_fu_1078_p3 = ((icmp_ln938_2_fu_780_p2[0:0] == 1'b1) ? 64'd0 : bitcast_ln746_2_fu_1074_p1);

assign p_Result_240_fu_716_p3 = m_14_fu_696_p2[32'd54];

integer ap_tvar_int_0;

always @ (zext_ln954_fu_808_p1) begin
    for (ap_tvar_int_0 = 17 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 16 - 0) begin
            p_Result_243_fu_812_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_243_fu_812_p4[ap_tvar_int_0] = zext_ln954_fu_808_p1[16 - ap_tvar_int_0];
        end
    end
end

assign p_Result_245_fu_890_p2 = (zext_ln954_fu_808_p1 & lshr_ln950_2_fu_884_p2);

assign p_Result_246_fu_928_p3 = zext_ln954_fu_808_p1[add_ln952_fu_922_p2];

assign p_Result_247_fu_1022_p3 = m_18_fu_1002_p2[32'd54];

assign p_Result_249_fu_451_p3 = grp_fu_1098_p2[32'd24];

integer ap_tvar_int_1;

always @ (zext_ln940_fu_472_p1) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_250_fu_476_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_250_fu_476_p4[ap_tvar_int_1] = zext_ln940_fu_472_p1[31 - ap_tvar_int_1];
        end
    end
end

assign p_Result_251_fu_616_p3 = zext_ln940_fu_472_p1[lsb_index_fu_500_p2];

assign p_Result_252_fu_756_p5 = {{tmp_fu_748_p3}, {zext_ln965_fu_712_p1[51:0]}};

assign p_Result_253_fu_786_p3 = p_Val2_s_fu_138[32'd15];

assign p_Result_254_fu_822_p3 = {{15'd32767}, {p_Result_243_fu_812_p4}};

assign p_Result_255_fu_1062_p5 = {{tmp_s_fu_1054_p3}, {zext_ln965_2_fu_1018_p1[51:0]}};

assign p_Result_s_fu_546_p2 = (zext_ln940_fu_472_p1 & lshr_ln950_fu_540_p2);

assign select_ln1548_fu_239_p3 = ((tmp_417_fu_231_p3[0:0] == 1'b1) ? 12'd3694 : 12'd402);

assign select_ln946_1_fu_1030_p3 = ((p_Result_247_fu_1022_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln946_fu_724_p3 = ((p_Result_240_fu_716_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln949_fu_652_p3 = ((icmp_ln949_fu_516_p2[0:0] == 1'b1) ? icmp_ln952_fu_596_p2 : p_Result_251_fu_616_p3);

assign select_ln961_fu_676_p3 = ((icmp_ln961_fu_624_p2[0:0] == 1'b1) ? select_ln949_fu_652_p3 : and_ln952_4_fu_630_p2);

assign sext_ln60_fu_299_p1 = $signed(z_V_1_fu_275_p3);

assign shl_ln952_fu_552_p2 = 32'd1 << lsb_index_fu_500_p2;

assign shl_ln962_2_fu_962_p2 = zext_ln960_2_fu_942_p1 << zext_ln962_2_fu_958_p1;

assign shl_ln962_fu_646_p2 = zext_ln960_fu_522_p1 << zext_ln962_fu_642_p1;

assign sub_ln947_2_fu_838_p2 = (32'd17 - l_2_fu_830_p3);

assign sub_ln947_fu_494_p2 = (32'd32 - l_fu_486_p3);

assign sub_ln950_2_fu_874_p2 = (5'd7 - trunc_ln950_2_fu_870_p1);

assign sub_ln950_fu_530_p2 = (6'd22 - trunc_ln950_fu_526_p1);

assign sub_ln962_2_fu_952_p2 = (32'd54 - sub_ln947_2_fu_838_p2);

assign sub_ln962_fu_636_p2 = (32'd54 - sub_ln947_fu_494_p2);

assign sub_ln968_1_fu_1042_p2 = (11'd9 - trunc_ln946_2_fu_1038_p1);

assign sub_ln968_fu_736_p2 = (11'd16 - trunc_ln946_fu_732_p1);

assign tmp_2_fu_578_p4 = {{p_Result_s_fu_546_p2[31:23]}};

assign tmp_416_fu_195_p3 = y_in[32'd15];

assign tmp_417_fu_231_p3 = y_in[32'd15];

assign tmp_418_fu_247_p3 = x_V_1_fu_215_p3[32'd15];

assign tmp_420_fu_506_p4 = {{lsb_index_fu_500_p2[31:1]}};

assign tmp_421_fu_602_p3 = lsb_index_fu_500_p2[32'd31];

assign tmp_424_fu_854_p4 = {{lsb_index_2_fu_848_p2[31:1]}};

assign tmp_425_fu_902_p3 = lsb_index_2_fu_848_p2[32'd31];

assign tmp_V_7_fu_794_p2 = (16'd0 - p_Val2_s_fu_138);

assign tmp_V_9_fu_464_p3 = ((p_Result_249_fu_451_p3[0:0] == 1'b1) ? tmp_V_fu_458_p2 : trunc_ln1168_fu_443_p1);

assign tmp_V_fu_458_p2 = (23'd0 - trunc_ln1168_fu_443_p1);

assign tmp_fu_748_p3 = {{p_Result_249_fu_451_p3}, {add_ln968_fu_742_p2}};

assign tmp_s_fu_1054_p3 = {{p_Result_253_fu_786_p3}, {add_ln968_2_fu_1048_p2}};

assign trunc_ln1168_fu_443_p1 = grp_fu_1098_p2[22:0];

assign trunc_ln946_2_fu_1038_p1 = l_2_fu_830_p3[10:0];

assign trunc_ln946_fu_732_p1 = l_fu_486_p3[10:0];

assign trunc_ln947_fu_844_p1 = sub_ln947_2_fu_838_p2[16:0];

assign trunc_ln950_2_fu_870_p1 = sub_ln947_2_fu_838_p2[4:0];

assign trunc_ln950_fu_526_p1 = sub_ln947_fu_494_p2[5:0];

assign trunc_ln952_1_fu_568_p1 = p_Result_s_fu_546_p2[22:0];

assign trunc_ln952_fu_558_p1 = shl_ln952_fu_552_p2[22:0];

assign x_V_1_fu_215_p3 = ((tmp_416_fu_195_p3[0:0] == 1'b1) ? x_V_fu_203_p2 : y_in);

assign x_V_2_fu_255_p2 = (16'd0 - x_V_1_fu_215_p3);

assign x_V_3_fu_291_p3 = ((tmp_418_fu_247_p3[0:0] == 1'b1) ? x_V_2_fu_255_p2 : x_V_1_fu_215_p3);

assign x_V_4_fu_399_p2 = (r_V_17_load_1_reg_1155 - grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_temp_y_V_2_out);

assign x_V_5_fu_409_p2 = (grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_temp_y_V_2_out + r_V_17_load_1_reg_1155);

assign x_V_6_fu_419_p3 = ((tmp_427_reg_1165[0:0] == 1'b1) ? x_V_4_fu_399_p2 : x_V_5_fu_409_p2);

assign x_V_fu_203_p2 = (16'd0 - y_in);

assign xor_ln952_2_fu_910_p2 = (tmp_425_fu_902_p3 ^ 1'd1);

assign xor_ln952_fu_610_p2 = (tmp_421_fu_602_p3 ^ 1'd1);

assign y_V_10_fu_283_p3 = ((tmp_418_fu_247_p3[0:0] == 1'b1) ? y_V_9_fu_261_p2 : y_V_8_fu_223_p3);

assign y_V_11_fu_404_p2 = (grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_temp_x_V_2_out + y_V_4_fu_134);

assign y_V_12_fu_414_p2 = (y_V_4_fu_134 - grp_CORDIC_V_Pipeline_VITIS_LOOP_94_2_fu_179_temp_x_V_2_out);

assign y_V_13_fu_426_p3 = ((tmp_427_reg_1165[0:0] == 1'b1) ? y_V_11_fu_404_p2 : y_V_12_fu_414_p2);

assign y_V_8_fu_223_p3 = ((tmp_416_fu_195_p3[0:0] == 1'b1) ? x_in : y_V_fu_209_p2);

assign y_V_9_fu_261_p2 = (16'd0 - y_V_8_fu_223_p3);

assign y_V_fu_209_p2 = (16'd0 - x_in);

assign z_V_1_fu_275_p3 = ((tmp_418_fu_247_p3[0:0] == 1'b1) ? z_V_fu_267_p3 : select_ln1548_fu_239_p3);

assign z_V_2_fu_369_p2 = (p_Val2_s_fu_138 - cordic_phase_V_load_cast_fu_365_p1);

assign z_V_3_fu_375_p2 = (p_Val2_s_fu_138 + cordic_phase_V_load_cast_fu_365_p1);

assign z_V_4_fu_381_p3 = ((tmp_427_reg_1165[0:0] == 1'b1) ? z_V_2_fu_369_p2 : z_V_3_fu_375_p2);

assign z_V_fu_267_p3 = ((tmp_417_fu_231_p3[0:0] == 1'b1) ? 12'd2890 : 12'd3694);

assign zext_ln91_fu_343_p1 = k_fu_142;

assign zext_ln940_fu_472_p1 = tmp_V_9_fu_464_p3;

assign zext_ln950_2_fu_880_p1 = sub_ln950_2_fu_874_p2;

assign zext_ln950_fu_536_p1 = sub_ln950_fu_530_p2;

assign zext_ln954_fu_808_p1 = m_21_fu_800_p3;

assign zext_ln960_2_fu_942_p1 = m_21_fu_800_p3;

assign zext_ln960_fu_522_p1 = tmp_V_9_fu_464_p3;

assign zext_ln961_2_fu_974_p1 = add_ln961_2_fu_968_p2;

assign zext_ln961_fu_666_p1 = add_ln961_fu_660_p2;

assign zext_ln962_2_fu_958_p1 = sub_ln962_2_fu_952_p2;

assign zext_ln962_fu_642_p1 = sub_ln962_fu_636_p2;

assign zext_ln964_2_fu_998_p1 = and_ln952_5_fu_984_p2;

assign zext_ln964_fu_692_p1 = select_ln961_fu_676_p3;

assign zext_ln965_2_fu_1018_p1 = m_22_fu_1008_p4;

assign zext_ln965_fu_712_p1 = m_20_fu_702_p4;

endmodule //TOP_CORDIC_V
