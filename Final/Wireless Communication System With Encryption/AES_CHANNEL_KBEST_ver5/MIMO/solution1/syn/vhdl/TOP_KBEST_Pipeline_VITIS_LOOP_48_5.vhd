-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity TOP_KBEST_Pipeline_VITIS_LOOP_48_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    select_ln42_61 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_62 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_64 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_67 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_69 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_72 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_75 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_16 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_13 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_12 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_10 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_7 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_42 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_43 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_45 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_48 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_50 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_53 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_56 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_35 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_32 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_31 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_29 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_26 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_24 : IN STD_LOGIC_VECTOR (31 downto 0);
    select_ln42_21 : IN STD_LOGIC_VECTOR (31 downto 0);
    survival_path_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    survival_path_ce0 : OUT STD_LOGIC;
    survival_path_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    survival_path_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    survival_path_ce1 : OUT STD_LOGIC;
    survival_path_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    zext_ln36 : IN STD_LOGIC_VECTOR (2 downto 0);
    p_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out_ap_vld : OUT STD_LOGIC;
    p_out1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out1_ap_vld : OUT STD_LOGIC;
    p_out2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out2_ap_vld : OUT STD_LOGIC;
    p_out3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out3_ap_vld : OUT STD_LOGIC;
    p_out4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out4_ap_vld : OUT STD_LOGIC;
    p_out5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out5_ap_vld : OUT STD_LOGIC;
    p_out6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out6_ap_vld : OUT STD_LOGIC;
    p_out7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out7_ap_vld : OUT STD_LOGIC;
    p_out8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out8_ap_vld : OUT STD_LOGIC;
    p_out9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out9_ap_vld : OUT STD_LOGIC;
    p_out10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out10_ap_vld : OUT STD_LOGIC;
    p_out11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out11_ap_vld : OUT STD_LOGIC;
    p_out12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out12_ap_vld : OUT STD_LOGIC;
    p_out13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out13_ap_vld : OUT STD_LOGIC;
    p_out14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out14_ap_vld : OUT STD_LOGIC;
    p_out15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out15_ap_vld : OUT STD_LOGIC;
    p_out16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out16_ap_vld : OUT STD_LOGIC;
    p_out17 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out17_ap_vld : OUT STD_LOGIC;
    p_out18 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out18_ap_vld : OUT STD_LOGIC;
    p_out19 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out19_ap_vld : OUT STD_LOGIC;
    p_out20 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out20_ap_vld : OUT STD_LOGIC;
    p_out21 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out21_ap_vld : OUT STD_LOGIC;
    p_out22 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out22_ap_vld : OUT STD_LOGIC;
    p_out23 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out23_ap_vld : OUT STD_LOGIC;
    p_out24 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out24_ap_vld : OUT STD_LOGIC;
    p_out25 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out25_ap_vld : OUT STD_LOGIC;
    p_out26 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out26_ap_vld : OUT STD_LOGIC;
    p_out27 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_out27_ap_vld : OUT STD_LOGIC );
end;


architecture behav of TOP_KBEST_Pipeline_VITIS_LOOP_48_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv63_7 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv63_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (62 downto 0) := "111111111111111111111111111111111111111111111111111111111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln48_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln36_cast_fu_671_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln36_cast_reg_1318 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln49_1_fu_848_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln49_1_reg_1336 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_27_cast_i_fu_823_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln51_fu_838_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_160 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln48_fu_852_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal empty_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_413_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_414_fu_172 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_415_fu_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_416_fu_180 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_417_fu_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_418_fu_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_419_fu_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_420_fu_196 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_421_fu_200 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_422_fu_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_423_fu_208 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_424_fu_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_425_fu_216 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_426_fu_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_427_fu_224 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_428_fu_228 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_429_fu_232 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_430_fu_236 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_431_fu_240 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_432_fu_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_433_fu_248 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_434_fu_252 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_435_fu_256 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_436_fu_260 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_437_fu_264 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_438_fu_268 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_439_fu_272 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln49_fu_828_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln51_fu_832_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_509 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component TOP_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component TOP_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    empty_413_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_413_fu_168 <= select_ln42_24;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_5))) then 
                    empty_413_fu_168 <= survival_path_q1;
                end if;
            end if; 
        end if;
    end process;

    empty_414_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_414_fu_172 <= select_ln42_26;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_4))) then 
                    empty_414_fu_172 <= survival_path_q1;
                end if;
            end if; 
        end if;
    end process;

    empty_415_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_415_fu_176 <= select_ln42_29;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_3))) then 
                    empty_415_fu_176 <= survival_path_q1;
                end if;
            end if; 
        end if;
    end process;

    empty_416_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_416_fu_180 <= select_ln42_31;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_2))) then 
                    empty_416_fu_180 <= survival_path_q1;
                end if;
            end if; 
        end if;
    end process;

    empty_417_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_417_fu_184 <= select_ln42_32;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_1))) then 
                    empty_417_fu_184 <= survival_path_q1;
                end if;
            end if; 
        end if;
    end process;

    empty_418_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_418_fu_188 <= select_ln42_35;
                elsif ((ap_const_boolean_1 = ap_condition_509)) then 
                    empty_418_fu_188 <= survival_path_q1;
                end if;
            end if; 
        end if;
    end process;

    empty_419_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_419_fu_192 <= select_ln42_56;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_6))) then 
                    empty_419_fu_192 <= survival_path_q1;
                end if;
            end if; 
        end if;
    end process;

    empty_420_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_420_fu_196 <= select_ln42_53;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_5))) then 
                    empty_420_fu_196 <= survival_path_q1;
                end if;
            end if; 
        end if;
    end process;

    empty_421_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_421_fu_200 <= select_ln42_50;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_4))) then 
                    empty_421_fu_200 <= survival_path_q1;
                end if;
            end if; 
        end if;
    end process;

    empty_422_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_422_fu_204 <= select_ln42_48;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_3))) then 
                    empty_422_fu_204 <= survival_path_q1;
                end if;
            end if; 
        end if;
    end process;

    empty_423_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_423_fu_208 <= select_ln42_45;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_2))) then 
                    empty_423_fu_208 <= survival_path_q1;
                end if;
            end if; 
        end if;
    end process;

    empty_424_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_424_fu_212 <= select_ln42_43;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_1))) then 
                    empty_424_fu_212 <= survival_path_q1;
                end if;
            end if; 
        end if;
    end process;

    empty_425_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_425_fu_216 <= select_ln42_42;
                elsif ((ap_const_boolean_1 = ap_condition_509)) then 
                    empty_425_fu_216 <= survival_path_q1;
                end if;
            end if; 
        end if;
    end process;

    empty_426_fu_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_426_fu_220 <= select_ln42_2;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_6))) then 
                    empty_426_fu_220 <= survival_path_q0;
                end if;
            end if; 
        end if;
    end process;

    empty_427_fu_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_427_fu_224 <= select_ln42_5;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_5))) then 
                    empty_427_fu_224 <= survival_path_q0;
                end if;
            end if; 
        end if;
    end process;

    empty_428_fu_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_428_fu_228 <= select_ln42_7;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_4))) then 
                    empty_428_fu_228 <= survival_path_q0;
                end if;
            end if; 
        end if;
    end process;

    empty_429_fu_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_429_fu_232 <= select_ln42_10;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_3))) then 
                    empty_429_fu_232 <= survival_path_q0;
                end if;
            end if; 
        end if;
    end process;

    empty_430_fu_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_430_fu_236 <= select_ln42_12;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_2))) then 
                    empty_430_fu_236 <= survival_path_q0;
                end if;
            end if; 
        end if;
    end process;

    empty_431_fu_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_431_fu_240 <= select_ln42_13;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_1))) then 
                    empty_431_fu_240 <= survival_path_q0;
                end if;
            end if; 
        end if;
    end process;

    empty_432_fu_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_432_fu_244 <= select_ln42_16;
                elsif ((ap_const_boolean_1 = ap_condition_509)) then 
                    empty_432_fu_244 <= survival_path_q0;
                end if;
            end if; 
        end if;
    end process;

    empty_433_fu_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_433_fu_248 <= select_ln42_75;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_6))) then 
                    empty_433_fu_248 <= survival_path_q0;
                end if;
            end if; 
        end if;
    end process;

    empty_434_fu_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_434_fu_252 <= select_ln42_72;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_5))) then 
                    empty_434_fu_252 <= survival_path_q0;
                end if;
            end if; 
        end if;
    end process;

    empty_435_fu_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_435_fu_256 <= select_ln42_69;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_4))) then 
                    empty_435_fu_256 <= survival_path_q0;
                end if;
            end if; 
        end if;
    end process;

    empty_436_fu_260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_436_fu_260 <= select_ln42_67;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_3))) then 
                    empty_436_fu_260 <= survival_path_q0;
                end if;
            end if; 
        end if;
    end process;

    empty_437_fu_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_437_fu_264 <= select_ln42_64;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_2))) then 
                    empty_437_fu_264 <= survival_path_q0;
                end if;
            end if; 
        end if;
    end process;

    empty_438_fu_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_438_fu_268 <= select_ln42_62;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_1))) then 
                    empty_438_fu_268 <= survival_path_q0;
                end if;
            end if; 
        end if;
    end process;

    empty_439_fu_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_439_fu_272 <= select_ln42_61;
                elsif ((ap_const_boolean_1 = ap_condition_509)) then 
                    empty_439_fu_272 <= survival_path_q0;
                end if;
            end if; 
        end if;
    end process;

    empty_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    empty_fu_164 <= select_ln42_21;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln49_1_reg_1336 = ap_const_lv3_6))) then 
                    empty_fu_164 <= survival_path_q1;
                end if;
            end if; 
        end if;
    end process;

    i_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_160 <= ap_const_lv63_7;
                elsif (((icmp_ln48_fu_843_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    i_fu_160 <= add_ln48_fu_852_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_fu_843_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln49_1_reg_1336 <= trunc_ln49_1_fu_848_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    zext_ln36_cast_reg_1318(2 downto 0) <= zext_ln36_cast_fu_671_p1(2 downto 0);
            end if;
        end if;
    end process;
    zext_ln36_cast_reg_1318(62 downto 3) <= "000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln48_fu_852_p2 <= std_logic_vector(unsigned(i_fu_160) + unsigned(ap_const_lv63_7FFFFFFFFFFFFFFF));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_509_assign_proc : process(ap_enable_reg_pp0_iter2, trunc_ln49_1_reg_1336)
    begin
                ap_condition_509 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((trunc_ln49_1_reg_1336 = ap_const_lv3_0) or (trunc_ln49_1_reg_1336 = ap_const_lv3_7)));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln48_fu_843_p2)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    i_27_cast_i_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_160),64));
    icmp_ln48_fu_843_p2 <= "1" when (unsigned(i_fu_160) > unsigned(zext_ln36_cast_reg_1318)) else "0";
    p_out <= empty_439_fu_272;
    p_out1 <= empty_438_fu_268;
    p_out10 <= empty_429_fu_232;

    p_out10_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out10_ap_vld <= ap_const_logic_1;
        else 
            p_out10_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out11 <= empty_428_fu_228;

    p_out11_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out11_ap_vld <= ap_const_logic_1;
        else 
            p_out11_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out12 <= empty_427_fu_224;

    p_out12_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out12_ap_vld <= ap_const_logic_1;
        else 
            p_out12_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out13 <= empty_426_fu_220;

    p_out13_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out13_ap_vld <= ap_const_logic_1;
        else 
            p_out13_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out14 <= empty_425_fu_216;

    p_out14_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out14_ap_vld <= ap_const_logic_1;
        else 
            p_out14_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out15 <= empty_424_fu_212;

    p_out15_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out15_ap_vld <= ap_const_logic_1;
        else 
            p_out15_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out16 <= empty_423_fu_208;

    p_out16_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out16_ap_vld <= ap_const_logic_1;
        else 
            p_out16_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out17 <= empty_422_fu_204;

    p_out17_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out17_ap_vld <= ap_const_logic_1;
        else 
            p_out17_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out18 <= empty_421_fu_200;

    p_out18_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out18_ap_vld <= ap_const_logic_1;
        else 
            p_out18_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out19 <= empty_420_fu_196;

    p_out19_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out19_ap_vld <= ap_const_logic_1;
        else 
            p_out19_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out1_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out1_ap_vld <= ap_const_logic_1;
        else 
            p_out1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out2 <= empty_437_fu_264;
    p_out20 <= empty_419_fu_192;

    p_out20_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out20_ap_vld <= ap_const_logic_1;
        else 
            p_out20_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out21 <= empty_418_fu_188;

    p_out21_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out21_ap_vld <= ap_const_logic_1;
        else 
            p_out21_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out22 <= empty_417_fu_184;

    p_out22_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out22_ap_vld <= ap_const_logic_1;
        else 
            p_out22_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out23 <= empty_416_fu_180;

    p_out23_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out23_ap_vld <= ap_const_logic_1;
        else 
            p_out23_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out24 <= empty_415_fu_176;

    p_out24_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out24_ap_vld <= ap_const_logic_1;
        else 
            p_out24_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out25 <= empty_414_fu_172;

    p_out25_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out25_ap_vld <= ap_const_logic_1;
        else 
            p_out25_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out26 <= empty_413_fu_168;

    p_out26_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out26_ap_vld <= ap_const_logic_1;
        else 
            p_out26_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out27 <= empty_fu_164;

    p_out27_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out27_ap_vld <= ap_const_logic_1;
        else 
            p_out27_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out2_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out2_ap_vld <= ap_const_logic_1;
        else 
            p_out2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out3 <= empty_436_fu_260;

    p_out3_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out3_ap_vld <= ap_const_logic_1;
        else 
            p_out3_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out4 <= empty_435_fu_256;

    p_out4_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out4_ap_vld <= ap_const_logic_1;
        else 
            p_out4_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out5 <= empty_434_fu_252;

    p_out5_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out5_ap_vld <= ap_const_logic_1;
        else 
            p_out5_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out6 <= empty_433_fu_248;

    p_out6_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out6_ap_vld <= ap_const_logic_1;
        else 
            p_out6_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out7 <= empty_432_fu_244;

    p_out7_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out7_ap_vld <= ap_const_logic_1;
        else 
            p_out7_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out8 <= empty_431_fu_240;

    p_out8_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out8_ap_vld <= ap_const_logic_1;
        else 
            p_out8_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_out9 <= empty_430_fu_236;

    p_out9_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out9_ap_vld <= ap_const_logic_1;
        else 
            p_out9_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln48_fu_843_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln48_fu_843_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_out_ap_vld <= ap_const_logic_1;
        else 
            p_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    survival_path_address0 <= zext_ln51_fu_838_p1(4 - 1 downto 0);
    survival_path_address1 <= i_27_cast_i_fu_823_p1(4 - 1 downto 0);

    survival_path_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            survival_path_ce0 <= ap_const_logic_1;
        else 
            survival_path_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    survival_path_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            survival_path_ce1 <= ap_const_logic_1;
        else 
            survival_path_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln49_1_fu_848_p1 <= i_fu_160(3 - 1 downto 0);
    trunc_ln49_fu_828_p1 <= i_fu_160(4 - 1 downto 0);
    xor_ln51_fu_832_p2 <= (trunc_ln49_fu_828_p1 xor ap_const_lv4_8);
    zext_ln36_cast_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln36),63));
    zext_ln51_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln51_fu_832_p2),64));
end behav;
