// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="TOP_TOP,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=27.335000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=30,HLS_SYN_DSP=0,HLS_SYN_FF=79068,HLS_SYN_LUT=187333,HLS_VERSION=2021_2}" *)

module TOP (
        ap_local_block,
        ap_local_deadlock,
        in_data_dout,
        in_data_empty_n,
        in_data_read,
        out_data_din,
        out_data_full_n,
        out_data_write,
        SNR,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


output   ap_local_block;
output   ap_local_deadlock;
input  [7:0] in_data_dout;
input   in_data_empty_n;
output   in_data_read;
output  [7:0] out_data_din;
input   out_data_full_n;
output   out_data_write;
input  [15:0] SNR;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire    entry_proc_U0_start_out;
wire    entry_proc_U0_start_write;
wire   [15:0] entry_proc_U0_SNR_c_din;
wire    entry_proc_U0_SNR_c_write;
wire    AES_En_De27_U0_ap_start;
wire    AES_En_De27_U0_ap_done;
wire    AES_En_De27_U0_ap_continue;
wire    AES_En_De27_U0_ap_idle;
wire    AES_En_De27_U0_ap_ready;
wire    AES_En_De27_U0_start_out;
wire    AES_En_De27_U0_start_write;
wire    AES_En_De27_U0_in_data_read;
wire   [7:0] AES_En_De27_U0_AES_EN_out_din;
wire    AES_En_De27_U0_AES_EN_out_write;
wire    Modulation_U0_ap_start;
wire    Modulation_U0_ap_done;
wire    Modulation_U0_ap_continue;
wire    Modulation_U0_ap_idle;
wire    Modulation_U0_ap_ready;
wire    Modulation_U0_AES_EN_out_read;
wire   [15:0] Modulation_U0_xr_din;
wire    Modulation_U0_xr_write;
wire   [15:0] Modulation_U0_xi_din;
wire    Modulation_U0_xi_write;
wire    Modulation_U0_start_out;
wire    Modulation_U0_start_write;
wire    Rayleigh_1_U0_ap_start;
wire    Rayleigh_1_U0_start_full_n;
wire    Rayleigh_1_U0_ap_done;
wire    Rayleigh_1_U0_ap_continue;
wire    Rayleigh_1_U0_ap_idle;
wire    Rayleigh_1_U0_ap_ready;
wire    Rayleigh_1_U0_start_out;
wire    Rayleigh_1_U0_start_write;
wire   [15:0] Rayleigh_1_U0_H_real_din;
wire    Rayleigh_1_U0_H_real_write;
wire   [15:0] Rayleigh_1_U0_H_imag_din;
wire    Rayleigh_1_U0_H_imag_write;
wire    split_U0_ap_start;
wire    split_U0_ap_done;
wire    split_U0_ap_continue;
wire    split_U0_ap_idle;
wire    split_U0_ap_ready;
wire    split_U0_H_real_read;
wire   [15:0] split_U0_H_real_spl0_din;
wire    split_U0_H_real_spl0_write;
wire   [15:0] split_U0_H_real_spl1_din;
wire    split_U0_H_real_spl1_write;
wire    split_U0_start_out;
wire    split_U0_start_write;
wire    split_1_U0_ap_start;
wire    split_1_U0_ap_done;
wire    split_1_U0_ap_continue;
wire    split_1_U0_ap_idle;
wire    split_1_U0_ap_ready;
wire    split_1_U0_H_imag_read;
wire   [15:0] split_1_U0_H_imag_spl0_din;
wire    split_1_U0_H_imag_spl0_write;
wire   [15:0] split_1_U0_H_imag_spl1_din;
wire    split_1_U0_H_imag_spl1_write;
wire    QRD_U0_ap_start;
wire    QRD_U0_ap_done;
wire    QRD_U0_ap_continue;
wire    QRD_U0_ap_idle;
wire    QRD_U0_ap_ready;
wire    QRD_U0_start_out;
wire    QRD_U0_start_write;
wire    QRD_U0_H_real_spl1_read;
wire    QRD_U0_H_imag_spl1_read;
wire   [15:0] QRD_U0_R_din;
wire    QRD_U0_R_write;
wire   [15:0] QRD_U0_Q_din;
wire    QRD_U0_Q_write;
wire    channel_mult_U0_ap_start;
wire    channel_mult_U0_ap_done;
wire    channel_mult_U0_ap_continue;
wire    channel_mult_U0_ap_idle;
wire    channel_mult_U0_ap_ready;
wire    channel_mult_U0_H_real_spl0_read;
wire    channel_mult_U0_H_imag_spl0_read;
wire    channel_mult_U0_xr_read;
wire    channel_mult_U0_xi_read;
wire   [15:0] channel_mult_U0_channel_out_din;
wire    channel_mult_U0_channel_out_write;
wire    AWGN_1_U0_ap_start;
wire    AWGN_1_U0_ap_done;
wire    AWGN_1_U0_ap_continue;
wire    AWGN_1_U0_ap_idle;
wire    AWGN_1_U0_ap_ready;
wire    AWGN_1_U0_start_out;
wire    AWGN_1_U0_start_write;
wire    AWGN_1_U0_SNR_read;
wire    AWGN_1_U0_channel_out_read;
wire   [15:0] AWGN_1_U0_noise_out_din;
wire    AWGN_1_U0_noise_out_write;
wire    matrix_mult_U0_ap_start;
wire    matrix_mult_U0_ap_done;
wire    matrix_mult_U0_ap_continue;
wire    matrix_mult_U0_ap_idle;
wire    matrix_mult_U0_ap_ready;
wire    matrix_mult_U0_Q_read;
wire    matrix_mult_U0_noise_out_read;
wire   [15:0] matrix_mult_U0_MULQ_out_din;
wire    matrix_mult_U0_MULQ_out_write;
wire    KBEST_U0_ap_start;
wire    KBEST_U0_ap_done;
wire    KBEST_U0_ap_continue;
wire    KBEST_U0_ap_idle;
wire    KBEST_U0_ap_ready;
wire    KBEST_U0_start_out;
wire    KBEST_U0_start_write;
wire    KBEST_U0_R_read;
wire    KBEST_U0_MULQ_out_read;
wire   [15:0] KBEST_U0_KB_out_din;
wire    KBEST_U0_KB_out_write;
wire    DeModulation_U0_ap_start;
wire    DeModulation_U0_ap_done;
wire    DeModulation_U0_ap_continue;
wire    DeModulation_U0_ap_idle;
wire    DeModulation_U0_ap_ready;
wire    DeModulation_U0_KB_out_read;
wire   [7:0] DeModulation_U0_demod_out_din;
wire    DeModulation_U0_demod_out_write;
wire    DeModulation_U0_start_out;
wire    DeModulation_U0_start_write;
wire    AES_En_De_128_U0_ap_start;
wire    AES_En_De_128_U0_ap_done;
wire    AES_En_De_128_U0_ap_continue;
wire    AES_En_De_128_U0_ap_idle;
wire    AES_En_De_128_U0_ap_ready;
wire   [7:0] AES_En_De_128_U0_out_data_din;
wire    AES_En_De_128_U0_out_data_write;
wire    AES_En_De_128_U0_demod_out_read;
wire    SNR_c_full_n;
wire   [15:0] SNR_c_dout;
wire    SNR_c_empty_n;
wire    AES_EN_out_full_n;
wire   [7:0] AES_EN_out_dout;
wire    AES_EN_out_empty_n;
wire    xi_full_n;
wire   [15:0] xi_dout;
wire    xi_empty_n;
wire    xr_full_n;
wire   [15:0] xr_dout;
wire    xr_empty_n;
wire    H_real_full_n;
wire   [15:0] H_real_dout;
wire    H_real_empty_n;
wire    H_imag_full_n;
wire   [15:0] H_imag_dout;
wire    H_imag_empty_n;
wire    H_real_spl0_full_n;
wire   [15:0] H_real_spl0_dout;
wire    H_real_spl0_empty_n;
wire    H_real_spl1_full_n;
wire   [15:0] H_real_spl1_dout;
wire    H_real_spl1_empty_n;
wire    H_imag_spl0_full_n;
wire   [15:0] H_imag_spl0_dout;
wire    H_imag_spl0_empty_n;
wire    H_imag_spl1_full_n;
wire   [15:0] H_imag_spl1_dout;
wire    H_imag_spl1_empty_n;
wire    R_full_n;
wire   [15:0] R_dout;
wire    R_empty_n;
wire    Q_full_n;
wire   [15:0] Q_dout;
wire    Q_empty_n;
wire    channel_out_full_n;
wire   [15:0] channel_out_dout;
wire    channel_out_empty_n;
wire    noise_out_full_n;
wire   [15:0] noise_out_dout;
wire    noise_out_empty_n;
wire    MULQ_out_full_n;
wire   [15:0] MULQ_out_dout;
wire    MULQ_out_empty_n;
wire    KB_out_full_n;
wire   [15:0] KB_out_dout;
wire    KB_out_empty_n;
wire    demod_out_full_n;
wire   [7:0] demod_out_dout;
wire    demod_out_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_AES_En_De27_U0_ap_ready;
wire    ap_sync_AES_En_De27_U0_ap_ready;
reg    ap_sync_reg_Rayleigh_1_U0_ap_ready;
wire    ap_sync_Rayleigh_1_U0_ap_ready;
wire   [0:0] start_for_AWGN_1_U0_din;
wire    start_for_AWGN_1_U0_full_n;
wire   [0:0] start_for_AWGN_1_U0_dout;
wire    start_for_AWGN_1_U0_empty_n;
wire   [0:0] start_for_Modulation_U0_din;
wire    start_for_Modulation_U0_full_n;
wire   [0:0] start_for_Modulation_U0_dout;
wire    start_for_Modulation_U0_empty_n;
wire   [0:0] start_for_channel_mult_U0_din;
wire    start_for_channel_mult_U0_full_n;
wire   [0:0] start_for_channel_mult_U0_dout;
wire    start_for_channel_mult_U0_empty_n;
wire   [0:0] start_for_split_U0_din;
wire    start_for_split_U0_full_n;
wire   [0:0] start_for_split_U0_dout;
wire    start_for_split_U0_empty_n;
wire   [0:0] start_for_split_1_U0_din;
wire    start_for_split_1_U0_full_n;
wire   [0:0] start_for_split_1_U0_dout;
wire    start_for_split_1_U0_empty_n;
wire   [0:0] start_for_QRD_U0_din;
wire    start_for_QRD_U0_full_n;
wire   [0:0] start_for_QRD_U0_dout;
wire    start_for_QRD_U0_empty_n;
wire   [0:0] start_for_KBEST_U0_din;
wire    start_for_KBEST_U0_full_n;
wire   [0:0] start_for_KBEST_U0_dout;
wire    start_for_KBEST_U0_empty_n;
wire   [0:0] start_for_matrix_mult_U0_din;
wire    start_for_matrix_mult_U0_full_n;
wire   [0:0] start_for_matrix_mult_U0_dout;
wire    start_for_matrix_mult_U0_empty_n;
wire   [0:0] start_for_DeModulation_U0_din;
wire    start_for_DeModulation_U0_full_n;
wire   [0:0] start_for_DeModulation_U0_dout;
wire    start_for_DeModulation_U0_empty_n;
wire   [0:0] start_for_AES_En_De_128_U0_din;
wire    start_for_AES_En_De_128_U0_full_n;
wire   [0:0] start_for_AES_En_De_128_U0_dout;
wire    start_for_AES_En_De_128_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_AES_En_De27_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Rayleigh_1_U0_ap_ready = 1'b0;
end

TOP_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(entry_proc_U0_ap_start),
    .start_full_n(start_for_AWGN_1_U0_full_n),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .start_out(entry_proc_U0_start_out),
    .start_write(entry_proc_U0_start_write),
    .SNR(SNR),
    .SNR_c_din(entry_proc_U0_SNR_c_din),
    .SNR_c_full_n(SNR_c_full_n),
    .SNR_c_write(entry_proc_U0_SNR_c_write)
);

TOP_AES_En_De27 AES_En_De27_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(AES_En_De27_U0_ap_start),
    .start_full_n(start_for_Modulation_U0_full_n),
    .ap_done(AES_En_De27_U0_ap_done),
    .ap_continue(AES_En_De27_U0_ap_continue),
    .ap_idle(AES_En_De27_U0_ap_idle),
    .ap_ready(AES_En_De27_U0_ap_ready),
    .start_out(AES_En_De27_U0_start_out),
    .start_write(AES_En_De27_U0_start_write),
    .in_data_dout(in_data_dout),
    .in_data_empty_n(in_data_empty_n),
    .in_data_read(AES_En_De27_U0_in_data_read),
    .AES_EN_out_din(AES_En_De27_U0_AES_EN_out_din),
    .AES_EN_out_full_n(AES_EN_out_full_n),
    .AES_EN_out_write(AES_En_De27_U0_AES_EN_out_write)
);

TOP_Modulation Modulation_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Modulation_U0_ap_start),
    .start_full_n(start_for_channel_mult_U0_full_n),
    .ap_done(Modulation_U0_ap_done),
    .ap_continue(Modulation_U0_ap_continue),
    .ap_idle(Modulation_U0_ap_idle),
    .ap_ready(Modulation_U0_ap_ready),
    .AES_EN_out_dout(AES_EN_out_dout),
    .AES_EN_out_empty_n(AES_EN_out_empty_n),
    .AES_EN_out_read(Modulation_U0_AES_EN_out_read),
    .xr_din(Modulation_U0_xr_din),
    .xr_full_n(xr_full_n),
    .xr_write(Modulation_U0_xr_write),
    .xi_din(Modulation_U0_xi_din),
    .xi_full_n(xi_full_n),
    .xi_write(Modulation_U0_xi_write),
    .start_out(Modulation_U0_start_out),
    .start_write(Modulation_U0_start_write)
);

TOP_Rayleigh_1 Rayleigh_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Rayleigh_1_U0_ap_start),
    .start_full_n(Rayleigh_1_U0_start_full_n),
    .ap_done(Rayleigh_1_U0_ap_done),
    .ap_continue(Rayleigh_1_U0_ap_continue),
    .ap_idle(Rayleigh_1_U0_ap_idle),
    .ap_ready(Rayleigh_1_U0_ap_ready),
    .start_out(Rayleigh_1_U0_start_out),
    .start_write(Rayleigh_1_U0_start_write),
    .H_real_din(Rayleigh_1_U0_H_real_din),
    .H_real_full_n(H_real_full_n),
    .H_real_write(Rayleigh_1_U0_H_real_write),
    .H_imag_din(Rayleigh_1_U0_H_imag_din),
    .H_imag_full_n(H_imag_full_n),
    .H_imag_write(Rayleigh_1_U0_H_imag_write)
);

TOP_split split_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(split_U0_ap_start),
    .start_full_n(start_for_QRD_U0_full_n),
    .ap_done(split_U0_ap_done),
    .ap_continue(split_U0_ap_continue),
    .ap_idle(split_U0_ap_idle),
    .ap_ready(split_U0_ap_ready),
    .H_real_dout(H_real_dout),
    .H_real_empty_n(H_real_empty_n),
    .H_real_read(split_U0_H_real_read),
    .H_real_spl0_din(split_U0_H_real_spl0_din),
    .H_real_spl0_full_n(H_real_spl0_full_n),
    .H_real_spl0_write(split_U0_H_real_spl0_write),
    .H_real_spl1_din(split_U0_H_real_spl1_din),
    .H_real_spl1_full_n(H_real_spl1_full_n),
    .H_real_spl1_write(split_U0_H_real_spl1_write),
    .start_out(split_U0_start_out),
    .start_write(split_U0_start_write)
);

TOP_split_1 split_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(split_1_U0_ap_start),
    .ap_done(split_1_U0_ap_done),
    .ap_continue(split_1_U0_ap_continue),
    .ap_idle(split_1_U0_ap_idle),
    .ap_ready(split_1_U0_ap_ready),
    .H_imag_dout(H_imag_dout),
    .H_imag_empty_n(H_imag_empty_n),
    .H_imag_read(split_1_U0_H_imag_read),
    .H_imag_spl0_din(split_1_U0_H_imag_spl0_din),
    .H_imag_spl0_full_n(H_imag_spl0_full_n),
    .H_imag_spl0_write(split_1_U0_H_imag_spl0_write),
    .H_imag_spl1_din(split_1_U0_H_imag_spl1_din),
    .H_imag_spl1_full_n(H_imag_spl1_full_n),
    .H_imag_spl1_write(split_1_U0_H_imag_spl1_write)
);

TOP_QRD QRD_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(QRD_U0_ap_start),
    .start_full_n(start_for_KBEST_U0_full_n),
    .ap_done(QRD_U0_ap_done),
    .ap_continue(QRD_U0_ap_continue),
    .ap_idle(QRD_U0_ap_idle),
    .ap_ready(QRD_U0_ap_ready),
    .start_out(QRD_U0_start_out),
    .start_write(QRD_U0_start_write),
    .H_real_spl1_dout(H_real_spl1_dout),
    .H_real_spl1_empty_n(H_real_spl1_empty_n),
    .H_real_spl1_read(QRD_U0_H_real_spl1_read),
    .H_imag_spl1_dout(H_imag_spl1_dout),
    .H_imag_spl1_empty_n(H_imag_spl1_empty_n),
    .H_imag_spl1_read(QRD_U0_H_imag_spl1_read),
    .R_din(QRD_U0_R_din),
    .R_full_n(R_full_n),
    .R_write(QRD_U0_R_write),
    .Q_din(QRD_U0_Q_din),
    .Q_full_n(Q_full_n),
    .Q_write(QRD_U0_Q_write)
);

TOP_channel_mult channel_mult_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(channel_mult_U0_ap_start),
    .ap_done(channel_mult_U0_ap_done),
    .ap_continue(channel_mult_U0_ap_continue),
    .ap_idle(channel_mult_U0_ap_idle),
    .ap_ready(channel_mult_U0_ap_ready),
    .H_real_spl0_dout(H_real_spl0_dout),
    .H_real_spl0_empty_n(H_real_spl0_empty_n),
    .H_real_spl0_read(channel_mult_U0_H_real_spl0_read),
    .H_imag_spl0_dout(H_imag_spl0_dout),
    .H_imag_spl0_empty_n(H_imag_spl0_empty_n),
    .H_imag_spl0_read(channel_mult_U0_H_imag_spl0_read),
    .xr_dout(xr_dout),
    .xr_empty_n(xr_empty_n),
    .xr_read(channel_mult_U0_xr_read),
    .xi_dout(xi_dout),
    .xi_empty_n(xi_empty_n),
    .xi_read(channel_mult_U0_xi_read),
    .channel_out_din(channel_mult_U0_channel_out_din),
    .channel_out_full_n(channel_out_full_n),
    .channel_out_write(channel_mult_U0_channel_out_write)
);

TOP_AWGN_1 AWGN_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(AWGN_1_U0_ap_start),
    .start_full_n(start_for_matrix_mult_U0_full_n),
    .ap_done(AWGN_1_U0_ap_done),
    .ap_continue(AWGN_1_U0_ap_continue),
    .ap_idle(AWGN_1_U0_ap_idle),
    .ap_ready(AWGN_1_U0_ap_ready),
    .start_out(AWGN_1_U0_start_out),
    .start_write(AWGN_1_U0_start_write),
    .SNR_dout(SNR_c_dout),
    .SNR_empty_n(SNR_c_empty_n),
    .SNR_read(AWGN_1_U0_SNR_read),
    .channel_out_dout(channel_out_dout),
    .channel_out_empty_n(channel_out_empty_n),
    .channel_out_read(AWGN_1_U0_channel_out_read),
    .noise_out_din(AWGN_1_U0_noise_out_din),
    .noise_out_full_n(noise_out_full_n),
    .noise_out_write(AWGN_1_U0_noise_out_write)
);

TOP_matrix_mult matrix_mult_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(matrix_mult_U0_ap_start),
    .ap_done(matrix_mult_U0_ap_done),
    .ap_continue(matrix_mult_U0_ap_continue),
    .ap_idle(matrix_mult_U0_ap_idle),
    .ap_ready(matrix_mult_U0_ap_ready),
    .Q_dout(Q_dout),
    .Q_empty_n(Q_empty_n),
    .Q_read(matrix_mult_U0_Q_read),
    .noise_out_dout(noise_out_dout),
    .noise_out_empty_n(noise_out_empty_n),
    .noise_out_read(matrix_mult_U0_noise_out_read),
    .MULQ_out_din(matrix_mult_U0_MULQ_out_din),
    .MULQ_out_full_n(MULQ_out_full_n),
    .MULQ_out_write(matrix_mult_U0_MULQ_out_write)
);

TOP_KBEST KBEST_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(KBEST_U0_ap_start),
    .start_full_n(start_for_DeModulation_U0_full_n),
    .ap_done(KBEST_U0_ap_done),
    .ap_continue(KBEST_U0_ap_continue),
    .ap_idle(KBEST_U0_ap_idle),
    .ap_ready(KBEST_U0_ap_ready),
    .start_out(KBEST_U0_start_out),
    .start_write(KBEST_U0_start_write),
    .R_dout(R_dout),
    .R_empty_n(R_empty_n),
    .R_read(KBEST_U0_R_read),
    .MULQ_out_dout(MULQ_out_dout),
    .MULQ_out_empty_n(MULQ_out_empty_n),
    .MULQ_out_read(KBEST_U0_MULQ_out_read),
    .KB_out_din(KBEST_U0_KB_out_din),
    .KB_out_full_n(KB_out_full_n),
    .KB_out_write(KBEST_U0_KB_out_write)
);

TOP_DeModulation DeModulation_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(DeModulation_U0_ap_start),
    .start_full_n(start_for_AES_En_De_128_U0_full_n),
    .ap_done(DeModulation_U0_ap_done),
    .ap_continue(DeModulation_U0_ap_continue),
    .ap_idle(DeModulation_U0_ap_idle),
    .ap_ready(DeModulation_U0_ap_ready),
    .KB_out_dout(KB_out_dout),
    .KB_out_empty_n(KB_out_empty_n),
    .KB_out_read(DeModulation_U0_KB_out_read),
    .demod_out_din(DeModulation_U0_demod_out_din),
    .demod_out_full_n(demod_out_full_n),
    .demod_out_write(DeModulation_U0_demod_out_write),
    .start_out(DeModulation_U0_start_out),
    .start_write(DeModulation_U0_start_write)
);

TOP_AES_En_De_128 AES_En_De_128_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(AES_En_De_128_U0_ap_start),
    .ap_done(AES_En_De_128_U0_ap_done),
    .ap_continue(AES_En_De_128_U0_ap_continue),
    .ap_idle(AES_En_De_128_U0_ap_idle),
    .ap_ready(AES_En_De_128_U0_ap_ready),
    .out_data_din(AES_En_De_128_U0_out_data_din),
    .out_data_full_n(out_data_full_n),
    .out_data_write(AES_En_De_128_U0_out_data_write),
    .demod_out_dout(demod_out_dout),
    .demod_out_empty_n(demod_out_empty_n),
    .demod_out_read(AES_En_De_128_U0_demod_out_read)
);

TOP_fifo_w16_d5_S SNR_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_SNR_c_din),
    .if_full_n(SNR_c_full_n),
    .if_write(entry_proc_U0_SNR_c_write),
    .if_dout(SNR_c_dout),
    .if_empty_n(SNR_c_empty_n),
    .if_read(AWGN_1_U0_SNR_read)
);

TOP_fifo_w8_d2_S AES_EN_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AES_En_De27_U0_AES_EN_out_din),
    .if_full_n(AES_EN_out_full_n),
    .if_write(AES_En_De27_U0_AES_EN_out_write),
    .if_dout(AES_EN_out_dout),
    .if_empty_n(AES_EN_out_empty_n),
    .if_read(Modulation_U0_AES_EN_out_read)
);

TOP_fifo_w16_d128_A xi_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Modulation_U0_xi_din),
    .if_full_n(xi_full_n),
    .if_write(Modulation_U0_xi_write),
    .if_dout(xi_dout),
    .if_empty_n(xi_empty_n),
    .if_read(channel_mult_U0_xi_read)
);

TOP_fifo_w16_d128_A xr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Modulation_U0_xr_din),
    .if_full_n(xr_full_n),
    .if_write(Modulation_U0_xr_write),
    .if_dout(xr_dout),
    .if_empty_n(xr_empty_n),
    .if_read(channel_mult_U0_xr_read)
);

TOP_fifo_w16_d2_S H_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Rayleigh_1_U0_H_real_din),
    .if_full_n(H_real_full_n),
    .if_write(Rayleigh_1_U0_H_real_write),
    .if_dout(H_real_dout),
    .if_empty_n(H_real_empty_n),
    .if_read(split_U0_H_real_read)
);

TOP_fifo_w16_d2_S H_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Rayleigh_1_U0_H_imag_din),
    .if_full_n(H_imag_full_n),
    .if_write(Rayleigh_1_U0_H_imag_write),
    .if_dout(H_imag_dout),
    .if_empty_n(H_imag_empty_n),
    .if_read(split_1_U0_H_imag_read)
);

TOP_fifo_w16_d2_S H_real_spl0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_U0_H_real_spl0_din),
    .if_full_n(H_real_spl0_full_n),
    .if_write(split_U0_H_real_spl0_write),
    .if_dout(H_real_spl0_dout),
    .if_empty_n(H_real_spl0_empty_n),
    .if_read(channel_mult_U0_H_real_spl0_read)
);

TOP_fifo_w16_d2_S H_real_spl1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_U0_H_real_spl1_din),
    .if_full_n(H_real_spl1_full_n),
    .if_write(split_U0_H_real_spl1_write),
    .if_dout(H_real_spl1_dout),
    .if_empty_n(H_real_spl1_empty_n),
    .if_read(QRD_U0_H_real_spl1_read)
);

TOP_fifo_w16_d2_S H_imag_spl0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_1_U0_H_imag_spl0_din),
    .if_full_n(H_imag_spl0_full_n),
    .if_write(split_1_U0_H_imag_spl0_write),
    .if_dout(H_imag_spl0_dout),
    .if_empty_n(H_imag_spl0_empty_n),
    .if_read(channel_mult_U0_H_imag_spl0_read)
);

TOP_fifo_w16_d2_S H_imag_spl1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(split_1_U0_H_imag_spl1_din),
    .if_full_n(H_imag_spl1_full_n),
    .if_write(split_1_U0_H_imag_spl1_write),
    .if_dout(H_imag_spl1_dout),
    .if_empty_n(H_imag_spl1_empty_n),
    .if_read(QRD_U0_H_imag_spl1_read)
);

TOP_fifo_w16_d4_S R_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(QRD_U0_R_din),
    .if_full_n(R_full_n),
    .if_write(QRD_U0_R_write),
    .if_dout(R_dout),
    .if_empty_n(R_empty_n),
    .if_read(KBEST_U0_R_read)
);

TOP_fifo_w16_d4_S Q_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(QRD_U0_Q_din),
    .if_full_n(Q_full_n),
    .if_write(QRD_U0_Q_write),
    .if_dout(Q_dout),
    .if_empty_n(Q_empty_n),
    .if_read(matrix_mult_U0_Q_read)
);

TOP_fifo_w16_d2_S channel_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(channel_mult_U0_channel_out_din),
    .if_full_n(channel_out_full_n),
    .if_write(channel_mult_U0_channel_out_write),
    .if_dout(channel_out_dout),
    .if_empty_n(channel_out_empty_n),
    .if_read(AWGN_1_U0_channel_out_read)
);

TOP_fifo_w16_d2_S noise_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AWGN_1_U0_noise_out_din),
    .if_full_n(noise_out_full_n),
    .if_write(AWGN_1_U0_noise_out_write),
    .if_dout(noise_out_dout),
    .if_empty_n(noise_out_empty_n),
    .if_read(matrix_mult_U0_noise_out_read)
);

TOP_fifo_w16_d2_S MULQ_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(matrix_mult_U0_MULQ_out_din),
    .if_full_n(MULQ_out_full_n),
    .if_write(matrix_mult_U0_MULQ_out_write),
    .if_dout(MULQ_out_dout),
    .if_empty_n(MULQ_out_empty_n),
    .if_read(KBEST_U0_MULQ_out_read)
);

TOP_fifo_w16_d2_S KB_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(KBEST_U0_KB_out_din),
    .if_full_n(KB_out_full_n),
    .if_write(KBEST_U0_KB_out_write),
    .if_dout(KB_out_dout),
    .if_empty_n(KB_out_empty_n),
    .if_read(DeModulation_U0_KB_out_read)
);

TOP_fifo_w8_d2_S demod_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(DeModulation_U0_demod_out_din),
    .if_full_n(demod_out_full_n),
    .if_write(DeModulation_U0_demod_out_write),
    .if_dout(demod_out_dout),
    .if_empty_n(demod_out_empty_n),
    .if_read(AES_En_De_128_U0_demod_out_read)
);

TOP_start_for_AWGN_1_U0 start_for_AWGN_1_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_AWGN_1_U0_din),
    .if_full_n(start_for_AWGN_1_U0_full_n),
    .if_write(entry_proc_U0_start_write),
    .if_dout(start_for_AWGN_1_U0_dout),
    .if_empty_n(start_for_AWGN_1_U0_empty_n),
    .if_read(AWGN_1_U0_ap_ready)
);

TOP_start_for_Modulation_U0 start_for_Modulation_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Modulation_U0_din),
    .if_full_n(start_for_Modulation_U0_full_n),
    .if_write(AES_En_De27_U0_start_write),
    .if_dout(start_for_Modulation_U0_dout),
    .if_empty_n(start_for_Modulation_U0_empty_n),
    .if_read(Modulation_U0_ap_ready)
);

TOP_start_for_channel_mult_U0 start_for_channel_mult_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_channel_mult_U0_din),
    .if_full_n(start_for_channel_mult_U0_full_n),
    .if_write(Modulation_U0_start_write),
    .if_dout(start_for_channel_mult_U0_dout),
    .if_empty_n(start_for_channel_mult_U0_empty_n),
    .if_read(channel_mult_U0_ap_ready)
);

TOP_start_for_split_U0 start_for_split_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_split_U0_din),
    .if_full_n(start_for_split_U0_full_n),
    .if_write(Rayleigh_1_U0_start_write),
    .if_dout(start_for_split_U0_dout),
    .if_empty_n(start_for_split_U0_empty_n),
    .if_read(split_U0_ap_ready)
);

TOP_start_for_split_1_U0 start_for_split_1_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_split_1_U0_din),
    .if_full_n(start_for_split_1_U0_full_n),
    .if_write(Rayleigh_1_U0_start_write),
    .if_dout(start_for_split_1_U0_dout),
    .if_empty_n(start_for_split_1_U0_empty_n),
    .if_read(split_1_U0_ap_ready)
);

TOP_start_for_QRD_U0 start_for_QRD_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_QRD_U0_din),
    .if_full_n(start_for_QRD_U0_full_n),
    .if_write(split_U0_start_write),
    .if_dout(start_for_QRD_U0_dout),
    .if_empty_n(start_for_QRD_U0_empty_n),
    .if_read(QRD_U0_ap_ready)
);

TOP_start_for_KBEST_U0 start_for_KBEST_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_KBEST_U0_din),
    .if_full_n(start_for_KBEST_U0_full_n),
    .if_write(QRD_U0_start_write),
    .if_dout(start_for_KBEST_U0_dout),
    .if_empty_n(start_for_KBEST_U0_empty_n),
    .if_read(KBEST_U0_ap_ready)
);

TOP_start_for_matrix_mult_U0 start_for_matrix_mult_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_matrix_mult_U0_din),
    .if_full_n(start_for_matrix_mult_U0_full_n),
    .if_write(AWGN_1_U0_start_write),
    .if_dout(start_for_matrix_mult_U0_dout),
    .if_empty_n(start_for_matrix_mult_U0_empty_n),
    .if_read(matrix_mult_U0_ap_ready)
);

TOP_start_for_DeModulation_U0 start_for_DeModulation_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_DeModulation_U0_din),
    .if_full_n(start_for_DeModulation_U0_full_n),
    .if_write(KBEST_U0_start_write),
    .if_dout(start_for_DeModulation_U0_dout),
    .if_empty_n(start_for_DeModulation_U0_empty_n),
    .if_read(DeModulation_U0_ap_ready)
);

TOP_start_for_AES_En_De_128_U0 start_for_AES_En_De_128_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_AES_En_De_128_U0_din),
    .if_full_n(start_for_AES_En_De_128_U0_full_n),
    .if_write(DeModulation_U0_start_write),
    .if_dout(start_for_AES_En_De_128_U0_dout),
    .if_empty_n(start_for_AES_En_De_128_U0_empty_n),
    .if_read(AES_En_De_128_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_AES_En_De27_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_AES_En_De27_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AES_En_De27_U0_ap_ready <= ap_sync_AES_En_De27_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Rayleigh_1_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Rayleigh_1_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Rayleigh_1_U0_ap_ready <= ap_sync_Rayleigh_1_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

assign AES_En_De27_U0_ap_continue = 1'b1;

assign AES_En_De27_U0_ap_start = ((ap_sync_reg_AES_En_De27_U0_ap_ready ^ 1'b1) & ap_start);

assign AES_En_De_128_U0_ap_continue = 1'b1;

assign AES_En_De_128_U0_ap_start = start_for_AES_En_De_128_U0_empty_n;

assign AWGN_1_U0_ap_continue = 1'b1;

assign AWGN_1_U0_ap_start = start_for_AWGN_1_U0_empty_n;

assign DeModulation_U0_ap_continue = 1'b1;

assign DeModulation_U0_ap_start = start_for_DeModulation_U0_empty_n;

assign KBEST_U0_ap_continue = 1'b1;

assign KBEST_U0_ap_start = start_for_KBEST_U0_empty_n;

assign Modulation_U0_ap_continue = 1'b1;

assign Modulation_U0_ap_start = start_for_Modulation_U0_empty_n;

assign QRD_U0_ap_continue = 1'b1;

assign QRD_U0_ap_start = start_for_QRD_U0_empty_n;

assign Rayleigh_1_U0_ap_continue = 1'b1;

assign Rayleigh_1_U0_ap_start = ((ap_sync_reg_Rayleigh_1_U0_ap_ready ^ 1'b1) & ap_start);

assign Rayleigh_1_U0_start_full_n = (start_for_split_U0_full_n & start_for_split_1_U0_full_n);

assign ap_done = AES_En_De_128_U0_ap_done;

assign ap_idle = (split_U0_ap_idle & split_1_U0_ap_idle & matrix_mult_U0_ap_idle & entry_proc_U0_ap_idle & channel_mult_U0_ap_idle & Rayleigh_1_U0_ap_idle & QRD_U0_ap_idle & Modulation_U0_ap_idle & KBEST_U0_ap_idle & DeModulation_U0_ap_idle & AWGN_1_U0_ap_idle & AES_En_De_128_U0_ap_idle & AES_En_De27_U0_ap_idle);

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

assign ap_ready = ap_sync_ready;

assign ap_sync_AES_En_De27_U0_ap_ready = (ap_sync_reg_AES_En_De27_U0_ap_ready | AES_En_De27_U0_ap_ready);

assign ap_sync_Rayleigh_1_U0_ap_ready = (ap_sync_reg_Rayleigh_1_U0_ap_ready | Rayleigh_1_U0_ap_ready);

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_ready = (ap_sync_entry_proc_U0_ap_ready & ap_sync_Rayleigh_1_U0_ap_ready & ap_sync_AES_En_De27_U0_ap_ready);

assign channel_mult_U0_ap_continue = 1'b1;

assign channel_mult_U0_ap_start = start_for_channel_mult_U0_empty_n;

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign in_data_read = AES_En_De27_U0_in_data_read;

assign matrix_mult_U0_ap_continue = 1'b1;

assign matrix_mult_U0_ap_start = start_for_matrix_mult_U0_empty_n;

assign out_data_din = AES_En_De_128_U0_out_data_din;

assign out_data_write = AES_En_De_128_U0_out_data_write;

assign split_1_U0_ap_continue = 1'b1;

assign split_1_U0_ap_start = start_for_split_1_U0_empty_n;

assign split_U0_ap_continue = 1'b1;

assign split_U0_ap_start = start_for_split_U0_empty_n;

assign start_for_AES_En_De_128_U0_din = 1'b1;

assign start_for_AWGN_1_U0_din = 1'b1;

assign start_for_DeModulation_U0_din = 1'b1;

assign start_for_KBEST_U0_din = 1'b1;

assign start_for_Modulation_U0_din = 1'b1;

assign start_for_QRD_U0_din = 1'b1;

assign start_for_channel_mult_U0_din = 1'b1;

assign start_for_matrix_mult_U0_din = 1'b1;

assign start_for_split_1_U0_din = 1'b1;

assign start_for_split_U0_din = 1'b1;

endmodule //TOP
