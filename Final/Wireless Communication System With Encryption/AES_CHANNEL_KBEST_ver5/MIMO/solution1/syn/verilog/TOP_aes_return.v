// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module TOP_aes_return (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        w_address0,
        w_ce0,
        w_q0,
        w_address1,
        w_ce1,
        w_q1
);

parameter    ap_ST_fsm_state1 = 47'd1;
parameter    ap_ST_fsm_state2 = 47'd2;
parameter    ap_ST_fsm_state3 = 47'd4;
parameter    ap_ST_fsm_state4 = 47'd8;
parameter    ap_ST_fsm_state5 = 47'd16;
parameter    ap_ST_fsm_state6 = 47'd32;
parameter    ap_ST_fsm_state7 = 47'd64;
parameter    ap_ST_fsm_state8 = 47'd128;
parameter    ap_ST_fsm_state9 = 47'd256;
parameter    ap_ST_fsm_state10 = 47'd512;
parameter    ap_ST_fsm_state11 = 47'd1024;
parameter    ap_ST_fsm_state12 = 47'd2048;
parameter    ap_ST_fsm_state13 = 47'd4096;
parameter    ap_ST_fsm_state14 = 47'd8192;
parameter    ap_ST_fsm_state15 = 47'd16384;
parameter    ap_ST_fsm_state16 = 47'd32768;
parameter    ap_ST_fsm_state17 = 47'd65536;
parameter    ap_ST_fsm_state18 = 47'd131072;
parameter    ap_ST_fsm_state19 = 47'd262144;
parameter    ap_ST_fsm_state20 = 47'd524288;
parameter    ap_ST_fsm_state21 = 47'd1048576;
parameter    ap_ST_fsm_state22 = 47'd2097152;
parameter    ap_ST_fsm_state23 = 47'd4194304;
parameter    ap_ST_fsm_state24 = 47'd8388608;
parameter    ap_ST_fsm_state25 = 47'd16777216;
parameter    ap_ST_fsm_state26 = 47'd33554432;
parameter    ap_ST_fsm_state27 = 47'd67108864;
parameter    ap_ST_fsm_state28 = 47'd134217728;
parameter    ap_ST_fsm_state29 = 47'd268435456;
parameter    ap_ST_fsm_state30 = 47'd536870912;
parameter    ap_ST_fsm_state31 = 47'd1073741824;
parameter    ap_ST_fsm_state32 = 47'd2147483648;
parameter    ap_ST_fsm_state33 = 47'd4294967296;
parameter    ap_ST_fsm_state34 = 47'd8589934592;
parameter    ap_ST_fsm_state35 = 47'd17179869184;
parameter    ap_ST_fsm_state36 = 47'd34359738368;
parameter    ap_ST_fsm_state37 = 47'd68719476736;
parameter    ap_ST_fsm_state38 = 47'd137438953472;
parameter    ap_ST_fsm_state39 = 47'd274877906944;
parameter    ap_ST_fsm_state40 = 47'd549755813888;
parameter    ap_ST_fsm_state41 = 47'd1099511627776;
parameter    ap_ST_fsm_state42 = 47'd2199023255552;
parameter    ap_ST_fsm_state43 = 47'd4398046511104;
parameter    ap_ST_fsm_state44 = 47'd8796093022208;
parameter    ap_ST_fsm_state45 = 47'd17592186044416;
parameter    ap_ST_fsm_state46 = 47'd35184372088832;
parameter    ap_ST_fsm_state47 = 47'd70368744177664;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
input  [7:0] p_read13;
input  [7:0] p_read14;
input  [7:0] p_read15;
output  [5:0] w_address0;
output   w_ce0;
input  [31:0] w_q0;
output  [5:0] w_address1;
output   w_ce1;
input  [31:0] w_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] w_address0;
reg w_ce0;
reg[5:0] w_address1;
reg w_ce1;

(* fsm_encoding = "none" *) reg   [46:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] S_address0;
reg    S_ce0;
wire   [7:0] S_q0;
wire   [31:0] pArray_q1;
reg   [31:0] reg_348;
wire    ap_CS_fsm_state24;
wire   [31:0] pArray_q0;
wire    ap_CS_fsm_state27;
reg   [31:0] reg_354;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state28;
reg   [31:0] reg_361;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state29;
reg   [31:0] reg_367;
wire   [3:0] pArray_addr_4_reg_454;
wire    ap_CS_fsm_state23;
wire   [3:0] pArray_addr_8_reg_459;
wire   [3:0] pArray_addr_5_reg_464;
wire   [3:0] pArray_addr_12_reg_469;
wire   [3:0] pArray_addr_9_reg_474;
wire   [3:0] pArray_addr_6_reg_484;
reg   [3:0] pArray_address0;
reg    pArray_ce0;
reg    pArray_we0;
reg   [31:0] pArray_d0;
reg   [3:0] pArray_address1;
reg    pArray_ce1;
reg    pArray_we1;
reg   [31:0] pArray_d1;
wire    grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_start;
wire    grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_done;
wire    grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_idle;
wire    grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_ready;
wire   [3:0] grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_pArray_address0;
wire    grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_pArray_ce0;
wire    grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_pArray_we0;
wire   [31:0] grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_pArray_d0;
wire    grp_addRoundKey_fu_322_ap_start;
wire    grp_addRoundKey_fu_322_ap_done;
wire    grp_addRoundKey_fu_322_ap_idle;
wire    grp_addRoundKey_fu_322_ap_ready;
wire   [3:0] grp_addRoundKey_fu_322_array_r_address0;
wire    grp_addRoundKey_fu_322_array_r_ce0;
wire    grp_addRoundKey_fu_322_array_r_we0;
wire   [31:0] grp_addRoundKey_fu_322_array_r_d0;
wire   [3:0] grp_addRoundKey_fu_322_array_r_address1;
wire    grp_addRoundKey_fu_322_array_r_ce1;
wire    grp_addRoundKey_fu_322_array_r_we1;
wire   [31:0] grp_addRoundKey_fu_322_array_r_d1;
reg   [3:0] grp_addRoundKey_fu_322_round;
wire   [5:0] grp_addRoundKey_fu_322_w_address0;
wire    grp_addRoundKey_fu_322_w_ce0;
wire   [5:0] grp_addRoundKey_fu_322_w_address1;
wire    grp_addRoundKey_fu_322_w_ce1;
wire    grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_start;
wire    grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_done;
wire    grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_idle;
wire    grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_ready;
wire   [3:0] grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_address0;
wire    grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_ce0;
wire    grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_we0;
wire   [31:0] grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_d0;
wire   [3:0] grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_address1;
wire    grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_ce1;
wire    grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_we1;
wire   [31:0] grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_d1;
wire   [5:0] grp_aes_return_Pipeline_aes_return_label12_fu_332_w_address0;
wire    grp_aes_return_Pipeline_aes_return_label12_fu_332_w_ce0;
wire   [5:0] grp_aes_return_Pipeline_aes_return_label12_fu_332_w_address1;
wire    grp_aes_return_Pipeline_aes_return_label12_fu_332_w_ce1;
wire   [7:0] grp_aes_return_Pipeline_aes_return_label12_fu_332_S_address0;
wire    grp_aes_return_Pipeline_aes_return_label12_fu_332_S_ce0;
wire    grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_start;
wire    grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_done;
wire    grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_idle;
wire    grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_ready;
wire   [3:0] grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_address0;
wire    grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_ce0;
wire    grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_we0;
wire   [31:0] grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_d0;
wire   [3:0] grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_address1;
wire    grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_ce1;
wire   [7:0] grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_S_address0;
wire    grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_S_ce0;
reg    grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_addRoundKey_fu_322_ap_start_reg;
reg   [46:0] ap_NS_fsm;
wire    ap_NS_fsm_state3;
wire    ap_CS_fsm_state31;
wire    ap_NS_fsm_state32;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
reg    grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_start_reg;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
reg    grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_start_reg;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state30;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
reg    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 47'd1;
#0 grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_start_reg = 1'b0;
#0 grp_addRoundKey_fu_322_ap_start_reg = 1'b0;
#0 grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_start_reg = 1'b0;
#0 grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_start_reg = 1'b0;
end

TOP_extendKey_Pipeline_extendKey_label0_S29_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
S_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(S_address0),
    .ce0(S_ce0),
    .q0(S_q0)
);

TOP_aes_return_pArray_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
pArray_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pArray_address0),
    .ce0(pArray_ce0),
    .we0(pArray_we0),
    .d0(pArray_d0),
    .q0(pArray_q0),
    .address1(pArray_address1),
    .ce1(pArray_ce1),
    .we1(pArray_we1),
    .d1(pArray_d1),
    .q1(pArray_q1)
);

TOP_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1 grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_start),
    .ap_done(grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_done),
    .ap_idle(grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_idle),
    .ap_ready(grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_ready),
    .pArray_address0(grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_pArray_address0),
    .pArray_ce0(grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_pArray_ce0),
    .pArray_we0(grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_pArray_we0),
    .pArray_d0(grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_pArray_d0),
    .p_read(p_read),
    .p_read1(p_read1),
    .p_read2(p_read2),
    .p_read3(p_read3),
    .p_read4(p_read4),
    .p_read5(p_read5),
    .p_read6(p_read6),
    .p_read7(p_read7),
    .p_read8(p_read8),
    .p_read9(p_read9),
    .p_read10(p_read10),
    .p_read11(p_read11),
    .p_read12(p_read12),
    .p_read13(p_read13),
    .p_read14(p_read14),
    .p_read15(p_read15)
);

TOP_addRoundKey grp_addRoundKey_fu_322(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_addRoundKey_fu_322_ap_start),
    .ap_done(grp_addRoundKey_fu_322_ap_done),
    .ap_idle(grp_addRoundKey_fu_322_ap_idle),
    .ap_ready(grp_addRoundKey_fu_322_ap_ready),
    .array_r_address0(grp_addRoundKey_fu_322_array_r_address0),
    .array_r_ce0(grp_addRoundKey_fu_322_array_r_ce0),
    .array_r_we0(grp_addRoundKey_fu_322_array_r_we0),
    .array_r_d0(grp_addRoundKey_fu_322_array_r_d0),
    .array_r_q0(pArray_q0),
    .array_r_address1(grp_addRoundKey_fu_322_array_r_address1),
    .array_r_ce1(grp_addRoundKey_fu_322_array_r_ce1),
    .array_r_we1(grp_addRoundKey_fu_322_array_r_we1),
    .array_r_d1(grp_addRoundKey_fu_322_array_r_d1),
    .array_r_q1(pArray_q1),
    .round(grp_addRoundKey_fu_322_round),
    .w_address0(grp_addRoundKey_fu_322_w_address0),
    .w_ce0(grp_addRoundKey_fu_322_w_ce0),
    .w_q0(w_q0),
    .w_address1(grp_addRoundKey_fu_322_w_address1),
    .w_ce1(grp_addRoundKey_fu_322_w_ce1),
    .w_q1(w_q1),
    .ap_ce(1'b1)
);

TOP_aes_return_Pipeline_aes_return_label12 grp_aes_return_Pipeline_aes_return_label12_fu_332(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_start),
    .ap_done(grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_done),
    .ap_idle(grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_idle),
    .ap_ready(grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_ready),
    .pArray_address0(grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_address0),
    .pArray_ce0(grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_ce0),
    .pArray_we0(grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_we0),
    .pArray_d0(grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_d0),
    .pArray_q0(pArray_q0),
    .pArray_address1(grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_address1),
    .pArray_ce1(grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_ce1),
    .pArray_we1(grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_we1),
    .pArray_d1(grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_d1),
    .pArray_q1(pArray_q1),
    .w_address0(grp_aes_return_Pipeline_aes_return_label12_fu_332_w_address0),
    .w_ce0(grp_aes_return_Pipeline_aes_return_label12_fu_332_w_ce0),
    .w_q0(w_q0),
    .w_address1(grp_aes_return_Pipeline_aes_return_label12_fu_332_w_address1),
    .w_ce1(grp_aes_return_Pipeline_aes_return_label12_fu_332_w_ce1),
    .w_q1(w_q1),
    .S_address0(grp_aes_return_Pipeline_aes_return_label12_fu_332_S_address0),
    .S_ce0(grp_aes_return_Pipeline_aes_return_label12_fu_332_S_ce0),
    .S_q0(S_q0)
);

TOP_aes_return_Pipeline_subBytes_label0_subBytes_label7 grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_start),
    .ap_done(grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_done),
    .ap_idle(grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_idle),
    .ap_ready(grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_ready),
    .pArray_address0(grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_address0),
    .pArray_ce0(grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_ce0),
    .pArray_we0(grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_we0),
    .pArray_d0(grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_d0),
    .pArray_address1(grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_address1),
    .pArray_ce1(grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_ce1),
    .pArray_q1(pArray_q1),
    .S_address0(grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_S_address0),
    .S_ce0(grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_S_ce0),
    .S_q0(S_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_addRoundKey_fu_322_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_NS_fsm_state32) & (1'b1 == ap_CS_fsm_state31)) | ((1'b1 == ap_NS_fsm_state3) & (1'b1 == ap_CS_fsm_state2)))) begin
            grp_addRoundKey_fu_322_ap_start_reg <= 1'b1;
        end else if ((grp_addRoundKey_fu_322_ap_ready == 1'b1)) begin
            grp_addRoundKey_fu_322_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_start_reg <= 1'b1;
        end else if ((grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_ready == 1'b1)) begin
            grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_start_reg <= 1'b1;
        end else if ((grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_ready == 1'b1)) begin
            grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_start_reg <= 1'b1;
        end else if ((grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_ready == 1'b1)) begin
            grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        reg_348 <= pArray_q0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        reg_348 <= pArray_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        reg_354 <= pArray_q1;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_354 <= pArray_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        reg_361 <= pArray_q1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        reg_361 <= pArray_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        reg_367 <= pArray_q1;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_367 <= pArray_q0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        S_address0 = grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_S_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        S_address0 = grp_aes_return_Pipeline_aes_return_label12_fu_332_S_address0;
    end else begin
        S_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        S_ce0 = grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_S_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        S_ce0 = grp_aes_return_Pipeline_aes_return_label12_fu_332_S_ce0;
    end else begin
        S_ce0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_done == 1'b0)) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

assign ap_ST_fsm_state21_blk = 1'b0;

always @ (*) begin
    if ((grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_done == 1'b0)) begin
        ap_ST_fsm_state22_blk = 1'b1;
    end else begin
        ap_ST_fsm_state22_blk = 1'b0;
    end
end

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_addRoundKey_fu_322_round = 4'd10;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_addRoundKey_fu_322_round = 4'd0;
    end else begin
        grp_addRoundKey_fu_322_round = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        pArray_address0 = pArray_addr_6_reg_484;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        pArray_address0 = pArray_addr_5_reg_464;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        pArray_address0 = pArray_addr_8_reg_459;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        pArray_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        pArray_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        pArray_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        pArray_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        pArray_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        pArray_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        pArray_address0 = grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        pArray_address0 = grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_address0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        pArray_address0 = grp_addRoundKey_fu_322_array_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pArray_address0 = grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_pArray_address0;
    end else begin
        pArray_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        pArray_address1 = pArray_addr_9_reg_474;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        pArray_address1 = pArray_addr_12_reg_469;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        pArray_address1 = pArray_addr_4_reg_454;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        pArray_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        pArray_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        pArray_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        pArray_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        pArray_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        pArray_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        pArray_address1 = grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_address1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        pArray_address1 = grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_address1;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        pArray_address1 = grp_addRoundKey_fu_322_array_r_address1;
    end else begin
        pArray_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state24))) begin
        pArray_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        pArray_ce0 = grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        pArray_ce0 = grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_ce0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        pArray_ce0 = grp_addRoundKey_fu_322_array_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pArray_ce0 = grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_pArray_ce0;
    end else begin
        pArray_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state24))) begin
        pArray_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        pArray_ce1 = grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_ce1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        pArray_ce1 = grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_ce1;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        pArray_ce1 = grp_addRoundKey_fu_322_array_r_ce1;
    end else begin
        pArray_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        pArray_d0 = reg_354;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        pArray_d0 = reg_367;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state27))) begin
        pArray_d0 = reg_348;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state28))) begin
        pArray_d0 = pArray_q1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        pArray_d0 = grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_d0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        pArray_d0 = grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_d0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        pArray_d0 = grp_addRoundKey_fu_322_array_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pArray_d0 = grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_pArray_d0;
    end else begin
        pArray_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29))) begin
        pArray_d1 = reg_361;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state27))) begin
        pArray_d1 = reg_367;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26))) begin
        pArray_d1 = reg_354;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        pArray_d1 = grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_d1;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        pArray_d1 = grp_addRoundKey_fu_322_array_r_d1;
    end else begin
        pArray_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27))) begin
        pArray_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        pArray_we0 = grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_pArray_we0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        pArray_we0 = grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_we0;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        pArray_we0 = grp_addRoundKey_fu_322_array_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pArray_we0 = grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_pArray_we0;
    end else begin
        pArray_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27))) begin
        pArray_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        pArray_we1 = grp_aes_return_Pipeline_aes_return_label12_fu_332_pArray_we1;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        pArray_we1 = grp_addRoundKey_fu_322_array_r_we1;
    end else begin
        pArray_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        w_address0 = grp_aes_return_Pipeline_aes_return_label12_fu_332_w_address0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        w_address0 = grp_addRoundKey_fu_322_w_address0;
    end else begin
        w_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        w_address1 = grp_aes_return_Pipeline_aes_return_label12_fu_332_w_address1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        w_address1 = grp_addRoundKey_fu_322_w_address1;
    end else begin
        w_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        w_ce0 = grp_aes_return_Pipeline_aes_return_label12_fu_332_w_ce0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        w_ce0 = grp_addRoundKey_fu_322_w_ce0;
    end else begin
        w_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        w_ce1 = grp_aes_return_Pipeline_aes_return_label12_fu_332_w_ce1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        w_ce1 = grp_addRoundKey_fu_322_w_ce1;
    end else begin
        w_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state3 = ap_NS_fsm[32'd2];

assign ap_NS_fsm_state32 = ap_NS_fsm[32'd31];

assign grp_addRoundKey_fu_322_ap_start = grp_addRoundKey_fu_322_ap_start_reg;

assign grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_start = grp_aes_return_Pipeline_aes_return_label12_fu_332_ap_start_reg;

assign grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_start = grp_aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1_fu_284_ap_start_reg;

assign grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_start = grp_aes_return_Pipeline_subBytes_label0_subBytes_label7_fu_341_ap_start_reg;

assign pArray_addr_12_reg_469 = 64'd12;

assign pArray_addr_4_reg_454 = 64'd4;

assign pArray_addr_5_reg_464 = 64'd5;

assign pArray_addr_6_reg_484 = 64'd6;

assign pArray_addr_8_reg_459 = 64'd8;

assign pArray_addr_9_reg_474 = 64'd9;

endmodule //TOP_aes_return
