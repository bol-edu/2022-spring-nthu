

================================================================
== Vitis HLS Report for 'aes_return_Pipeline_convertToIntArray_label0_convertToIntArray_label1'
================================================================
* Date:           Fri Jun 17 13:14:50 2022

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        MIMO
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  40.00 ns|  2.419 ns|    10.80 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       18|       18|  0.720 us|  0.720 us|   18|   18|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                      Loop Name                      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- convertToIntArray_label0_convertToIntArray_label1  |       16|       16|         1|          1|          1|    16|       yes|
        +-----------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.41>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 4 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%k_2 = alloca i32 1"   --->   Operation 5 'alloca' 'k_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 6 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 7 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 8 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_read_31 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read15"   --->   Operation 9 'read' 'p_read_31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_read_32 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read14"   --->   Operation 10 'read' 'p_read_32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_read_33 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read13"   --->   Operation 11 'read' 'p_read_33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_read_34 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read12"   --->   Operation 12 'read' 'p_read_34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_read_35 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read11"   --->   Operation 13 'read' 'p_read_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_read1026 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read10"   --->   Operation 14 'read' 'p_read1026' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_read925 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read9"   --->   Operation 15 'read' 'p_read925' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_read824 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read8"   --->   Operation 16 'read' 'p_read824' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_read723 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read7"   --->   Operation 17 'read' 'p_read723' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_read622 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read6"   --->   Operation 18 'read' 'p_read622' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%p_read521 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read5"   --->   Operation 19 'read' 'p_read521' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%p_read420 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read4"   --->   Operation 20 'read' 'p_read420' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%p_read319 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read3"   --->   Operation 21 'read' 'p_read319' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%p_read218 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read2"   --->   Operation 22 'read' 'p_read218' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%p_read117 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read1"   --->   Operation 23 'read' 'p_read117' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%p_read16 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read"   --->   Operation 24 'read' 'p_read16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 0, i5 %indvar_flatten"   --->   Operation 25 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 26 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 0, i5 %k"   --->   Operation 26 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 27 [1/1] (0.42ns)   --->   "%store_ln0 = store i3 0, i3 %i"   --->   Operation 27 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 28 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 0, i5 %k_2"   --->   Operation 28 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 29 [1/1] (0.42ns)   --->   "%store_ln0 = store i3 0, i3 %j"   --->   Operation 29 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 30 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i5 %indvar_flatten" [src/aes.cpp:71]   --->   Operation 31 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 32 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.75ns)   --->   "%icmp_ln71 = icmp_eq  i5 %indvar_flatten_load, i5 16" [src/aes.cpp:71]   --->   Operation 33 'icmp' 'icmp_ln71' <Predicate = true> <Delay = 0.75> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.78ns)   --->   "%add_ln71_3 = add i5 %indvar_flatten_load, i5 1" [src/aes.cpp:71]   --->   Operation 34 'add' 'add_ln71_3' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln71 = br i1 %icmp_ln71, void %.split20, void %_ZL17convertToIntArrayPcPA4_i.exit.exitStub" [src/aes.cpp:71]   --->   Operation 35 'br' 'br_ln71' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%j_load = load i3 %j" [src/aes.cpp:72]   --->   Operation 36 'load' 'j_load' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%k_2_load = load i5 %k_2" [src/aes.cpp:71]   --->   Operation 37 'load' 'k_2_load' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%i_load = load i3 %i" [src/aes.cpp:71]   --->   Operation 38 'load' 'i_load' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%k_load = load i5 %k" [src/aes.cpp:71]   --->   Operation 39 'load' 'k_load' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.67ns)   --->   "%add_ln71 = add i3 %i_load, i3 1" [src/aes.cpp:71]   --->   Operation 40 'add' 'add_ln71' <Predicate = (!icmp_ln71)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.78ns)   --->   "%add_ln71_2 = add i5 %k_load, i5 4" [src/aes.cpp:71]   --->   Operation 41 'add' 'add_ln71_2' <Predicate = (!icmp_ln71)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @convertToIntArray_label0_convertToIntArray_label1_str"   --->   Operation 42 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 43 'speclooptripcount' 'empty' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.58ns)   --->   "%icmp_ln72 = icmp_eq  i3 %j_load, i3 4" [src/aes.cpp:72]   --->   Operation 44 'icmp' 'icmp_ln72' <Predicate = (!icmp_ln71)> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.41ns)   --->   "%select_ln71 = select i1 %icmp_ln72, i5 %add_ln71_2, i5 %k_2_load" [src/aes.cpp:71]   --->   Operation 45 'select' 'select_ln71' <Predicate = (!icmp_ln71)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.20ns)   --->   "%select_ln71_4 = select i1 %icmp_ln72, i3 0, i3 %j_load" [src/aes.cpp:71]   --->   Operation 46 'select' 'select_ln71_4' <Predicate = (!icmp_ln71)> <Delay = 0.20> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.20ns)   --->   "%select_ln71_5 = select i1 %icmp_ln72, i3 %add_ln71, i3 %i_load" [src/aes.cpp:71]   --->   Operation 47 'select' 'select_ln71_5' <Predicate = (!icmp_ln71)> <Delay = 0.20> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%select_ln71_5_cast = zext i3 %select_ln71_5" [src/aes.cpp:71]   --->   Operation 48 'zext' 'select_ln71_5_cast' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 49 'specpipeline' 'specpipeline_ln0' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.41ns)   --->   "%select_ln71_6 = select i1 %icmp_ln72, i5 %add_ln71_2, i5 %k_load" [src/aes.cpp:71]   --->   Operation 50 'select' 'select_ln71_6' <Predicate = (!icmp_ln71)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%trunc_ln73 = trunc i3 %select_ln71_4" [src/aes.cpp:73]   --->   Operation 51 'trunc' 'trunc_ln73' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_143_cast = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i2.i2, i2 %trunc_ln73, i2 0" [src/aes.cpp:73]   --->   Operation 52 'bitconcatenate' 'tmp_143_cast' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.79ns)   --->   "%add_ln73 = add i4 %tmp_143_cast, i4 %select_ln71_5_cast" [src/aes.cpp:73]   --->   Operation 53 'add' 'add_ln73' <Predicate = (!icmp_ln71)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i4 %add_ln73" [src/aes.cpp:73]   --->   Operation 54 'zext' 'zext_ln73' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%pArray_addr = getelementptr i32 %pArray, i64 0, i64 %zext_ln73" [src/aes.cpp:73]   --->   Operation 55 'getelementptr' 'pArray_addr' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%specloopname_ln69 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [src/aes.cpp:69]   --->   Operation 56 'specloopname' 'specloopname_ln69' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.48ns)   --->   "%result = mux i8 @_ssdm_op_Mux.ap_auto.16i8.i5, i8 %p_read16, i8 %p_read117, i8 %p_read218, i8 %p_read319, i8 %p_read420, i8 %p_read521, i8 %p_read622, i8 %p_read723, i8 %p_read824, i8 %p_read925, i8 %p_read1026, i8 %p_read_35, i8 %p_read_34, i8 %p_read_33, i8 %p_read_32, i8 %p_read_31, i5 %select_ln71" [src/aes.cpp:73]   --->   Operation 57 'mux' 'result' <Predicate = (!icmp_ln71)> <Delay = 0.48> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i8 %result" [src/aes.cpp:63]   --->   Operation 58 'zext' 'zext_ln63' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.67ns)   --->   "%store_ln73 = store i32 %zext_ln63, i4 %pArray_addr" [src/aes.cpp:73]   --->   Operation 59 'store' 'store_ln73' <Predicate = (!icmp_ln71)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_1 : Operation 60 [1/1] (0.78ns)   --->   "%add_ln74 = add i5 %select_ln71, i5 1" [src/aes.cpp:74]   --->   Operation 60 'add' 'add_ln74' <Predicate = (!icmp_ln71)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.67ns)   --->   "%add_ln72 = add i3 %select_ln71_4, i3 1" [src/aes.cpp:72]   --->   Operation 61 'add' 'add_ln72' <Predicate = (!icmp_ln71)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.42ns)   --->   "%store_ln71 = store i5 %add_ln71_3, i5 %indvar_flatten" [src/aes.cpp:71]   --->   Operation 62 'store' 'store_ln71' <Predicate = (!icmp_ln71)> <Delay = 0.42>
ST_1 : Operation 63 [1/1] (0.42ns)   --->   "%store_ln71 = store i5 %select_ln71_6, i5 %k" [src/aes.cpp:71]   --->   Operation 63 'store' 'store_ln71' <Predicate = (!icmp_ln71)> <Delay = 0.42>
ST_1 : Operation 64 [1/1] (0.42ns)   --->   "%store_ln71 = store i3 %select_ln71_5, i3 %i" [src/aes.cpp:71]   --->   Operation 64 'store' 'store_ln71' <Predicate = (!icmp_ln71)> <Delay = 0.42>
ST_1 : Operation 65 [1/1] (0.42ns)   --->   "%store_ln74 = store i5 %add_ln74, i5 %k_2" [src/aes.cpp:74]   --->   Operation 65 'store' 'store_ln74' <Predicate = (!icmp_ln71)> <Delay = 0.42>
ST_1 : Operation 66 [1/1] (0.42ns)   --->   "%store_ln72 = store i3 %add_ln72, i3 %j" [src/aes.cpp:72]   --->   Operation 66 'store' 'store_ln72' <Predicate = (!icmp_ln71)> <Delay = 0.42>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 67 'br' 'br_ln0' <Predicate = (!icmp_ln71)> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 68 'ret' 'ret_ln0' <Predicate = (icmp_ln71)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 40ns, clock uncertainty: 10.8ns.

 <State 1>: 2.42ns
The critical path consists of the following:
	'alloca' operation ('k') [21]  (0 ns)
	'load' operation ('k_load', src/aes.cpp:71) on local variable 'k' [55]  (0 ns)
	'add' operation ('add_ln71_2', src/aes.cpp:71) [57]  (0.789 ns)
	'select' operation ('select_ln71', src/aes.cpp:71) [61]  (0.414 ns)
	'add' operation ('add_ln74', src/aes.cpp:74) [76]  (0.789 ns)
	'store' operation ('store_ln74', src/aes.cpp:74) of variable 'add_ln74', src/aes.cpp:74 on local variable 'k' [81]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
