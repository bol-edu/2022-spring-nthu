-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity windex is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_local_block : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    pout8_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    pout8_TVALID : IN STD_LOGIC;
    pout8_TREADY : OUT STD_LOGIC;
    pout8_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    pout8_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    pout8_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    word_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    word_TVALID : OUT STD_LOGIC;
    word_TREADY : IN STD_LOGIC;
    word_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    word_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    word_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of windex is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "windex_windex,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.744000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=366,HLS_SYN_LUT=604,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

    signal ap_local_deadlock : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_n_inv : STD_LOGIC;
    signal recv : STD_LOGIC_VECTOR (31 downto 0);
    signal sent : STD_LOGIC_VECTOR (31 downto 0);
    signal cname_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal cname_ce0 : STD_LOGIC;
    signal cname_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln21_1_fu_133_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln21_1_reg_160 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_vld_fu_109_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub16_fu_144_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub16_reg_169 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_start : STD_LOGIC;
    signal grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_done : STD_LOGIC;
    signal grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_idle : STD_LOGIC;
    signal grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_ready : STD_LOGIC;
    signal grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_len_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_len_out_ap_vld : STD_LOGIC;
    signal grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_cname_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_cname_ce0 : STD_LOGIC;
    signal grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_start : STD_LOGIC;
    signal grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_done : STD_LOGIC;
    signal grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_idle : STD_LOGIC;
    signal grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_ready : STD_LOGIC;
    signal grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TREADY : STD_LOGIC;
    signal grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TVALID : STD_LOGIC;
    signal grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TKEEP : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_cname_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_cname_ce0 : STD_LOGIC;
    signal grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal empty_nbread_fu_72_p5_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln21_2_fu_121_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_cast_fu_125_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln21_fu_117_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal regslice_both_word_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal regslice_both_pout8_V_data_V_U_apdone_blk : STD_LOGIC;
    signal pout8_TDATA_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal pout8_TVALID_int_regslice : STD_LOGIC;
    signal pout8_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_pout8_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_pout8_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal pout8_TKEEP_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_pout8_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_pout8_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_pout8_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal pout8_TSTRB_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_pout8_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_pout8_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_pout8_V_last_V_U_apdone_blk : STD_LOGIC;
    signal pout8_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_pout8_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_pout8_V_last_V_U_ack_in : STD_LOGIC;
    signal word_TVALID_int_regslice : STD_LOGIC;
    signal word_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_word_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_word_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_word_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_word_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_word_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_word_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_word_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_word_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_word_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_word_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component windex_windex_Pipeline_VITIS_LOOP_21_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        add_ln21_1 : IN STD_LOGIC_VECTOR (6 downto 0);
        len_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        len_out_ap_vld : OUT STD_LOGIC;
        cname_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        cname_ce0 : OUT STD_LOGIC;
        cname_q0 : IN STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component windex_windex_Pipeline_VITIS_LOOP_24_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        word_TREADY : IN STD_LOGIC;
        trunc_ln : IN STD_LOGIC_VECTOR (31 downto 0);
        add_ln21_1 : IN STD_LOGIC_VECTOR (6 downto 0);
        sub16 : IN STD_LOGIC_VECTOR (31 downto 0);
        word_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        word_TVALID : OUT STD_LOGIC;
        word_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
        word_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        word_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        cname_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        cname_ce0 : OUT STD_LOGIC;
        cname_q0 : IN STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component windex_cname_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component windex_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        recv : OUT STD_LOGIC_VECTOR (31 downto 0);
        sent : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_local_deadlock : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component windex_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    cname_U : component windex_cname_ROM_AUTO_1R
    generic map (
        DataWidth => 6,
        AddressRange => 90,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cname_address0,
        ce0 => cname_ce0,
        q0 => cname_q0);

    grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84 : component windex_windex_Pipeline_VITIS_LOOP_21_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_start,
        ap_done => grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_done,
        ap_idle => grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_idle,
        ap_ready => grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_ready,
        add_ln21_1 => add_ln21_1_reg_160,
        len_out => grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_len_out,
        len_out_ap_vld => grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_len_out_ap_vld,
        cname_address0 => grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_cname_address0,
        cname_ce0 => grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_cname_ce0,
        cname_q0 => cname_q0);

    grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92 : component windex_windex_Pipeline_VITIS_LOOP_24_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_start,
        ap_done => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_done,
        ap_idle => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_idle,
        ap_ready => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_ready,
        word_TREADY => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TREADY,
        trunc_ln => grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_len_out,
        add_ln21_1 => add_ln21_1_reg_160,
        sub16 => sub16_reg_169,
        word_TDATA => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TDATA,
        word_TVALID => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TVALID,
        word_TKEEP => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TKEEP,
        word_TSTRB => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TSTRB,
        word_TLAST => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TLAST,
        cname_address0 => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_cname_address0,
        cname_ce0 => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_cname_ce0,
        cname_q0 => cname_q0);

    control_s_axi_U : component windex_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        recv => recv,
        sent => sent,
        ap_local_deadlock => ap_local_deadlock);

    regslice_both_pout8_V_data_V_U : component windex_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => pout8_TDATA,
        vld_in => pout8_TVALID,
        ack_in => regslice_both_pout8_V_data_V_U_ack_in,
        data_out => pout8_TDATA_int_regslice,
        vld_out => pout8_TVALID_int_regslice,
        ack_out => pout8_TREADY_int_regslice,
        apdone_blk => regslice_both_pout8_V_data_V_U_apdone_blk);

    regslice_both_pout8_V_keep_V_U : component windex_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => pout8_TKEEP,
        vld_in => pout8_TVALID,
        ack_in => regslice_both_pout8_V_keep_V_U_ack_in,
        data_out => pout8_TKEEP_int_regslice,
        vld_out => regslice_both_pout8_V_keep_V_U_vld_out,
        ack_out => pout8_TREADY_int_regslice,
        apdone_blk => regslice_both_pout8_V_keep_V_U_apdone_blk);

    regslice_both_pout8_V_strb_V_U : component windex_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => pout8_TSTRB,
        vld_in => pout8_TVALID,
        ack_in => regslice_both_pout8_V_strb_V_U_ack_in,
        data_out => pout8_TSTRB_int_regslice,
        vld_out => regslice_both_pout8_V_strb_V_U_vld_out,
        ack_out => pout8_TREADY_int_regslice,
        apdone_blk => regslice_both_pout8_V_strb_V_U_apdone_blk);

    regslice_both_pout8_V_last_V_U : component windex_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => pout8_TLAST,
        vld_in => pout8_TVALID,
        ack_in => regslice_both_pout8_V_last_V_U_ack_in,
        data_out => pout8_TLAST_int_regslice,
        vld_out => regslice_both_pout8_V_last_V_U_vld_out,
        ack_out => pout8_TREADY_int_regslice,
        apdone_blk => regslice_both_pout8_V_last_V_U_apdone_blk);

    regslice_both_word_V_data_V_U : component windex_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TDATA,
        vld_in => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TVALID,
        ack_in => word_TREADY_int_regslice,
        data_out => word_TDATA,
        vld_out => regslice_both_word_V_data_V_U_vld_out,
        ack_out => word_TREADY,
        apdone_blk => regslice_both_word_V_data_V_U_apdone_blk);

    regslice_both_word_V_keep_V_U : component windex_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TKEEP,
        vld_in => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TVALID,
        ack_in => regslice_both_word_V_keep_V_U_ack_in_dummy,
        data_out => word_TKEEP,
        vld_out => regslice_both_word_V_keep_V_U_vld_out,
        ack_out => word_TREADY,
        apdone_blk => regslice_both_word_V_keep_V_U_apdone_blk);

    regslice_both_word_V_strb_V_U : component windex_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TSTRB,
        vld_in => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TVALID,
        ack_in => regslice_both_word_V_strb_V_U_ack_in_dummy,
        data_out => word_TSTRB,
        vld_out => regslice_both_word_V_strb_V_U_vld_out,
        ack_out => word_TREADY,
        apdone_blk => regslice_both_word_V_strb_V_U_apdone_blk);

    regslice_both_word_V_last_V_U : component windex_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TLAST,
        vld_in => grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TVALID,
        ack_in => regslice_both_word_V_last_V_U_ack_in_dummy,
        data_out => word_TLAST,
        vld_out => regslice_both_word_V_last_V_U_vld_out,
        ack_out => word_TREADY,
        apdone_blk => regslice_both_word_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (p_vld_fu_109_p1 = ap_const_lv1_1))) then 
                    grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_ready = ap_const_logic_1)) then 
                    grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_ready = ap_const_logic_1)) then 
                    grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (p_vld_fu_109_p1 = ap_const_lv1_1))) then
                add_ln21_1_reg_160 <= add_ln21_1_fu_133_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                sub16_reg_169 <= sub16_fu_144_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, p_vld_fu_109_p1, grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_done, grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, regslice_both_word_V_data_V_U_apdone_blk, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (p_vld_fu_109_p1 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (regslice_both_word_V_data_V_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln21_1_fu_133_p2 <= std_logic_vector(unsigned(tmp_cast_fu_125_p3) + unsigned(trunc_ln21_fu_117_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_ST_fsm_state1_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_done)
    begin
        if ((grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_done)
    begin
        if ((grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(regslice_both_word_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_word_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_lv1_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    cname_address0_assign_proc : process(grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_cname_address0, grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_cname_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            cname_address0 <= grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_cname_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cname_address0 <= grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_cname_address0;
        else 
            cname_address0 <= "XXXXXXX";
        end if; 
    end process;


    cname_ce0_assign_proc : process(grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_cname_ce0, grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_cname_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            cname_ce0 <= grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_cname_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cname_ce0 <= grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_cname_ce0;
        else 
            cname_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_nbread_fu_72_p5_0 <= (0=>(pout8_TVALID_int_regslice), others=>'-');
    grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_start <= grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_ap_start_reg;
    grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_start <= grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_ap_start_reg;
    grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TREADY <= (word_TREADY_int_regslice and ap_CS_fsm_state4);
    p_vld_fu_109_p1 <= empty_nbread_fu_72_p5_0;
    pout8_TREADY <= regslice_both_pout8_V_data_V_U_ack_in;

    pout8_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state1, pout8_TVALID_int_regslice)
    begin
        if (((pout8_TVALID_int_regslice = ap_const_logic_1) and ((ap_const_logic_1 = ap_CS_fsm_state1) or ((pout8_TVALID_int_regslice = ap_const_logic_1) and ((ap_const_logic_1 = ap_CS_fsm_state1) or ((pout8_TVALID_int_regslice = ap_const_logic_1) and ((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (pout8_TVALID_int_regslice = ap_const_logic_1))))))))) then 
            pout8_TREADY_int_regslice <= ap_const_logic_1;
        else 
            pout8_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    sub16_fu_144_p2 <= std_logic_vector(unsigned(grp_windex_Pipeline_VITIS_LOOP_21_1_fu_84_len_out) + unsigned(ap_const_lv32_FFFFFFFF));
    tmp_cast_fu_125_p3 <= (trunc_ln21_2_fu_121_p1 & ap_const_lv3_0);
    trunc_ln21_2_fu_121_p1 <= pout8_TDATA_int_regslice(4 - 1 downto 0);
    trunc_ln21_fu_117_p1 <= pout8_TDATA_int_regslice(7 - 1 downto 0);
    word_TVALID <= regslice_both_word_V_data_V_U_vld_out;
    word_TVALID_int_regslice <= grp_windex_Pipeline_VITIS_LOOP_24_2_fu_92_word_TVALID;
end behav;
