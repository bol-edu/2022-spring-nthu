// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="wgen_mix_wgen_mix,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.014250,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=777,HLS_SYN_LUT=1255,HLS_VERSION=2021_2}" *)

module wgen_mix (
        ap_local_block,
        ap_clk,
        ap_rst_n,
        src_TDATA,
        src_TVALID,
        src_TREADY,
        src_TKEEP,
        src_TSTRB,
        src_TUSER,
        src_TLAST,
        src_TID,
        src_TDEST,
        dst_TDATA,
        dst_TVALID,
        dst_TREADY,
        dst_TKEEP,
        dst_TSTRB,
        dst_TUSER,
        dst_TLAST,
        dst_TID,
        dst_TDEST,
        word_TDATA,
        word_TVALID,
        word_TREADY,
        word_TKEEP,
        word_TSTRB,
        word_TUSER,
        word_TLAST,
        word_TID,
        word_TDEST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

output   ap_local_block;
input   ap_clk;
input   ap_rst_n;
input  [23:0] src_TDATA;
input   src_TVALID;
output   src_TREADY;
input  [2:0] src_TKEEP;
input  [2:0] src_TSTRB;
input  [0:0] src_TUSER;
input  [0:0] src_TLAST;
input  [0:0] src_TID;
input  [0:0] src_TDEST;
output  [23:0] dst_TDATA;
output   dst_TVALID;
input   dst_TREADY;
output  [2:0] dst_TKEEP;
output  [2:0] dst_TSTRB;
output  [0:0] dst_TUSER;
output  [0:0] dst_TLAST;
output  [0:0] dst_TID;
output  [0:0] dst_TDEST;
input  [23:0] word_TDATA;
input   word_TVALID;
output   word_TREADY;
input  [2:0] word_TKEEP;
input  [2:0] word_TSTRB;
input  [0:0] word_TUSER;
input  [0:0] word_TLAST;
input  [0:0] word_TID;
input  [0:0] word_TDEST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

wire   [0:0] ap_local_deadlock;
 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] rows;
wire   [31:0] cols;
reg   [31:0] wrecv;
reg    wrecv_ap_vld;
wire   [31:0] isent;
reg    isent_ap_vld;
reg   [31:0] isent_n_local;
reg   [31:0] wrecv_n_local;
reg   [31:0] cols_read_reg_432;
reg   [31:0] rows_read_reg_437;
wire   [30:0] empty_fu_284_p1;
reg   [30:0] empty_reg_443;
wire   [31:0] sub_fu_288_p2;
reg   [31:0] sub_reg_460;
wire   [30:0] sub13_fu_294_p2;
reg   [30:0] sub13_reg_465;
wire   [0:0] icmp_ln31_fu_300_p2;
reg   [0:0] icmp_ln31_reg_470;
wire   [0:0] cmp1171_fu_306_p2;
reg   [0:0] cmp1171_reg_481;
wire   [30:0] i_2_fu_329_p2;
reg   [30:0] i_2_reg_488;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_fu_345_p2;
reg   [0:0] icmp_reg_493;
wire   [0:0] icmp_ln31_1_fu_324_p2;
wire   [0:0] cmp12_fu_352_p2;
reg   [0:0] cmp12_reg_498;
wire   [0:0] icmp_ln58_fu_367_p2;
reg   [0:0] icmp_ln58_reg_503;
wire   [0:0] icmp_ln51_fu_393_p2;
reg   [0:0] icmp_ln51_reg_507;
wire    ap_CS_fsm_state4;
reg   [31:0] wrecv_n_local_load_reg_511;
wire    ap_CS_fsm_state7;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_done;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_idle;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_ready;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TREADY;
wire   [23:0] grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TDATA;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID;
wire   [2:0] grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TKEEP;
wire   [2:0] grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TSTRB;
wire   [0:0] grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TUSER;
wire   [0:0] grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TLAST;
wire   [0:0] grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TID;
wire   [0:0] grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TDEST;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_src_TREADY;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_TREADY;
wire   [31:0] grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_ap_vld;
wire   [31:0] grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_row_usage_out;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_row_usage_out_ap_vld;
wire   [31:0] grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_n_local_o;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_n_local_o_ap_vld;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_done;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_idle;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_ready;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_word_TREADY;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_done;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_idle;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_ready;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_word_TREADY;
wire   [31:0] grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_add_ln62_out;
wire    grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_add_ln62_out_ap_vld;
reg   [31:0] ap_phi_mux_j_2_phi_fu_176_p4;
reg   [31:0] j_2_reg_172;
reg    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start_reg;
wire    ap_CS_fsm_state3;
reg    grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start_reg;
wire    ap_CS_fsm_state8;
reg   [31:0] add_ln62_loc_fu_134;
wire   [31:0] add_ln33_fu_381_p2;
wire   [31:0] add_ln51_fu_405_p2;
wire    ap_CS_fsm_state9;
wire    regslice_both_dst_V_data_V_U_apdone_blk;
reg   [30:0] i_fu_142;
reg    ap_predicate_op96_call_state6;
reg    ap_block_state6_on_subcall_done;
wire   [31:0] zext_ln31_fu_320_p1;
wire   [25:0] tmp_1_fu_335_p4;
wire   [26:0] tmp_fu_358_p4;
wire   [31:0] sub_ln51_fu_399_p2;
reg   [8:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    regslice_both_src_V_data_V_U_apdone_blk;
wire   [23:0] src_TDATA_int_regslice;
wire    src_TVALID_int_regslice;
reg    src_TREADY_int_regslice;
wire    regslice_both_src_V_data_V_U_ack_in;
wire    regslice_both_src_V_keep_V_U_apdone_blk;
wire   [2:0] src_TKEEP_int_regslice;
wire    regslice_both_src_V_keep_V_U_vld_out;
wire    regslice_both_src_V_keep_V_U_ack_in;
wire    regslice_both_src_V_strb_V_U_apdone_blk;
wire   [2:0] src_TSTRB_int_regslice;
wire    regslice_both_src_V_strb_V_U_vld_out;
wire    regslice_both_src_V_strb_V_U_ack_in;
wire    regslice_both_src_V_user_V_U_apdone_blk;
wire   [0:0] src_TUSER_int_regslice;
wire    regslice_both_src_V_user_V_U_vld_out;
wire    regslice_both_src_V_user_V_U_ack_in;
wire    regslice_both_src_V_last_V_U_apdone_blk;
wire   [0:0] src_TLAST_int_regslice;
wire    regslice_both_src_V_last_V_U_vld_out;
wire    regslice_both_src_V_last_V_U_ack_in;
wire    regslice_both_src_V_id_V_U_apdone_blk;
wire   [0:0] src_TID_int_regslice;
wire    regslice_both_src_V_id_V_U_vld_out;
wire    regslice_both_src_V_id_V_U_ack_in;
wire    regslice_both_src_V_dest_V_U_apdone_blk;
wire   [0:0] src_TDEST_int_regslice;
wire    regslice_both_src_V_dest_V_U_vld_out;
wire    regslice_both_src_V_dest_V_U_ack_in;
wire    dst_TVALID_int_regslice;
wire    dst_TREADY_int_regslice;
wire    regslice_both_dst_V_data_V_U_vld_out;
wire    regslice_both_dst_V_keep_V_U_apdone_blk;
wire    regslice_both_dst_V_keep_V_U_ack_in_dummy;
wire    regslice_both_dst_V_keep_V_U_vld_out;
wire    regslice_both_dst_V_strb_V_U_apdone_blk;
wire    regslice_both_dst_V_strb_V_U_ack_in_dummy;
wire    regslice_both_dst_V_strb_V_U_vld_out;
wire    regslice_both_dst_V_user_V_U_apdone_blk;
wire    regslice_both_dst_V_user_V_U_ack_in_dummy;
wire    regslice_both_dst_V_user_V_U_vld_out;
wire    regslice_both_dst_V_last_V_U_apdone_blk;
wire    regslice_both_dst_V_last_V_U_ack_in_dummy;
wire    regslice_both_dst_V_last_V_U_vld_out;
wire    regslice_both_dst_V_id_V_U_apdone_blk;
wire    regslice_both_dst_V_id_V_U_ack_in_dummy;
wire    regslice_both_dst_V_id_V_U_vld_out;
wire    regslice_both_dst_V_dest_V_U_apdone_blk;
wire    regslice_both_dst_V_dest_V_U_ack_in_dummy;
wire    regslice_both_dst_V_dest_V_U_vld_out;
wire    regslice_both_word_V_data_V_U_apdone_blk;
wire   [23:0] word_TDATA_int_regslice;
wire    word_TVALID_int_regslice;
reg    word_TREADY_int_regslice;
wire    regslice_both_word_V_data_V_U_ack_in;
wire    regslice_both_word_V_keep_V_U_apdone_blk;
wire   [2:0] word_TKEEP_int_regslice;
wire    regslice_both_word_V_keep_V_U_vld_out;
wire    regslice_both_word_V_keep_V_U_ack_in;
wire    regslice_both_word_V_strb_V_U_apdone_blk;
wire   [2:0] word_TSTRB_int_regslice;
wire    regslice_both_word_V_strb_V_U_vld_out;
wire    regslice_both_word_V_strb_V_U_ack_in;
wire    regslice_both_word_V_user_V_U_apdone_blk;
wire   [0:0] word_TUSER_int_regslice;
wire    regslice_both_word_V_user_V_U_vld_out;
wire    regslice_both_word_V_user_V_U_ack_in;
wire    regslice_both_word_V_last_V_U_apdone_blk;
wire   [0:0] word_TLAST_int_regslice;
wire    regslice_both_word_V_last_V_U_vld_out;
wire    regslice_both_word_V_last_V_U_ack_in;
wire    regslice_both_word_V_id_V_U_apdone_blk;
wire   [0:0] word_TID_int_regslice;
wire    regslice_both_word_V_id_V_U_vld_out;
wire    regslice_both_word_V_id_V_U_ack_in;
wire    regslice_both_word_V_dest_V_U_apdone_blk;
wire   [0:0] word_TDEST_int_regslice;
wire    regslice_both_word_V_dest_V_U_vld_out;
wire    regslice_both_word_V_dest_V_U_ack_in;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 isent_n_local = 32'd0;
#0 wrecv_n_local = 32'd0;
#0 grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start_reg = 1'b0;
#0 grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start_reg = 1'b0;
#0 grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start_reg = 1'b0;
end

wgen_mix_wgen_mix_Pipeline_VITIS_LOOP_33_2 grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start),
    .ap_done(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_done),
    .ap_idle(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_idle),
    .ap_ready(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_ready),
    .src_TVALID(src_TVALID_int_regslice),
    .word_TVALID(word_TVALID_int_regslice),
    .dst_TREADY(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TREADY),
    .cols(empty_reg_443),
    .sub13(sub13_reg_465),
    .cmp12(cmp12_reg_498),
    .dst_TDATA(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TDATA),
    .dst_TVALID(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID),
    .dst_TKEEP(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TKEEP),
    .dst_TSTRB(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TSTRB),
    .dst_TUSER(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TUSER),
    .dst_TLAST(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TLAST),
    .dst_TID(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TID),
    .dst_TDEST(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TDEST),
    .src_TDATA(src_TDATA_int_regslice),
    .src_TREADY(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_src_TREADY),
    .src_TKEEP(src_TKEEP_int_regslice),
    .src_TSTRB(src_TSTRB_int_regslice),
    .src_TUSER(src_TUSER_int_regslice),
    .src_TLAST(src_TLAST_int_regslice),
    .src_TID(src_TID_int_regslice),
    .src_TDEST(src_TDEST_int_regslice),
    .cmp5(icmp_reg_493),
    .word_TDATA(word_TDATA_int_regslice),
    .word_TREADY(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_TREADY),
    .word_TKEEP(word_TKEEP_int_regslice),
    .word_TSTRB(word_TSTRB_int_regslice),
    .word_TUSER(word_TUSER_int_regslice),
    .word_TLAST(word_TLAST_int_regslice),
    .word_TID(word_TID_int_regslice),
    .word_TDEST(word_TDEST_int_regslice),
    .wrecv(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv),
    .wrecv_ap_vld(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_ap_vld),
    .word_row_usage_out(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_row_usage_out),
    .word_row_usage_out_ap_vld(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_row_usage_out_ap_vld),
    .wrecv_n_local_i(wrecv_n_local),
    .wrecv_n_local_o(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_n_local_o),
    .wrecv_n_local_o_ap_vld(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_n_local_o_ap_vld)
);

wgen_mix_wgen_mix_Pipeline_VITIS_LOOP_51_3 grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start),
    .ap_done(grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_done),
    .ap_idle(grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_idle),
    .ap_ready(grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_ready),
    .word_TVALID(word_TVALID_int_regslice),
    .j_2(j_2_reg_172),
    .word_TDATA(word_TDATA_int_regslice),
    .word_TREADY(grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_word_TREADY),
    .word_TKEEP(word_TKEEP_int_regslice),
    .word_TSTRB(word_TSTRB_int_regslice),
    .word_TUSER(word_TUSER_int_regslice),
    .word_TLAST(word_TLAST_int_regslice),
    .word_TID(word_TID_int_regslice),
    .word_TDEST(word_TDEST_int_regslice)
);

wgen_mix_wgen_mix_Pipeline_VITIS_LOOP_60_4 grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start),
    .ap_done(grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_done),
    .ap_idle(grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_idle),
    .ap_ready(grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_ready),
    .word_TVALID(word_TVALID_int_regslice),
    .wrecv_n_local_load(wrecv_n_local_load_reg_511),
    .word_TDATA(word_TDATA_int_regslice),
    .word_TREADY(grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_word_TREADY),
    .word_TKEEP(word_TKEEP_int_regslice),
    .word_TSTRB(word_TSTRB_int_regslice),
    .word_TUSER(word_TUSER_int_regslice),
    .word_TLAST(word_TLAST_int_regslice),
    .word_TID(word_TID_int_regslice),
    .word_TDEST(word_TDEST_int_regslice),
    .add_ln62_out(grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_add_ln62_out),
    .add_ln62_out_ap_vld(grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_add_ln62_out_ap_vld)
);

wgen_mix_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .rows(rows),
    .cols(cols),
    .wrecv(wrecv),
    .wrecv_ap_vld(wrecv_ap_vld),
    .isent(isent),
    .isent_ap_vld(isent_ap_vld),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_local_deadlock(ap_local_deadlock)
);

wgen_mix_regslice_both #(
    .DataWidth( 24 ))
regslice_both_src_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(src_TDATA),
    .vld_in(src_TVALID),
    .ack_in(regslice_both_src_V_data_V_U_ack_in),
    .data_out(src_TDATA_int_regslice),
    .vld_out(src_TVALID_int_regslice),
    .ack_out(src_TREADY_int_regslice),
    .apdone_blk(regslice_both_src_V_data_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 3 ))
regslice_both_src_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(src_TKEEP),
    .vld_in(src_TVALID),
    .ack_in(regslice_both_src_V_keep_V_U_ack_in),
    .data_out(src_TKEEP_int_regslice),
    .vld_out(regslice_both_src_V_keep_V_U_vld_out),
    .ack_out(src_TREADY_int_regslice),
    .apdone_blk(regslice_both_src_V_keep_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 3 ))
regslice_both_src_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(src_TSTRB),
    .vld_in(src_TVALID),
    .ack_in(regslice_both_src_V_strb_V_U_ack_in),
    .data_out(src_TSTRB_int_regslice),
    .vld_out(regslice_both_src_V_strb_V_U_vld_out),
    .ack_out(src_TREADY_int_regslice),
    .apdone_blk(regslice_both_src_V_strb_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 1 ))
regslice_both_src_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(src_TUSER),
    .vld_in(src_TVALID),
    .ack_in(regslice_both_src_V_user_V_U_ack_in),
    .data_out(src_TUSER_int_regslice),
    .vld_out(regslice_both_src_V_user_V_U_vld_out),
    .ack_out(src_TREADY_int_regslice),
    .apdone_blk(regslice_both_src_V_user_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 1 ))
regslice_both_src_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(src_TLAST),
    .vld_in(src_TVALID),
    .ack_in(regslice_both_src_V_last_V_U_ack_in),
    .data_out(src_TLAST_int_regslice),
    .vld_out(regslice_both_src_V_last_V_U_vld_out),
    .ack_out(src_TREADY_int_regslice),
    .apdone_blk(regslice_both_src_V_last_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 1 ))
regslice_both_src_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(src_TID),
    .vld_in(src_TVALID),
    .ack_in(regslice_both_src_V_id_V_U_ack_in),
    .data_out(src_TID_int_regslice),
    .vld_out(regslice_both_src_V_id_V_U_vld_out),
    .ack_out(src_TREADY_int_regslice),
    .apdone_blk(regslice_both_src_V_id_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 1 ))
regslice_both_src_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(src_TDEST),
    .vld_in(src_TVALID),
    .ack_in(regslice_both_src_V_dest_V_U_ack_in),
    .data_out(src_TDEST_int_regslice),
    .vld_out(regslice_both_src_V_dest_V_U_vld_out),
    .ack_out(src_TREADY_int_regslice),
    .apdone_blk(regslice_both_src_V_dest_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 24 ))
regslice_both_dst_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TDATA),
    .vld_in(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID),
    .ack_in(dst_TREADY_int_regslice),
    .data_out(dst_TDATA),
    .vld_out(regslice_both_dst_V_data_V_U_vld_out),
    .ack_out(dst_TREADY),
    .apdone_blk(regslice_both_dst_V_data_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 3 ))
regslice_both_dst_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TKEEP),
    .vld_in(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID),
    .ack_in(regslice_both_dst_V_keep_V_U_ack_in_dummy),
    .data_out(dst_TKEEP),
    .vld_out(regslice_both_dst_V_keep_V_U_vld_out),
    .ack_out(dst_TREADY),
    .apdone_blk(regslice_both_dst_V_keep_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 3 ))
regslice_both_dst_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TSTRB),
    .vld_in(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID),
    .ack_in(regslice_both_dst_V_strb_V_U_ack_in_dummy),
    .data_out(dst_TSTRB),
    .vld_out(regslice_both_dst_V_strb_V_U_vld_out),
    .ack_out(dst_TREADY),
    .apdone_blk(regslice_both_dst_V_strb_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dst_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TUSER),
    .vld_in(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID),
    .ack_in(regslice_both_dst_V_user_V_U_ack_in_dummy),
    .data_out(dst_TUSER),
    .vld_out(regslice_both_dst_V_user_V_U_vld_out),
    .ack_out(dst_TREADY),
    .apdone_blk(regslice_both_dst_V_user_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dst_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TLAST),
    .vld_in(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID),
    .ack_in(regslice_both_dst_V_last_V_U_ack_in_dummy),
    .data_out(dst_TLAST),
    .vld_out(regslice_both_dst_V_last_V_U_vld_out),
    .ack_out(dst_TREADY),
    .apdone_blk(regslice_both_dst_V_last_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dst_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TID),
    .vld_in(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID),
    .ack_in(regslice_both_dst_V_id_V_U_ack_in_dummy),
    .data_out(dst_TID),
    .vld_out(regslice_both_dst_V_id_V_U_vld_out),
    .ack_out(dst_TREADY),
    .apdone_blk(regslice_both_dst_V_id_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dst_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TDEST),
    .vld_in(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID),
    .ack_in(regslice_both_dst_V_dest_V_U_ack_in_dummy),
    .data_out(dst_TDEST),
    .vld_out(regslice_both_dst_V_dest_V_U_vld_out),
    .ack_out(dst_TREADY),
    .apdone_blk(regslice_both_dst_V_dest_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 24 ))
regslice_both_word_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(word_TDATA),
    .vld_in(word_TVALID),
    .ack_in(regslice_both_word_V_data_V_U_ack_in),
    .data_out(word_TDATA_int_regslice),
    .vld_out(word_TVALID_int_regslice),
    .ack_out(word_TREADY_int_regslice),
    .apdone_blk(regslice_both_word_V_data_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 3 ))
regslice_both_word_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(word_TKEEP),
    .vld_in(word_TVALID),
    .ack_in(regslice_both_word_V_keep_V_U_ack_in),
    .data_out(word_TKEEP_int_regslice),
    .vld_out(regslice_both_word_V_keep_V_U_vld_out),
    .ack_out(word_TREADY_int_regslice),
    .apdone_blk(regslice_both_word_V_keep_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 3 ))
regslice_both_word_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(word_TSTRB),
    .vld_in(word_TVALID),
    .ack_in(regslice_both_word_V_strb_V_U_ack_in),
    .data_out(word_TSTRB_int_regslice),
    .vld_out(regslice_both_word_V_strb_V_U_vld_out),
    .ack_out(word_TREADY_int_regslice),
    .apdone_blk(regslice_both_word_V_strb_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 1 ))
regslice_both_word_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(word_TUSER),
    .vld_in(word_TVALID),
    .ack_in(regslice_both_word_V_user_V_U_ack_in),
    .data_out(word_TUSER_int_regslice),
    .vld_out(regslice_both_word_V_user_V_U_vld_out),
    .ack_out(word_TREADY_int_regslice),
    .apdone_blk(regslice_both_word_V_user_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 1 ))
regslice_both_word_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(word_TLAST),
    .vld_in(word_TVALID),
    .ack_in(regslice_both_word_V_last_V_U_ack_in),
    .data_out(word_TLAST_int_regslice),
    .vld_out(regslice_both_word_V_last_V_U_vld_out),
    .ack_out(word_TREADY_int_regslice),
    .apdone_blk(regslice_both_word_V_last_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 1 ))
regslice_both_word_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(word_TID),
    .vld_in(word_TVALID),
    .ack_in(regslice_both_word_V_id_V_U_ack_in),
    .data_out(word_TID_int_regslice),
    .vld_out(regslice_both_word_V_id_V_U_vld_out),
    .ack_out(word_TREADY_int_regslice),
    .apdone_blk(regslice_both_word_V_id_V_U_apdone_blk)
);

wgen_mix_regslice_both #(
    .DataWidth( 1 ))
regslice_both_word_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(word_TDEST),
    .vld_in(word_TVALID),
    .ack_in(regslice_both_word_V_dest_V_U_ack_in),
    .data_out(word_TDEST_int_regslice),
    .vld_out(regslice_both_word_V_dest_V_U_vld_out),
    .ack_out(word_TREADY_int_regslice),
    .apdone_blk(regslice_both_word_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln31_1_fu_324_p2 == 1'd0) & (cmp1171_reg_481 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start_reg <= 1'b1;
        end else if ((grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_ready == 1'b1)) begin
            grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start_reg <= 1'b1;
        end else if ((grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_ready == 1'b1)) begin
            grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start_reg <= 1'b1;
        end else if ((grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_ready == 1'b1)) begin
            grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_fu_300_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_142 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_on_subcall_done))) begin
        i_fu_142 <= i_2_reg_488;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_1_fu_324_p2 == 1'd0) & (cmp1171_reg_481 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_2_reg_172 <= 32'd0;
    end else if (((cmp1171_reg_481 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        j_2_reg_172 <= grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_row_usage_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        wrecv_n_local <= add_ln51_fu_405_p2;
    end else if (((1'b1 == ap_CS_fsm_state9) & (regslice_both_dst_V_data_V_U_apdone_blk == 1'b0) & ((icmp_ln31_reg_470 == 1'd0) | (icmp_ln58_reg_503 == 1'd1)))) begin
        wrecv_n_local <= add_ln62_loc_fu_134;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_n_local_o_ap_vld == 1'b1))) begin
        wrecv_n_local <= grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_n_local_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_add_ln62_out_ap_vld == 1'b1))) begin
        add_ln62_loc_fu_134 <= grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_add_ln62_out;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_fu_300_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        cmp1171_reg_481 <= cmp1171_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_1_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        cmp12_reg_498 <= cmp12_fu_352_p2;
        icmp_reg_493 <= icmp_fu_345_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        cols_read_reg_432 <= cols;
        empty_reg_443 <= empty_fu_284_p1;
        icmp_ln31_reg_470 <= icmp_ln31_fu_300_p2;
        rows_read_reg_437 <= rows;
        sub13_reg_465 <= sub13_fu_294_p2;
        sub_reg_460 <= sub_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_488 <= i_2_fu_329_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_reg_493 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        icmp_ln51_reg_507 <= icmp_ln51_fu_393_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_1_fu_324_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln58_reg_503 <= icmp_ln58_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp1171_reg_481 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        isent_n_local <= add_ln33_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        wrecv_n_local_load_reg_511 <= wrecv_n_local;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state6_on_subcall_done)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_dst_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (regslice_both_dst_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((cmp1171_reg_481 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_phi_mux_j_2_phi_fu_176_p4 = grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_row_usage_out;
    end else begin
        ap_phi_mux_j_2_phi_fu_176_p4 = j_2_reg_172;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (regslice_both_dst_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((cmp1171_reg_481 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        isent_ap_vld = 1'b1;
    end else begin
        isent_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        src_TREADY_int_regslice = grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_src_TREADY;
    end else begin
        src_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        word_TREADY_int_regslice = grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_word_TREADY;
    end else if (((icmp_reg_493 == 1'd1) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln51_reg_507 == 1'd1))) begin
        word_TREADY_int_regslice = grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_word_TREADY;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        word_TREADY_int_regslice = grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_TREADY;
    end else begin
        word_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (regslice_both_dst_V_data_V_U_apdone_blk == 1'b0) & ((icmp_ln31_reg_470 == 1'd0) | (icmp_ln58_reg_503 == 1'd1)))) begin
        wrecv = add_ln62_loc_fu_134;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        wrecv = add_ln51_fu_405_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_ap_vld == 1'b1))) begin
        wrecv = grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv;
    end else begin
        wrecv = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state9) & (regslice_both_dst_V_data_V_U_apdone_blk == 1'b0) & ((icmp_ln31_reg_470 == 1'd0) | (icmp_ln58_reg_503 == 1'd1))))) begin
        wrecv_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        wrecv_ap_vld = grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_ap_vld;
    end else begin
        wrecv_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln31_fu_300_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln31_fu_300_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln31_1_fu_324_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln58_fu_367_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((icmp_ln31_1_fu_324_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln58_fu_367_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((icmp_ln31_1_fu_324_p2 == 1'd0) & (cmp1171_reg_481 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_reg_493 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln51_fu_393_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (regslice_both_dst_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln33_fu_381_p2 = (isent_n_local + cols_read_reg_432);

assign add_ln51_fu_405_p2 = (wrecv_n_local + sub_ln51_fu_399_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state6_on_subcall_done = ((ap_predicate_op96_call_state6 == 1'b1) & (grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_done == 1'b0));
end


assign ap_local_deadlock = 1'd0;

always @ (*) begin
    ap_predicate_op96_call_state6 = ((icmp_reg_493 == 1'd1) & (icmp_ln51_reg_507 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cmp1171_fu_306_p2 = (($signed(cols) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign cmp12_fu_352_p2 = ((zext_ln31_fu_320_p1 == sub_reg_460) ? 1'b1 : 1'b0);

assign dst_TVALID = regslice_both_dst_V_data_V_U_vld_out;

assign dst_TVALID_int_regslice = grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID;

assign empty_fu_284_p1 = cols[30:0];

assign grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start = grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start_reg;

assign grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TREADY = (dst_TREADY_int_regslice & ap_CS_fsm_state3);

assign grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start = grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start_reg;

assign grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start = grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start_reg;

assign i_2_fu_329_p2 = (i_fu_142 + 31'd1);

assign icmp_fu_345_p2 = ((tmp_1_fu_335_p4 == 26'd0) ? 1'b1 : 1'b0);

assign icmp_ln31_1_fu_324_p2 = ((zext_ln31_fu_320_p1 == rows_read_reg_437) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_300_p2 = (($signed(rows) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_393_p2 = (($signed(ap_phi_mux_j_2_phi_fu_176_p4) < $signed(32'd207)) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_367_p2 = (($signed(tmp_fu_358_p4) < $signed(27'd1)) ? 1'b1 : 1'b0);

assign isent = (isent_n_local + cols_read_reg_432);

assign src_TREADY = regslice_both_src_V_data_V_U_ack_in;

assign sub13_fu_294_p2 = ($signed(empty_fu_284_p1) + $signed(31'd2147483647));

assign sub_fu_288_p2 = ($signed(rows) + $signed(32'd4294967295));

assign sub_ln51_fu_399_p2 = (32'd207 - j_2_reg_172);

assign tmp_1_fu_335_p4 = {{i_fu_142[30:5]}};

assign tmp_fu_358_p4 = {{rows_read_reg_437[31:5]}};

assign word_TREADY = regslice_both_word_V_data_V_U_ack_in;

assign zext_ln31_fu_320_p1 = i_fu_142;


reg find_kernel_block = 0;
assign ap_local_block = find_kernel_block;
// synthesis translate_off
`include "wgen_mix_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //wgen_mix

