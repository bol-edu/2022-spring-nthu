-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity wgen_mix is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_local_block : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    src_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    src_TVALID : IN STD_LOGIC;
    src_TREADY : OUT STD_LOGIC;
    src_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    src_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    src_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    dst_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    dst_TVALID : OUT STD_LOGIC;
    dst_TREADY : IN STD_LOGIC;
    dst_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    dst_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    dst_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    word_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    word_TVALID : IN STD_LOGIC;
    word_TREADY : OUT STD_LOGIC;
    word_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    word_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    word_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    word_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    word_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    word_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of wgen_mix is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "wgen_mix_wgen_mix,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.014250,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=777,HLS_SYN_LUT=1255,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv27_1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";

    signal ap_local_deadlock : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal rows : STD_LOGIC_VECTOR (31 downto 0);
    signal cols : STD_LOGIC_VECTOR (31 downto 0);
    signal wrecv : STD_LOGIC_VECTOR (31 downto 0);
    signal wrecv_ap_vld : STD_LOGIC;
    signal isent : STD_LOGIC_VECTOR (31 downto 0);
    signal isent_ap_vld : STD_LOGIC;
    signal isent_n_local : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal wrecv_n_local : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cols_read_reg_432 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_read_reg_437 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_284_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal empty_reg_443 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_fu_288_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_460 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub13_fu_294_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub13_reg_465 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln31_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_reg_470 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp1171_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp1171_reg_481 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_329_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_2_reg_488 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_493 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln31_1_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp12_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp12_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_reg_503 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_reg_507 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal wrecv_n_local_load_reg_511 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_done : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_idle : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_ready : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TREADY : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_src_TREADY : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_TREADY : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_ap_vld : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_row_usage_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_row_usage_out_ap_vld : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_n_local_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_n_local_o_ap_vld : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_done : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_idle : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_ready : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_word_TREADY : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_done : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_idle : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_ready : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_word_TREADY : STD_LOGIC;
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_add_ln62_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_add_ln62_out_ap_vld : STD_LOGIC;
    signal ap_phi_mux_j_2_phi_fu_176_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_2_reg_172 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal add_ln62_loc_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln33_fu_381_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln51_fu_405_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal regslice_both_dst_V_data_V_U_apdone_blk : STD_LOGIC;
    signal i_fu_142 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_predicate_op96_call_state6 : BOOLEAN;
    signal ap_block_state6_on_subcall_done : BOOLEAN;
    signal zext_ln31_fu_320_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_335_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_fu_358_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln51_fu_399_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal regslice_both_src_V_data_V_U_apdone_blk : STD_LOGIC;
    signal src_TDATA_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal src_TVALID_int_regslice : STD_LOGIC;
    signal src_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_src_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal src_TKEEP_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_src_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal src_TSTRB_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_src_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_user_V_U_apdone_blk : STD_LOGIC;
    signal src_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_last_V_U_apdone_blk : STD_LOGIC;
    signal src_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_id_V_U_apdone_blk : STD_LOGIC;
    signal src_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal src_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_dest_V_U_ack_in : STD_LOGIC;
    signal dst_TVALID_int_regslice : STD_LOGIC;
    signal dst_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_dst_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_id_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_id_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_word_V_data_V_U_apdone_blk : STD_LOGIC;
    signal word_TDATA_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal word_TVALID_int_regslice : STD_LOGIC;
    signal word_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_word_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_word_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal word_TKEEP_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_word_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_word_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_word_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal word_TSTRB_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_word_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_word_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_word_V_user_V_U_apdone_blk : STD_LOGIC;
    signal word_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_word_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_word_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_word_V_last_V_U_apdone_blk : STD_LOGIC;
    signal word_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_word_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_word_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_word_V_id_V_U_apdone_blk : STD_LOGIC;
    signal word_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_word_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_word_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_word_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal word_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_word_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_word_V_dest_V_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component wgen_mix_wgen_mix_Pipeline_VITIS_LOOP_33_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_TVALID : IN STD_LOGIC;
        word_TVALID : IN STD_LOGIC;
        dst_TREADY : IN STD_LOGIC;
        cols : IN STD_LOGIC_VECTOR (30 downto 0);
        sub13 : IN STD_LOGIC_VECTOR (30 downto 0);
        cmp12 : IN STD_LOGIC_VECTOR (0 downto 0);
        dst_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        dst_TVALID : OUT STD_LOGIC;
        dst_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        dst_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        dst_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
        src_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        src_TREADY : OUT STD_LOGIC;
        src_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        src_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        src_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        cmp5 : IN STD_LOGIC_VECTOR (0 downto 0);
        word_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        word_TREADY : OUT STD_LOGIC;
        word_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        word_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        word_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        word_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        word_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        word_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        wrecv : OUT STD_LOGIC_VECTOR (31 downto 0);
        wrecv_ap_vld : OUT STD_LOGIC;
        word_row_usage_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        word_row_usage_out_ap_vld : OUT STD_LOGIC;
        wrecv_n_local_i : IN STD_LOGIC_VECTOR (31 downto 0);
        wrecv_n_local_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        wrecv_n_local_o_ap_vld : OUT STD_LOGIC );
    end component;


    component wgen_mix_wgen_mix_Pipeline_VITIS_LOOP_51_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        word_TVALID : IN STD_LOGIC;
        j_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        word_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        word_TREADY : OUT STD_LOGIC;
        word_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        word_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        word_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        word_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        word_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        word_TDEST : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component wgen_mix_wgen_mix_Pipeline_VITIS_LOOP_60_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        word_TVALID : IN STD_LOGIC;
        wrecv_n_local_load : IN STD_LOGIC_VECTOR (31 downto 0);
        word_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        word_TREADY : OUT STD_LOGIC;
        word_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        word_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        word_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        word_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        word_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        word_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        add_ln62_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_ln62_out_ap_vld : OUT STD_LOGIC );
    end component;


    component wgen_mix_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        rows : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols : OUT STD_LOGIC_VECTOR (31 downto 0);
        wrecv : IN STD_LOGIC_VECTOR (31 downto 0);
        wrecv_ap_vld : IN STD_LOGIC;
        isent : IN STD_LOGIC_VECTOR (31 downto 0);
        isent_ap_vld : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_local_deadlock : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component wgen_mix_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184 : component wgen_mix_wgen_mix_Pipeline_VITIS_LOOP_33_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start,
        ap_done => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_done,
        ap_idle => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_idle,
        ap_ready => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_ready,
        src_TVALID => src_TVALID_int_regslice,
        word_TVALID => word_TVALID_int_regslice,
        dst_TREADY => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TREADY,
        cols => empty_reg_443,
        sub13 => sub13_reg_465,
        cmp12 => cmp12_reg_498,
        dst_TDATA => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TDATA,
        dst_TVALID => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID,
        dst_TKEEP => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TKEEP,
        dst_TSTRB => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TSTRB,
        dst_TUSER => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TUSER,
        dst_TLAST => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TLAST,
        dst_TID => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TID,
        dst_TDEST => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TDEST,
        src_TDATA => src_TDATA_int_regslice,
        src_TREADY => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_src_TREADY,
        src_TKEEP => src_TKEEP_int_regslice,
        src_TSTRB => src_TSTRB_int_regslice,
        src_TUSER => src_TUSER_int_regslice,
        src_TLAST => src_TLAST_int_regslice,
        src_TID => src_TID_int_regslice,
        src_TDEST => src_TDEST_int_regslice,
        cmp5 => icmp_reg_493,
        word_TDATA => word_TDATA_int_regslice,
        word_TREADY => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_TREADY,
        word_TKEEP => word_TKEEP_int_regslice,
        word_TSTRB => word_TSTRB_int_regslice,
        word_TUSER => word_TUSER_int_regslice,
        word_TLAST => word_TLAST_int_regslice,
        word_TID => word_TID_int_regslice,
        word_TDEST => word_TDEST_int_regslice,
        wrecv => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv,
        wrecv_ap_vld => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_ap_vld,
        word_row_usage_out => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_row_usage_out,
        word_row_usage_out_ap_vld => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_row_usage_out_ap_vld,
        wrecv_n_local_i => wrecv_n_local,
        wrecv_n_local_o => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_n_local_o,
        wrecv_n_local_o_ap_vld => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_n_local_o_ap_vld);

    grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239 : component wgen_mix_wgen_mix_Pipeline_VITIS_LOOP_51_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start,
        ap_done => grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_done,
        ap_idle => grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_idle,
        ap_ready => grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_ready,
        word_TVALID => word_TVALID_int_regslice,
        j_2 => j_2_reg_172,
        word_TDATA => word_TDATA_int_regslice,
        word_TREADY => grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_word_TREADY,
        word_TKEEP => word_TKEEP_int_regslice,
        word_TSTRB => word_TSTRB_int_regslice,
        word_TUSER => word_TUSER_int_regslice,
        word_TLAST => word_TLAST_int_regslice,
        word_TID => word_TID_int_regslice,
        word_TDEST => word_TDEST_int_regslice);

    grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259 : component wgen_mix_wgen_mix_Pipeline_VITIS_LOOP_60_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start,
        ap_done => grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_done,
        ap_idle => grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_idle,
        ap_ready => grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_ready,
        word_TVALID => word_TVALID_int_regslice,
        wrecv_n_local_load => wrecv_n_local_load_reg_511,
        word_TDATA => word_TDATA_int_regslice,
        word_TREADY => grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_word_TREADY,
        word_TKEEP => word_TKEEP_int_regslice,
        word_TSTRB => word_TSTRB_int_regslice,
        word_TUSER => word_TUSER_int_regslice,
        word_TLAST => word_TLAST_int_regslice,
        word_TID => word_TID_int_regslice,
        word_TDEST => word_TDEST_int_regslice,
        add_ln62_out => grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_add_ln62_out,
        add_ln62_out_ap_vld => grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_add_ln62_out_ap_vld);

    control_s_axi_U : component wgen_mix_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        rows => rows,
        cols => cols,
        wrecv => wrecv,
        wrecv_ap_vld => wrecv_ap_vld,
        isent => isent,
        isent_ap_vld => isent_ap_vld,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_local_deadlock => ap_local_deadlock);

    regslice_both_src_V_data_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TDATA,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_data_V_U_ack_in,
        data_out => src_TDATA_int_regslice,
        vld_out => src_TVALID_int_regslice,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_data_V_U_apdone_blk);

    regslice_both_src_V_keep_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TKEEP,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_keep_V_U_ack_in,
        data_out => src_TKEEP_int_regslice,
        vld_out => regslice_both_src_V_keep_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_keep_V_U_apdone_blk);

    regslice_both_src_V_strb_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TSTRB,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_strb_V_U_ack_in,
        data_out => src_TSTRB_int_regslice,
        vld_out => regslice_both_src_V_strb_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_strb_V_U_apdone_blk);

    regslice_both_src_V_user_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TUSER,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_user_V_U_ack_in,
        data_out => src_TUSER_int_regslice,
        vld_out => regslice_both_src_V_user_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_user_V_U_apdone_blk);

    regslice_both_src_V_last_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TLAST,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_last_V_U_ack_in,
        data_out => src_TLAST_int_regslice,
        vld_out => regslice_both_src_V_last_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_last_V_U_apdone_blk);

    regslice_both_src_V_id_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TID,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_id_V_U_ack_in,
        data_out => src_TID_int_regslice,
        vld_out => regslice_both_src_V_id_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_id_V_U_apdone_blk);

    regslice_both_src_V_dest_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TDEST,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_dest_V_U_ack_in,
        data_out => src_TDEST_int_regslice,
        vld_out => regslice_both_src_V_dest_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_dest_V_U_apdone_blk);

    regslice_both_dst_V_data_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TDATA,
        vld_in => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID,
        ack_in => dst_TREADY_int_regslice,
        data_out => dst_TDATA,
        vld_out => regslice_both_dst_V_data_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_data_V_U_apdone_blk);

    regslice_both_dst_V_keep_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TKEEP,
        vld_in => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID,
        ack_in => regslice_both_dst_V_keep_V_U_ack_in_dummy,
        data_out => dst_TKEEP,
        vld_out => regslice_both_dst_V_keep_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_keep_V_U_apdone_blk);

    regslice_both_dst_V_strb_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TSTRB,
        vld_in => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID,
        ack_in => regslice_both_dst_V_strb_V_U_ack_in_dummy,
        data_out => dst_TSTRB,
        vld_out => regslice_both_dst_V_strb_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_strb_V_U_apdone_blk);

    regslice_both_dst_V_user_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TUSER,
        vld_in => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID,
        ack_in => regslice_both_dst_V_user_V_U_ack_in_dummy,
        data_out => dst_TUSER,
        vld_out => regslice_both_dst_V_user_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_user_V_U_apdone_blk);

    regslice_both_dst_V_last_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TLAST,
        vld_in => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID,
        ack_in => regslice_both_dst_V_last_V_U_ack_in_dummy,
        data_out => dst_TLAST,
        vld_out => regslice_both_dst_V_last_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_last_V_U_apdone_blk);

    regslice_both_dst_V_id_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TID,
        vld_in => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID,
        ack_in => regslice_both_dst_V_id_V_U_ack_in_dummy,
        data_out => dst_TID,
        vld_out => regslice_both_dst_V_id_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_id_V_U_apdone_blk);

    regslice_both_dst_V_dest_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TDEST,
        vld_in => grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID,
        ack_in => regslice_both_dst_V_dest_V_U_ack_in_dummy,
        data_out => dst_TDEST,
        vld_out => regslice_both_dst_V_dest_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_dest_V_U_apdone_blk);

    regslice_both_word_V_data_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => word_TDATA,
        vld_in => word_TVALID,
        ack_in => regslice_both_word_V_data_V_U_ack_in,
        data_out => word_TDATA_int_regslice,
        vld_out => word_TVALID_int_regslice,
        ack_out => word_TREADY_int_regslice,
        apdone_blk => regslice_both_word_V_data_V_U_apdone_blk);

    regslice_both_word_V_keep_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => word_TKEEP,
        vld_in => word_TVALID,
        ack_in => regslice_both_word_V_keep_V_U_ack_in,
        data_out => word_TKEEP_int_regslice,
        vld_out => regslice_both_word_V_keep_V_U_vld_out,
        ack_out => word_TREADY_int_regslice,
        apdone_blk => regslice_both_word_V_keep_V_U_apdone_blk);

    regslice_both_word_V_strb_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => word_TSTRB,
        vld_in => word_TVALID,
        ack_in => regslice_both_word_V_strb_V_U_ack_in,
        data_out => word_TSTRB_int_regslice,
        vld_out => regslice_both_word_V_strb_V_U_vld_out,
        ack_out => word_TREADY_int_regslice,
        apdone_blk => regslice_both_word_V_strb_V_U_apdone_blk);

    regslice_both_word_V_user_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => word_TUSER,
        vld_in => word_TVALID,
        ack_in => regslice_both_word_V_user_V_U_ack_in,
        data_out => word_TUSER_int_regslice,
        vld_out => regslice_both_word_V_user_V_U_vld_out,
        ack_out => word_TREADY_int_regslice,
        apdone_blk => regslice_both_word_V_user_V_U_apdone_blk);

    regslice_both_word_V_last_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => word_TLAST,
        vld_in => word_TVALID,
        ack_in => regslice_both_word_V_last_V_U_ack_in,
        data_out => word_TLAST_int_regslice,
        vld_out => regslice_both_word_V_last_V_U_vld_out,
        ack_out => word_TREADY_int_regslice,
        apdone_blk => regslice_both_word_V_last_V_U_apdone_blk);

    regslice_both_word_V_id_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => word_TID,
        vld_in => word_TVALID,
        ack_in => regslice_both_word_V_id_V_U_ack_in,
        data_out => word_TID_int_regslice,
        vld_out => regslice_both_word_V_id_V_U_vld_out,
        ack_out => word_TREADY_int_regslice,
        apdone_blk => regslice_both_word_V_id_V_U_apdone_blk);

    regslice_both_word_V_dest_V_U : component wgen_mix_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => word_TDEST,
        vld_in => word_TVALID,
        ack_in => regslice_both_word_V_dest_V_U_ack_in,
        data_out => word_TDEST_int_regslice,
        vld_out => regslice_both_word_V_dest_V_U_vld_out,
        ack_out => word_TREADY_int_regslice,
        apdone_blk => regslice_both_word_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln31_1_fu_324_p2 = ap_const_lv1_0) and (cmp1171_reg_481 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_ready = ap_const_logic_1)) then 
                    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_ready = ap_const_logic_1)) then 
                    grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_ready = ap_const_logic_1)) then 
                    grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_fu_300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_fu_142 <= ap_const_lv31_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6_on_subcall_done))) then 
                i_fu_142 <= i_2_reg_488;
            end if; 
        end if;
    end process;

    j_2_reg_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_1_fu_324_p2 = ap_const_lv1_0) and (cmp1171_reg_481 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_2_reg_172 <= ap_const_lv32_0;
            elsif (((cmp1171_reg_481 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                j_2_reg_172 <= grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_row_usage_out;
            end if; 
        end if;
    end process;

    wrecv_n_local_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                wrecv_n_local <= add_ln51_fu_405_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0) and ((icmp_ln31_reg_470 = ap_const_lv1_0) or (icmp_ln58_reg_503 = ap_const_lv1_1)))) then 
                wrecv_n_local <= add_ln62_loc_fu_134;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_n_local_o_ap_vld = ap_const_logic_1))) then 
                wrecv_n_local <= grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_n_local_o;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_add_ln62_out_ap_vld = ap_const_logic_1))) then
                add_ln62_loc_fu_134 <= grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_add_ln62_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_fu_300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cmp1171_reg_481 <= cmp1171_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_1_fu_324_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                cmp12_reg_498 <= cmp12_fu_352_p2;
                icmp_reg_493 <= icmp_fu_345_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                cols_read_reg_432 <= cols;
                empty_reg_443 <= empty_fu_284_p1;
                icmp_ln31_reg_470 <= icmp_ln31_fu_300_p2;
                rows_read_reg_437 <= rows;
                sub13_reg_465 <= sub13_fu_294_p2;
                sub_reg_460 <= sub_fu_288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_2_reg_488 <= i_2_fu_329_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_reg_493 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln51_reg_507 <= icmp_ln51_fu_393_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_1_fu_324_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln58_reg_503 <= icmp_ln58_fu_367_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp1171_reg_481 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                isent_n_local <= add_ln33_fu_381_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                wrecv_n_local_load_reg_511 <= wrecv_n_local;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln31_fu_300_p2, cmp1171_reg_481, ap_CS_fsm_state2, icmp_reg_493, icmp_ln31_1_fu_324_p2, icmp_ln58_fu_367_p2, icmp_ln51_fu_393_p2, ap_CS_fsm_state4, grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_done, grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state9, regslice_both_dst_V_data_V_U_apdone_blk, ap_block_state6_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln31_fu_300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((icmp_ln31_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln31_1_fu_324_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln58_fu_367_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((icmp_ln31_1_fu_324_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln58_fu_367_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif (((icmp_ln31_1_fu_324_p2 = ap_const_lv1_0) and (cmp1171_reg_481 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_reg_493 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln51_fu_393_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln33_fu_381_p2 <= std_logic_vector(unsigned(isent_n_local) + unsigned(cols_read_reg_432));
    add_ln51_fu_405_p2 <= std_logic_vector(unsigned(wrecv_n_local) + unsigned(sub_ln51_fu_399_p2));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_done)
    begin
        if ((grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(ap_block_state6_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state6_on_subcall_done)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_done)
    begin
        if ((grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state6_on_subcall_done_assign_proc : process(grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_done, ap_predicate_op96_call_state6)
    begin
                ap_block_state6_on_subcall_done <= ((ap_predicate_op96_call_state6 = ap_const_boolean_1) and (grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state9, regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_lv1_0;

    ap_phi_mux_j_2_phi_fu_176_p4_assign_proc : process(cmp1171_reg_481, ap_CS_fsm_state4, grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_row_usage_out, j_2_reg_172)
    begin
        if (((cmp1171_reg_481 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_phi_mux_j_2_phi_fu_176_p4 <= grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_row_usage_out;
        else 
            ap_phi_mux_j_2_phi_fu_176_p4 <= j_2_reg_172;
        end if; 
    end process;


    ap_predicate_op96_call_state6_assign_proc : process(icmp_reg_493, icmp_ln51_reg_507)
    begin
                ap_predicate_op96_call_state6 <= ((icmp_reg_493 = ap_const_lv1_1) and (icmp_ln51_reg_507 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9, regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    cmp1171_fu_306_p2 <= "1" when (signed(cols) > signed(ap_const_lv32_0)) else "0";
    cmp12_fu_352_p2 <= "1" when (zext_ln31_fu_320_p1 = sub_reg_460) else "0";
    dst_TVALID <= regslice_both_dst_V_data_V_U_vld_out;
    dst_TVALID_int_regslice <= grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TVALID;
    empty_fu_284_p1 <= cols(31 - 1 downto 0);
    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start <= grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_ap_start_reg;
    grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_dst_TREADY <= (dst_TREADY_int_regslice and ap_CS_fsm_state3);
    grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start <= grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_ap_start_reg;
    grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start <= grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_ap_start_reg;
    i_2_fu_329_p2 <= std_logic_vector(unsigned(i_fu_142) + unsigned(ap_const_lv31_1));
    icmp_fu_345_p2 <= "1" when (tmp_1_fu_335_p4 = ap_const_lv26_0) else "0";
    icmp_ln31_1_fu_324_p2 <= "1" when (zext_ln31_fu_320_p1 = rows_read_reg_437) else "0";
    icmp_ln31_fu_300_p2 <= "1" when (signed(rows) > signed(ap_const_lv32_0)) else "0";
    icmp_ln51_fu_393_p2 <= "1" when (signed(ap_phi_mux_j_2_phi_fu_176_p4) < signed(ap_const_lv32_CF)) else "0";
    icmp_ln58_fu_367_p2 <= "1" when (signed(tmp_fu_358_p4) < signed(ap_const_lv27_1)) else "0";
    isent <= std_logic_vector(unsigned(isent_n_local) + unsigned(cols_read_reg_432));

    isent_ap_vld_assign_proc : process(cmp1171_reg_481, ap_CS_fsm_state4)
    begin
        if (((cmp1171_reg_481 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            isent_ap_vld <= ap_const_logic_1;
        else 
            isent_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    src_TREADY <= regslice_both_src_V_data_V_U_ack_in;

    src_TREADY_int_regslice_assign_proc : process(grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_src_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            src_TREADY_int_regslice <= grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_src_TREADY;
        else 
            src_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    sub13_fu_294_p2 <= std_logic_vector(unsigned(empty_fu_284_p1) + unsigned(ap_const_lv31_7FFFFFFF));
    sub_fu_288_p2 <= std_logic_vector(unsigned(rows) + unsigned(ap_const_lv32_FFFFFFFF));
    sub_ln51_fu_399_p2 <= std_logic_vector(unsigned(ap_const_lv32_CF) - unsigned(j_2_reg_172));
    tmp_1_fu_335_p4 <= i_fu_142(30 downto 5);
    tmp_fu_358_p4 <= rows_read_reg_437(31 downto 5);
    word_TREADY <= regslice_both_word_V_data_V_U_ack_in;

    word_TREADY_int_regslice_assign_proc : process(icmp_reg_493, icmp_ln51_reg_507, grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_TREADY, grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_word_TREADY, grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_word_TREADY, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            word_TREADY_int_regslice <= grp_wgen_mix_Pipeline_VITIS_LOOP_60_4_fu_259_word_TREADY;
        elsif (((icmp_reg_493 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln51_reg_507 = ap_const_lv1_1))) then 
            word_TREADY_int_regslice <= grp_wgen_mix_Pipeline_VITIS_LOOP_51_3_fu_239_word_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            word_TREADY_int_regslice <= grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_word_TREADY;
        else 
            word_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    wrecv_assign_proc : process(icmp_ln31_reg_470, icmp_ln58_reg_503, grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv, grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state5, add_ln62_loc_fu_134, add_ln51_fu_405_p2, ap_CS_fsm_state9, regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0) and ((icmp_ln31_reg_470 = ap_const_lv1_0) or (icmp_ln58_reg_503 = ap_const_lv1_1)))) then 
            wrecv <= add_ln62_loc_fu_134;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            wrecv <= add_ln51_fu_405_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_ap_vld = ap_const_logic_1))) then 
            wrecv <= grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv;
        else 
            wrecv <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wrecv_ap_vld_assign_proc : process(icmp_ln31_reg_470, icmp_ln58_reg_503, grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state9, regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0) and ((icmp_ln31_reg_470 = ap_const_lv1_0) or (icmp_ln58_reg_503 = ap_const_lv1_1))))) then 
            wrecv_ap_vld <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            wrecv_ap_vld <= grp_wgen_mix_Pipeline_VITIS_LOOP_33_2_fu_184_wrecv_ap_vld;
        else 
            wrecv_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln31_fu_320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_142),32));
end behav;
