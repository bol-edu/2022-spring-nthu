-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity resize_accel_resizeNNBilinear_9_2160_3840_1_2160_3840_1_9_Pipeline_VITIS_LOOP_394_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_mat_420_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    src_mat_420_empty_n : IN STD_LOGIC;
    src_mat_420_read : OUT STD_LOGIC;
    dst_mat_421_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    dst_mat_421_full_n : IN STD_LOGIC;
    dst_mat_421_write : OUT STD_LOGIC;
    indexy_V : IN STD_LOGIC_VECTOR (16 downto 0);
    nextYScale_V : IN STD_LOGIC_VECTOR (16 downto 0);
    ret_V_35 : IN STD_LOGIC_VECTOR (16 downto 0);
    loop_col_count : IN STD_LOGIC_VECTOR (31 downto 0);
    cmp273 : IN STD_LOGIC_VECTOR (0 downto 0);
    line_buffer_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_ce0 : OUT STD_LOGIC;
    line_buffer_V_we0 : OUT STD_LOGIC;
    line_buffer_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_ce1 : OUT STD_LOGIC;
    line_buffer_V_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_ce2 : OUT STD_LOGIC;
    line_buffer_V_q2 : IN STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_1_ce0 : OUT STD_LOGIC;
    line_buffer_V_1_we0 : OUT STD_LOGIC;
    line_buffer_V_1_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_1_ce1 : OUT STD_LOGIC;
    line_buffer_V_1_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    line_buffer_V_1_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_1_ce2 : OUT STD_LOGIC;
    line_buffer_V_1_q2 : IN STD_LOGIC_VECTOR (23 downto 0);
    tmp_V : IN STD_LOGIC_VECTOR (31 downto 0);
    first_row_index_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    trunc_ln3 : IN STD_LOGIC_VECTOR (47 downto 0);
    indexy_pre_V : IN STD_LOGIC_VECTOR (38 downto 0);
    p_Result_s : IN STD_LOGIC;
    trunc_ln5 : IN STD_LOGIC_VECTOR (23 downto 0);
    shl_i_i_i_i_i : IN STD_LOGIC_VECTOR (53 downto 0);
    indexx_pre_V_1 : IN STD_LOGIC_VECTOR (41 downto 0);
    cmp89 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    icmp_ln1076_1 : IN STD_LOGIC_VECTOR (0 downto 0);
    op2_assign_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    op2_assign : IN STD_LOGIC_VECTOR (31 downto 0);
    cmp277 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    read_pixel_1_out_i : IN STD_LOGIC_VECTOR (23 downto 0);
    read_pixel_1_out_o : OUT STD_LOGIC_VECTOR (23 downto 0);
    read_pixel_1_out_o_ap_vld : OUT STD_LOGIC;
    indexy_V_1_out : OUT STD_LOGIC_VECTOR (16 downto 0);
    indexy_V_1_out_ap_vld : OUT STD_LOGIC;
    nextYScale_V_1_out : OUT STD_LOGIC_VECTOR (16 downto 0);
    nextYScale_V_1_out_ap_vld : OUT STD_LOGIC;
    grp_scaleCompute_17_42_20_48_16_1_s_fu_189_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_scaleCompute_17_42_20_48_16_1_s_fu_189_p_din2 : OUT STD_LOGIC_VECTOR (47 downto 0);
    grp_scaleCompute_17_42_20_48_16_1_s_fu_189_p_dout0 : IN STD_LOGIC_VECTOR (41 downto 0);
    grp_scaleCompute_17_42_20_48_16_1_s_fu_189_p_ce : OUT STD_LOGIC );
end;


architecture behav of resize_accel_resizeNNBilinear_9_2160_3840_1_2160_3840_1_9_Pipeline_VITIS_LOOP_394_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv42_0 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal icmp_ln394_reg_1629 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1629_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_1638 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_1638_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op91_read_state8 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal and_ln492_reg_1648 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op336_write_state18 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln394_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal src_mat_420_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal dst_mat_421_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln394_reg_1629_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_row_index_5_read_reg_1606 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1064_reg_1642 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_reg_1642_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_V_2_q2 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_V_2_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal cmp89_read_read_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp273_read_read_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_reg_1619 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_reg_1619_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal j_reg_1619_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal j_reg_1619_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal j_reg_1619_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal j_reg_1619_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal j_reg_1619_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal j_reg_1619_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln394_1_fu_608_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln394_1_reg_1624 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln394_reg_1629_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1629_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1629_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1629_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1629_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1629_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1629_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1629_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1629_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1629_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1629_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1629_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_1629_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln737_fu_666_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1633 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1633_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1633_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1633_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1633_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1633_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1633_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1633_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1633_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1633_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln411_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_1638_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_1638_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_1638_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_1638_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_1638_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_reg_1642_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_reg_1642_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_reg_1642_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_reg_1642_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_reg_1642_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_reg_1642_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_reg_1642_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_reg_1642_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1064_reg_1642_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln492_reg_1648_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln494_reg_1652_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln491_reg_1656_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indexx_pre_comp_V_reg_1660 : STD_LOGIC_VECTOR (41 downto 0);
    signal icmp_ln1547_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1547_reg_1666 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_2_fu_814_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal idx_2_reg_1671 : STD_LOGIC_VECTOR (16 downto 0);
    signal not_cmp_i_i175_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_cmp_i_i175_reg_1677 : STD_LOGIC_VECTOR (0 downto 0);
    signal Wx_V_reg_1682 : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_V_reg_1682_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_V_reg_1682_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_V_reg_1682_pp0_iter11_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_1_addr_gep_fu_435_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_1_addr_1_gep_fu_443_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_2_addr_gep_fu_451_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_2_addr_1_gep_fu_458_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_addr_gep_fu_465_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_addr_1_gep_fu_473_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal Wy_V_fu_906_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal Wy_V_reg_1748 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln674_fu_937_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_1763 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_1763_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_1763_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_1763_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_reg_1763_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal val0_V_fu_989_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal val0_V_reg_1768 : STD_LOGIC_VECTOR (9 downto 0);
    signal val0_V_reg_1768_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal val2_V_fu_1001_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal val2_V_reg_1773 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1171_fu_1011_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_9_fu_1014_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_reg_1790 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_reg_1790_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_reg_1790_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_reg_1790_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_reg_1790_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal val0_V_1_fu_1090_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal val0_V_1_reg_1795 : STD_LOGIC_VECTOR (9 downto 0);
    signal val0_V_1_reg_1795_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal val2_V_1_fu_1102_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal val2_V_1_reg_1800 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_4_fu_1112_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_reg_1810 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_reg_1810_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_reg_1810_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_reg_1810_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_reg_1810_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal val0_V_2_fu_1188_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal val0_V_2_reg_1815 : STD_LOGIC_VECTOR (9 downto 0);
    signal val0_V_2_reg_1815_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal val2_V_2_fu_1200_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal val2_V_2_reg_1820 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1171_1_fu_1213_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln717_1_fu_1231_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_9_fu_1276_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_9_reg_1904 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln882_2_reg_1909 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln902_2_fu_1296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln902_2_reg_1916 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_13_fu_1316_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_13_reg_1921 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln882_3_reg_1926 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln902_3_fu_1336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln902_3_reg_1933 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_17_fu_1356_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_17_reg_1938 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln882_4_reg_1943 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln902_4_fu_1376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln902_4_reg_1950 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_V_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_2_ce0 : STD_LOGIC;
    signal line_buffer_V_2_we0 : STD_LOGIC;
    signal line_buffer_V_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_2_ce1 : STD_LOGIC;
    signal line_buffer_V_2_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_2_ce2 : STD_LOGIC;
    signal grp_scaleCompute_17_42_20_48_16_1_s_fu_541_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call4 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call4 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call4 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call4 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call4 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call4 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call4 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call4 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call4 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call4 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call4 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call4 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16_ignore_call4 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17_ignore_call4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp82 : BOOLEAN;
    signal ap_phi_mux_flag_write_phi_fu_486_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_flag_write_reg_481 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_flag_write_reg_481 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_flag_write_reg_481 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_flag_write_reg_481 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_flag_write_reg_481 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_flag_write_reg_481 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_flag_write_reg_481 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter7_flag_write_reg_481 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter8_flag_write_reg_481 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_7_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_7_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_7_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_7_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter4_p_Val2_7_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter5_p_Val2_7_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter6_p_Val2_7_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter7_p_Val2_7_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter8_p_Val2_7_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter9_p_Val2_7_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter10_p_Val2_7_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter11_p_Val2_7_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_5_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_5_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_5_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_5_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter4_p_Val2_5_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter5_p_Val2_5_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter6_p_Val2_5_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter7_p_Val2_5_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter8_p_Val2_5_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter9_p_Val2_5_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter10_p_Val2_5_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter11_p_Val2_5_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0_0_0407_190_reg_519 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0_0_0407_190_reg_519 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_p_0_0_0407_190_reg_519 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_0_0407_190_reg_519 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter4_p_0_0_0407_190_reg_519 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter5_p_0_0_0407_190_reg_519 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter6_p_0_0_0407_190_reg_519 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter7_p_0_0_0407_190_reg_519 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter8_p_0_0_0407_190_reg_519 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter9_p_0_0_0407_190_reg_519 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter10_p_0_0_0407_190_reg_519 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter11_p_0_0_0407_190_reg_519 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0_0_040786_reg_530 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0_0_040786_reg_530 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_p_0_0_040786_reg_530 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_0_040786_reg_530 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter4_p_0_0_040786_reg_530 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter5_p_0_0_040786_reg_530 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter6_p_0_0_040786_reg_530 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter7_p_0_0_040786_reg_530 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter8_p_0_0_040786_reg_530 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter9_p_0_0_040786_reg_530 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter10_p_0_0_040786_reg_530 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter11_p_0_0_040786_reg_530 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln394_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln435_fu_875_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln436_fu_884_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal nextYScale_V_1_fu_164 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal tmp_fu_168 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_20_fu_658_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal j_2_fu_172 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln394_fu_618_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_allocacmp_j : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_read_read_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln902_fu_634_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln_fu_624_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln902_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_644_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_20_fu_658_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_fu_650_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln413_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1064_fu_682_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1064_1_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1548_fu_731_p0 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln1548_fu_731_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_2_fu_752_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal indexx_pre_V_3_fu_759_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal indexx_pre_V_fu_764_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal trunc_ln902_1_fu_790_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln882_1_fu_772_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln902_1_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_5_fu_800_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_1_fu_782_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_1_fu_806_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln737_1_fu_822_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln712_fu_834_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal rhs_1_fu_826_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal idx_fu_844_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_7_fu_838_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_fu_863_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln433_fu_866_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal idx_nxt_fu_869_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal rhs_fu_894_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_4_fu_901_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_s_fu_930_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_6_fu_923_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln674_3_fu_949_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_1_fu_941_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln674_2_fu_945_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1540_fu_953_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1540_2_fu_961_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln70_fu_973_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln70_fu_979_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1540_3_fu_965_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln70_1_fu_983_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1540_1_fu_957_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln70_fu_969_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal val1_V_fu_995_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_3_fu_1044_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_2_fu_1024_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_40_fu_1034_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1540_4_fu_1054_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1540_6_fu_1062_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln70_4_fu_1074_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln70_1_fu_1080_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1540_7_fu_1066_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln70_5_fu_1084_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1540_5_fu_1058_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln70_1_fu_1070_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal val1_V_1_fu_1096_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_10_fu_1142_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_5_fu_1122_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_6_fu_1132_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1540_8_fu_1152_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1540_10_fu_1160_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln70_8_fu_1172_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln70_2_fu_1178_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1540_11_fu_1164_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln70_9_fu_1182_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1540_9_fu_1156_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln70_2_fu_1168_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal val1_V_2_fu_1194_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal Wxy_V_fu_1222_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1476_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal Wxy_V_fu_1222_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1483_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1490_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1497_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1504_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1513_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1522_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1531_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal P4_V_fu_1262_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1245_1_fu_1269_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1245_fu_1272_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln902_2_fu_1292_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1540_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal P4_V_1_fu_1302_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1245_4_fu_1309_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1245_1_fu_1312_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln902_3_fu_1332_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1549_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal P4_V_2_fu_1342_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1245_7_fu_1349_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1245_2_fu_1352_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln902_4_fu_1372_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_10_fu_1389_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_7_fu_1382_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_3_fu_1394_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_14_fu_1414_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_8_fu_1407_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_4_fu_1419_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_18_fu_1439_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_11_fu_1432_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_5_fu_1444_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_19_fu_1450_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_15_fu_1425_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_11_fu_1400_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1476_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1476_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1483_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1490_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1497_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1504_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1513_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1522_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1531_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1540_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1549_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1476_ce : STD_LOGIC;
    signal grp_fu_1483_ce : STD_LOGIC;
    signal grp_fu_1490_ce : STD_LOGIC;
    signal grp_fu_1497_ce : STD_LOGIC;
    signal grp_fu_1504_ce : STD_LOGIC;
    signal grp_fu_1513_ce : STD_LOGIC;
    signal grp_fu_1522_ce : STD_LOGIC;
    signal grp_fu_1531_ce : STD_LOGIC;
    signal grp_fu_1540_ce : STD_LOGIC;
    signal grp_fu_1549_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1476_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1476_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_condition_288 : BOOLEAN;
    signal ap_condition_99 : BOOLEAN;
    signal ap_condition_1887 : BOOLEAN;
    signal ap_condition_1891 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component resize_accel_scaleCompute_17_42_20_48_16_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        currindex : IN STD_LOGIC_VECTOR (31 downto 0);
        inscale : IN STD_LOGIC_VECTOR (47 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (41 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component resize_accel_mul_mul_12ns_12ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component resize_accel_mul_mul_12ns_9s_21_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component resize_accel_mac_muladd_12ns_9s_21s_22_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component resize_accel_mac_muladd_12ns_10s_22s_23_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component resize_accel_resizeNNBilinear_9_2160_3840_1_2160_3840_1_9_Pipeline_VITIS_LOOP_394_5_line_bbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        address2 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component resize_accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    line_buffer_V_2_U : component resize_accel_resizeNNBilinear_9_2160_3840_1_2160_3840_1_9_Pipeline_VITIS_LOOP_394_5_line_bbkb
    generic map (
        DataWidth => 24,
        AddressRange => 3840,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_V_2_address0,
        ce0 => line_buffer_V_2_ce0,
        we0 => line_buffer_V_2_we0,
        d0 => read_pixel_1_out_i,
        address1 => line_buffer_V_2_address1,
        ce1 => line_buffer_V_2_ce1,
        q1 => line_buffer_V_2_q1,
        address2 => line_buffer_V_2_address2,
        ce2 => line_buffer_V_2_ce2,
        q2 => line_buffer_V_2_q2);

    mul_mul_12ns_12ns_24_4_1_U46 : component resize_accel_mul_mul_12ns_12ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1476_p0,
        din1 => grp_fu_1476_p1,
        ce => grp_fu_1476_ce,
        dout => grp_fu_1476_p2);

    mul_mul_12ns_9s_21_4_1_U47 : component resize_accel_mul_mul_12ns_9s_21_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1483_p0,
        din1 => val1_V_fu_995_p2,
        ce => grp_fu_1483_ce,
        dout => grp_fu_1483_p2);

    mul_mul_12ns_9s_21_4_1_U48 : component resize_accel_mul_mul_12ns_9s_21_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1490_p0,
        din1 => val1_V_1_fu_1096_p2,
        ce => grp_fu_1490_ce,
        dout => grp_fu_1490_p2);

    mul_mul_12ns_9s_21_4_1_U49 : component resize_accel_mul_mul_12ns_9s_21_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1497_p0,
        din1 => val1_V_2_fu_1194_p2,
        ce => grp_fu_1497_ce,
        dout => grp_fu_1497_p2);

    mac_muladd_12ns_9s_21s_22_4_1_U50 : component resize_accel_mac_muladd_12ns_9s_21s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1504_p0,
        din1 => val2_V_reg_1773,
        din2 => grp_fu_1483_p2,
        ce => grp_fu_1504_ce,
        dout => grp_fu_1504_p3);

    mac_muladd_12ns_9s_21s_22_4_1_U51 : component resize_accel_mac_muladd_12ns_9s_21s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1513_p0,
        din1 => val2_V_1_reg_1800,
        din2 => grp_fu_1490_p2,
        ce => grp_fu_1513_ce,
        dout => grp_fu_1513_p3);

    mac_muladd_12ns_9s_21s_22_4_1_U52 : component resize_accel_mac_muladd_12ns_9s_21s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1522_p0,
        din1 => val2_V_2_reg_1820,
        din2 => grp_fu_1497_p2,
        ce => grp_fu_1522_ce,
        dout => grp_fu_1522_p3);

    mac_muladd_12ns_10s_22s_23_4_1_U53 : component resize_accel_mac_muladd_12ns_10s_22s_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1531_p0,
        din1 => val0_V_reg_1768_pp0_iter12_reg,
        din2 => grp_fu_1504_p3,
        ce => grp_fu_1531_ce,
        dout => grp_fu_1531_p3);

    mac_muladd_12ns_10s_22s_23_4_1_U54 : component resize_accel_mac_muladd_12ns_10s_22s_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1540_p0,
        din1 => val0_V_1_reg_1795_pp0_iter12_reg,
        din2 => grp_fu_1513_p3,
        ce => grp_fu_1540_ce,
        dout => grp_fu_1540_p3);

    mac_muladd_12ns_10s_22s_23_4_1_U55 : component resize_accel_mac_muladd_12ns_10s_22s_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1549_p0,
        din1 => val0_V_2_reg_1815_pp0_iter12_reg,
        din2 => grp_fu_1522_p3,
        ce => grp_fu_1549_ce,
        dout => grp_fu_1549_p3);

    flow_control_loop_pipe_sequential_init_U : component resize_accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter16_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter11_p_0_0_040786_reg_530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((first_row_index_5_read_reg_1606 = ap_const_lv32_1) and (icmp_ln394_reg_1629_pp0_iter9_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter11_p_0_0_040786_reg_530 <= line_buffer_V_1_q2;
                elsif ((ap_const_boolean_1 = ap_condition_288)) then 
                    ap_phi_reg_pp0_iter11_p_0_0_040786_reg_530 <= line_buffer_V_2_q2;
                elsif (((first_row_index_5_read_reg_1606 = ap_const_lv32_0) and (icmp_ln394_reg_1629_pp0_iter9_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter11_p_0_0_040786_reg_530 <= line_buffer_V_q2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_p_0_0_040786_reg_530 <= ap_phi_reg_pp0_iter10_p_0_0_040786_reg_530;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter11_p_0_0_0407_190_reg_519_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((first_row_index_5_read_reg_1606 = ap_const_lv32_1) and (icmp_ln394_reg_1629_pp0_iter9_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter11_p_0_0_0407_190_reg_519 <= line_buffer_V_1_q1;
                elsif ((ap_const_boolean_1 = ap_condition_288)) then 
                    ap_phi_reg_pp0_iter11_p_0_0_0407_190_reg_519 <= line_buffer_V_2_q1;
                elsif (((first_row_index_5_read_reg_1606 = ap_const_lv32_0) and (icmp_ln394_reg_1629_pp0_iter9_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter11_p_0_0_0407_190_reg_519 <= line_buffer_V_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_p_0_0_0407_190_reg_519 <= ap_phi_reg_pp0_iter10_p_0_0_0407_190_reg_519;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter11_p_Val2_5_reg_508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((first_row_index_5_read_reg_1606 = ap_const_lv32_1) and (icmp_ln394_reg_1629_pp0_iter9_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter11_p_Val2_5_reg_508 <= line_buffer_V_2_q2;
                elsif ((ap_const_boolean_1 = ap_condition_288)) then 
                    ap_phi_reg_pp0_iter11_p_Val2_5_reg_508 <= line_buffer_V_q2;
                elsif (((first_row_index_5_read_reg_1606 = ap_const_lv32_0) and (icmp_ln394_reg_1629_pp0_iter9_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter11_p_Val2_5_reg_508 <= line_buffer_V_1_q2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_p_Val2_5_reg_508 <= ap_phi_reg_pp0_iter10_p_Val2_5_reg_508;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter11_p_Val2_7_reg_497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((first_row_index_5_read_reg_1606 = ap_const_lv32_1) and (icmp_ln394_reg_1629_pp0_iter9_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter11_p_Val2_7_reg_497 <= line_buffer_V_2_q1;
                elsif ((ap_const_boolean_1 = ap_condition_288)) then 
                    ap_phi_reg_pp0_iter11_p_Val2_7_reg_497 <= line_buffer_V_q1;
                elsif (((first_row_index_5_read_reg_1606 = ap_const_lv32_0) and (icmp_ln394_reg_1629_pp0_iter9_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter11_p_Val2_7_reg_497 <= line_buffer_V_1_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_p_Val2_7_reg_497 <= ap_phi_reg_pp0_iter10_p_Val2_7_reg_497;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_flag_write_reg_481_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((cmp89_read_read_fu_216_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln394_fu_612_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((cmp89_read_read_fu_216_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln394_fu_612_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln411_fu_676_p2)))) then 
                ap_phi_reg_pp0_iter1_flag_write_reg_481 <= ap_const_lv1_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_flag_write_reg_481 <= ap_phi_reg_pp0_iter0_flag_write_reg_481;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter8_flag_write_reg_481_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_99)) then 
                    ap_phi_reg_pp0_iter8_flag_write_reg_481 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter8_flag_write_reg_481 <= ap_phi_reg_pp0_iter7_flag_write_reg_481;
                end if;
            end if; 
        end if;
    end process;

    j_2_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln394_fu_612_p2 = ap_const_lv1_1))) then 
                    j_2_fu_172 <= add_ln394_fu_618_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_2_fu_172 <= ap_const_lv12_0;
                end if;
            end if; 
        end if;
    end process;

    nextYScale_V_1_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln394_fu_612_p2 = ap_const_lv1_1))) then 
                    nextYScale_V_1_fu_164 <= ret_V_35;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    nextYScale_V_1_fu_164 <= nextYScale_V;
                end if;
            end if; 
        end if;
    end process;

    tmp_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln394_fu_612_p2 = ap_const_lv1_1))) then 
                    tmp_fu_168 <= ret_V_20_fu_658_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_fu_168 <= indexy_V;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((ap_const_lv1_1 = and_ln491_reg_1656_pp0_iter7_reg) and (ap_const_lv1_0 = and_ln492_reg_1648_pp0_iter7_reg) and (cmp273 = ap_const_lv1_1)) or ((ap_const_lv1_1 = and_ln492_reg_1648_pp0_iter7_reg) and (icmp_ln494_reg_1652_pp0_iter7_reg = ap_const_lv1_1) and (cmp273 = ap_const_lv1_1))))) then
                Wx_V_reg_1682 <= ret_V_7_fu_838_p2(23 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                Wx_V_reg_1682_pp0_iter10_reg <= Wx_V_reg_1682_pp0_iter9_reg;
                Wx_V_reg_1682_pp0_iter11_reg <= Wx_V_reg_1682_pp0_iter10_reg;
                Wx_V_reg_1682_pp0_iter9_reg <= Wx_V_reg_1682;
                and_ln411_reg_1638_pp0_iter2_reg <= and_ln411_reg_1638_pp0_iter1_reg;
                and_ln411_reg_1638_pp0_iter3_reg <= and_ln411_reg_1638_pp0_iter2_reg;
                and_ln411_reg_1638_pp0_iter4_reg <= and_ln411_reg_1638_pp0_iter3_reg;
                and_ln411_reg_1638_pp0_iter5_reg <= and_ln411_reg_1638_pp0_iter4_reg;
                and_ln411_reg_1638_pp0_iter6_reg <= and_ln411_reg_1638_pp0_iter5_reg;
                and_ln491_reg_1656_pp0_iter10_reg <= and_ln491_reg_1656_pp0_iter9_reg;
                and_ln491_reg_1656_pp0_iter11_reg <= and_ln491_reg_1656_pp0_iter10_reg;
                and_ln491_reg_1656_pp0_iter12_reg <= and_ln491_reg_1656_pp0_iter11_reg;
                and_ln491_reg_1656_pp0_iter13_reg <= and_ln491_reg_1656_pp0_iter12_reg;
                and_ln491_reg_1656_pp0_iter14_reg <= and_ln491_reg_1656_pp0_iter13_reg;
                and_ln491_reg_1656_pp0_iter15_reg <= and_ln491_reg_1656_pp0_iter14_reg;
                and_ln491_reg_1656_pp0_iter16_reg <= and_ln491_reg_1656_pp0_iter15_reg;
                and_ln491_reg_1656_pp0_iter2_reg <= and_ln491_reg_1656_pp0_iter1_reg;
                and_ln491_reg_1656_pp0_iter3_reg <= and_ln491_reg_1656_pp0_iter2_reg;
                and_ln491_reg_1656_pp0_iter4_reg <= and_ln491_reg_1656_pp0_iter3_reg;
                and_ln491_reg_1656_pp0_iter5_reg <= and_ln491_reg_1656_pp0_iter4_reg;
                and_ln491_reg_1656_pp0_iter6_reg <= and_ln491_reg_1656_pp0_iter5_reg;
                and_ln491_reg_1656_pp0_iter7_reg <= and_ln491_reg_1656_pp0_iter6_reg;
                and_ln491_reg_1656_pp0_iter8_reg <= and_ln491_reg_1656_pp0_iter7_reg;
                and_ln491_reg_1656_pp0_iter9_reg <= and_ln491_reg_1656_pp0_iter8_reg;
                and_ln492_reg_1648_pp0_iter10_reg <= and_ln492_reg_1648_pp0_iter9_reg;
                and_ln492_reg_1648_pp0_iter11_reg <= and_ln492_reg_1648_pp0_iter10_reg;
                and_ln492_reg_1648_pp0_iter12_reg <= and_ln492_reg_1648_pp0_iter11_reg;
                and_ln492_reg_1648_pp0_iter13_reg <= and_ln492_reg_1648_pp0_iter12_reg;
                and_ln492_reg_1648_pp0_iter14_reg <= and_ln492_reg_1648_pp0_iter13_reg;
                and_ln492_reg_1648_pp0_iter15_reg <= and_ln492_reg_1648_pp0_iter14_reg;
                and_ln492_reg_1648_pp0_iter16_reg <= and_ln492_reg_1648_pp0_iter15_reg;
                and_ln492_reg_1648_pp0_iter2_reg <= and_ln492_reg_1648_pp0_iter1_reg;
                and_ln492_reg_1648_pp0_iter3_reg <= and_ln492_reg_1648_pp0_iter2_reg;
                and_ln492_reg_1648_pp0_iter4_reg <= and_ln492_reg_1648_pp0_iter3_reg;
                and_ln492_reg_1648_pp0_iter5_reg <= and_ln492_reg_1648_pp0_iter4_reg;
                and_ln492_reg_1648_pp0_iter6_reg <= and_ln492_reg_1648_pp0_iter5_reg;
                and_ln492_reg_1648_pp0_iter7_reg <= and_ln492_reg_1648_pp0_iter6_reg;
                and_ln492_reg_1648_pp0_iter8_reg <= and_ln492_reg_1648_pp0_iter7_reg;
                and_ln492_reg_1648_pp0_iter9_reg <= and_ln492_reg_1648_pp0_iter8_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                icmp_ln1064_reg_1642_pp0_iter10_reg <= icmp_ln1064_reg_1642_pp0_iter9_reg;
                icmp_ln1064_reg_1642_pp0_iter2_reg <= icmp_ln1064_reg_1642_pp0_iter1_reg;
                icmp_ln1064_reg_1642_pp0_iter3_reg <= icmp_ln1064_reg_1642_pp0_iter2_reg;
                icmp_ln1064_reg_1642_pp0_iter4_reg <= icmp_ln1064_reg_1642_pp0_iter3_reg;
                icmp_ln1064_reg_1642_pp0_iter5_reg <= icmp_ln1064_reg_1642_pp0_iter4_reg;
                icmp_ln1064_reg_1642_pp0_iter6_reg <= icmp_ln1064_reg_1642_pp0_iter5_reg;
                icmp_ln1064_reg_1642_pp0_iter7_reg <= icmp_ln1064_reg_1642_pp0_iter6_reg;
                icmp_ln1064_reg_1642_pp0_iter8_reg <= icmp_ln1064_reg_1642_pp0_iter7_reg;
                icmp_ln1064_reg_1642_pp0_iter9_reg <= icmp_ln1064_reg_1642_pp0_iter8_reg;
                icmp_ln394_reg_1629_pp0_iter10_reg <= icmp_ln394_reg_1629_pp0_iter9_reg;
                icmp_ln394_reg_1629_pp0_iter11_reg <= icmp_ln394_reg_1629_pp0_iter10_reg;
                icmp_ln394_reg_1629_pp0_iter12_reg <= icmp_ln394_reg_1629_pp0_iter11_reg;
                icmp_ln394_reg_1629_pp0_iter13_reg <= icmp_ln394_reg_1629_pp0_iter12_reg;
                icmp_ln394_reg_1629_pp0_iter14_reg <= icmp_ln394_reg_1629_pp0_iter13_reg;
                icmp_ln394_reg_1629_pp0_iter15_reg <= icmp_ln394_reg_1629_pp0_iter14_reg;
                icmp_ln394_reg_1629_pp0_iter2_reg <= icmp_ln394_reg_1629_pp0_iter1_reg;
                icmp_ln394_reg_1629_pp0_iter3_reg <= icmp_ln394_reg_1629_pp0_iter2_reg;
                icmp_ln394_reg_1629_pp0_iter4_reg <= icmp_ln394_reg_1629_pp0_iter3_reg;
                icmp_ln394_reg_1629_pp0_iter5_reg <= icmp_ln394_reg_1629_pp0_iter4_reg;
                icmp_ln394_reg_1629_pp0_iter6_reg <= icmp_ln394_reg_1629_pp0_iter5_reg;
                icmp_ln394_reg_1629_pp0_iter7_reg <= icmp_ln394_reg_1629_pp0_iter6_reg;
                icmp_ln394_reg_1629_pp0_iter8_reg <= icmp_ln394_reg_1629_pp0_iter7_reg;
                icmp_ln394_reg_1629_pp0_iter9_reg <= icmp_ln394_reg_1629_pp0_iter8_reg;
                icmp_ln494_reg_1652_pp0_iter10_reg <= icmp_ln494_reg_1652_pp0_iter9_reg;
                icmp_ln494_reg_1652_pp0_iter11_reg <= icmp_ln494_reg_1652_pp0_iter10_reg;
                icmp_ln494_reg_1652_pp0_iter12_reg <= icmp_ln494_reg_1652_pp0_iter11_reg;
                icmp_ln494_reg_1652_pp0_iter13_reg <= icmp_ln494_reg_1652_pp0_iter12_reg;
                icmp_ln494_reg_1652_pp0_iter14_reg <= icmp_ln494_reg_1652_pp0_iter13_reg;
                icmp_ln494_reg_1652_pp0_iter15_reg <= icmp_ln494_reg_1652_pp0_iter14_reg;
                icmp_ln494_reg_1652_pp0_iter16_reg <= icmp_ln494_reg_1652_pp0_iter15_reg;
                icmp_ln494_reg_1652_pp0_iter2_reg <= icmp_ln494_reg_1652_pp0_iter1_reg;
                icmp_ln494_reg_1652_pp0_iter3_reg <= icmp_ln494_reg_1652_pp0_iter2_reg;
                icmp_ln494_reg_1652_pp0_iter4_reg <= icmp_ln494_reg_1652_pp0_iter3_reg;
                icmp_ln494_reg_1652_pp0_iter5_reg <= icmp_ln494_reg_1652_pp0_iter4_reg;
                icmp_ln494_reg_1652_pp0_iter6_reg <= icmp_ln494_reg_1652_pp0_iter5_reg;
                icmp_ln494_reg_1652_pp0_iter7_reg <= icmp_ln494_reg_1652_pp0_iter6_reg;
                icmp_ln494_reg_1652_pp0_iter8_reg <= icmp_ln494_reg_1652_pp0_iter7_reg;
                icmp_ln494_reg_1652_pp0_iter9_reg <= icmp_ln494_reg_1652_pp0_iter8_reg;
                j_reg_1619_pp0_iter2_reg <= j_reg_1619_pp0_iter1_reg;
                j_reg_1619_pp0_iter3_reg <= j_reg_1619_pp0_iter2_reg;
                j_reg_1619_pp0_iter4_reg <= j_reg_1619_pp0_iter3_reg;
                j_reg_1619_pp0_iter5_reg <= j_reg_1619_pp0_iter4_reg;
                j_reg_1619_pp0_iter6_reg <= j_reg_1619_pp0_iter5_reg;
                j_reg_1619_pp0_iter7_reg <= j_reg_1619_pp0_iter6_reg;
                p_Result_4_reg_1810_pp0_iter12_reg <= p_Result_4_reg_1810;
                p_Result_4_reg_1810_pp0_iter13_reg <= p_Result_4_reg_1810_pp0_iter12_reg;
                p_Result_4_reg_1810_pp0_iter14_reg <= p_Result_4_reg_1810_pp0_iter13_reg;
                p_Result_4_reg_1810_pp0_iter15_reg <= p_Result_4_reg_1810_pp0_iter14_reg;
                p_Result_9_reg_1790_pp0_iter12_reg <= p_Result_9_reg_1790;
                p_Result_9_reg_1790_pp0_iter13_reg <= p_Result_9_reg_1790_pp0_iter12_reg;
                p_Result_9_reg_1790_pp0_iter14_reg <= p_Result_9_reg_1790_pp0_iter13_reg;
                p_Result_9_reg_1790_pp0_iter15_reg <= p_Result_9_reg_1790_pp0_iter14_reg;
                trunc_ln674_reg_1763_pp0_iter12_reg <= trunc_ln674_reg_1763;
                trunc_ln674_reg_1763_pp0_iter13_reg <= trunc_ln674_reg_1763_pp0_iter12_reg;
                trunc_ln674_reg_1763_pp0_iter14_reg <= trunc_ln674_reg_1763_pp0_iter13_reg;
                trunc_ln674_reg_1763_pp0_iter15_reg <= trunc_ln674_reg_1763_pp0_iter14_reg;
                trunc_ln737_reg_1633_pp0_iter2_reg <= trunc_ln737_reg_1633_pp0_iter1_reg;
                trunc_ln737_reg_1633_pp0_iter3_reg <= trunc_ln737_reg_1633_pp0_iter2_reg;
                trunc_ln737_reg_1633_pp0_iter4_reg <= trunc_ln737_reg_1633_pp0_iter3_reg;
                trunc_ln737_reg_1633_pp0_iter5_reg <= trunc_ln737_reg_1633_pp0_iter4_reg;
                trunc_ln737_reg_1633_pp0_iter6_reg <= trunc_ln737_reg_1633_pp0_iter5_reg;
                trunc_ln737_reg_1633_pp0_iter7_reg <= trunc_ln737_reg_1633_pp0_iter6_reg;
                trunc_ln737_reg_1633_pp0_iter8_reg <= trunc_ln737_reg_1633_pp0_iter7_reg;
                trunc_ln737_reg_1633_pp0_iter9_reg <= trunc_ln737_reg_1633_pp0_iter8_reg;
                val0_V_1_reg_1795_pp0_iter12_reg <= val0_V_1_reg_1795;
                val0_V_2_reg_1815_pp0_iter12_reg <= val0_V_2_reg_1815;
                val0_V_reg_1768_pp0_iter12_reg <= val0_V_reg_1768;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((ap_const_lv1_1 = and_ln491_reg_1656_pp0_iter9_reg) and (ap_const_lv1_0 = and_ln492_reg_1648_pp0_iter9_reg) and (cmp273 = ap_const_lv1_1)) or ((ap_const_lv1_1 = and_ln492_reg_1648_pp0_iter9_reg) and (icmp_ln494_reg_1652_pp0_iter9_reg = ap_const_lv1_1) and (cmp273 = ap_const_lv1_1))))) then
                Wy_V_reg_1748 <= ret_V_4_fu_901_p2(23 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp89_read_read_fu_216_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln394_fu_612_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln411_reg_1638 <= and_ln411_fu_676_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln411_reg_1638_pp0_iter1_reg <= and_ln411_reg_1638;
                and_ln491_reg_1656_pp0_iter1_reg <= and_ln491_reg_1656;
                and_ln492_reg_1648_pp0_iter1_reg <= and_ln492_reg_1648;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln1064_reg_1642_pp0_iter1_reg <= icmp_ln1064_reg_1642;
                icmp_ln394_reg_1629 <= icmp_ln394_fu_612_p2;
                icmp_ln394_reg_1629_pp0_iter1_reg <= icmp_ln394_reg_1629;
                icmp_ln494_reg_1652_pp0_iter1_reg <= icmp_ln494_reg_1652;
                j_reg_1619 <= ap_sig_allocacmp_j;
                j_reg_1619_pp0_iter1_reg <= j_reg_1619;
                trunc_ln737_reg_1633_pp0_iter1_reg <= trunc_ln737_reg_1633;
                    zext_ln394_1_reg_1624(11 downto 0) <= zext_ln394_1_fu_608_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp273_read_read_fu_270_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln394_fu_612_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln492_fu_692_p2))) then
                and_ln491_reg_1656 <= and_ln491_fu_710_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp273_read_read_fu_270_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln394_fu_612_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln492_reg_1648 <= and_ln492_fu_692_p2;
                icmp_ln1064_reg_1642 <= icmp_ln1064_fu_686_p2;
                icmp_ln494_reg_1652 <= icmp_ln494_fu_698_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter10_p_0_0_040786_reg_530 <= ap_phi_reg_pp0_iter9_p_0_0_040786_reg_530;
                ap_phi_reg_pp0_iter10_p_0_0_0407_190_reg_519 <= ap_phi_reg_pp0_iter9_p_0_0_0407_190_reg_519;
                ap_phi_reg_pp0_iter10_p_Val2_5_reg_508 <= ap_phi_reg_pp0_iter9_p_Val2_5_reg_508;
                ap_phi_reg_pp0_iter10_p_Val2_7_reg_497 <= ap_phi_reg_pp0_iter9_p_Val2_7_reg_497;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_p_0_0_040786_reg_530 <= ap_phi_reg_pp0_iter0_p_0_0_040786_reg_530;
                ap_phi_reg_pp0_iter1_p_0_0_0407_190_reg_519 <= ap_phi_reg_pp0_iter0_p_0_0_0407_190_reg_519;
                ap_phi_reg_pp0_iter1_p_Val2_5_reg_508 <= ap_phi_reg_pp0_iter0_p_Val2_5_reg_508;
                ap_phi_reg_pp0_iter1_p_Val2_7_reg_497 <= ap_phi_reg_pp0_iter0_p_Val2_7_reg_497;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_flag_write_reg_481 <= ap_phi_reg_pp0_iter1_flag_write_reg_481;
                ap_phi_reg_pp0_iter2_p_0_0_040786_reg_530 <= ap_phi_reg_pp0_iter1_p_0_0_040786_reg_530;
                ap_phi_reg_pp0_iter2_p_0_0_0407_190_reg_519 <= ap_phi_reg_pp0_iter1_p_0_0_0407_190_reg_519;
                ap_phi_reg_pp0_iter2_p_Val2_5_reg_508 <= ap_phi_reg_pp0_iter1_p_Val2_5_reg_508;
                ap_phi_reg_pp0_iter2_p_Val2_7_reg_497 <= ap_phi_reg_pp0_iter1_p_Val2_7_reg_497;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_flag_write_reg_481 <= ap_phi_reg_pp0_iter2_flag_write_reg_481;
                ap_phi_reg_pp0_iter3_p_0_0_040786_reg_530 <= ap_phi_reg_pp0_iter2_p_0_0_040786_reg_530;
                ap_phi_reg_pp0_iter3_p_0_0_0407_190_reg_519 <= ap_phi_reg_pp0_iter2_p_0_0_0407_190_reg_519;
                ap_phi_reg_pp0_iter3_p_Val2_5_reg_508 <= ap_phi_reg_pp0_iter2_p_Val2_5_reg_508;
                ap_phi_reg_pp0_iter3_p_Val2_7_reg_497 <= ap_phi_reg_pp0_iter2_p_Val2_7_reg_497;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_flag_write_reg_481 <= ap_phi_reg_pp0_iter3_flag_write_reg_481;
                ap_phi_reg_pp0_iter4_p_0_0_040786_reg_530 <= ap_phi_reg_pp0_iter3_p_0_0_040786_reg_530;
                ap_phi_reg_pp0_iter4_p_0_0_0407_190_reg_519 <= ap_phi_reg_pp0_iter3_p_0_0_0407_190_reg_519;
                ap_phi_reg_pp0_iter4_p_Val2_5_reg_508 <= ap_phi_reg_pp0_iter3_p_Val2_5_reg_508;
                ap_phi_reg_pp0_iter4_p_Val2_7_reg_497 <= ap_phi_reg_pp0_iter3_p_Val2_7_reg_497;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_flag_write_reg_481 <= ap_phi_reg_pp0_iter4_flag_write_reg_481;
                ap_phi_reg_pp0_iter5_p_0_0_040786_reg_530 <= ap_phi_reg_pp0_iter4_p_0_0_040786_reg_530;
                ap_phi_reg_pp0_iter5_p_0_0_0407_190_reg_519 <= ap_phi_reg_pp0_iter4_p_0_0_0407_190_reg_519;
                ap_phi_reg_pp0_iter5_p_Val2_5_reg_508 <= ap_phi_reg_pp0_iter4_p_Val2_5_reg_508;
                ap_phi_reg_pp0_iter5_p_Val2_7_reg_497 <= ap_phi_reg_pp0_iter4_p_Val2_7_reg_497;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter6_flag_write_reg_481 <= ap_phi_reg_pp0_iter5_flag_write_reg_481;
                ap_phi_reg_pp0_iter6_p_0_0_040786_reg_530 <= ap_phi_reg_pp0_iter5_p_0_0_040786_reg_530;
                ap_phi_reg_pp0_iter6_p_0_0_0407_190_reg_519 <= ap_phi_reg_pp0_iter5_p_0_0_0407_190_reg_519;
                ap_phi_reg_pp0_iter6_p_Val2_5_reg_508 <= ap_phi_reg_pp0_iter5_p_Val2_5_reg_508;
                ap_phi_reg_pp0_iter6_p_Val2_7_reg_497 <= ap_phi_reg_pp0_iter5_p_Val2_7_reg_497;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter7_flag_write_reg_481 <= ap_phi_reg_pp0_iter6_flag_write_reg_481;
                ap_phi_reg_pp0_iter7_p_0_0_040786_reg_530 <= ap_phi_reg_pp0_iter6_p_0_0_040786_reg_530;
                ap_phi_reg_pp0_iter7_p_0_0_0407_190_reg_519 <= ap_phi_reg_pp0_iter6_p_0_0_0407_190_reg_519;
                ap_phi_reg_pp0_iter7_p_Val2_5_reg_508 <= ap_phi_reg_pp0_iter6_p_Val2_5_reg_508;
                ap_phi_reg_pp0_iter7_p_Val2_7_reg_497 <= ap_phi_reg_pp0_iter6_p_Val2_7_reg_497;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter8_p_0_0_040786_reg_530 <= ap_phi_reg_pp0_iter7_p_0_0_040786_reg_530;
                ap_phi_reg_pp0_iter8_p_0_0_0407_190_reg_519 <= ap_phi_reg_pp0_iter7_p_0_0_0407_190_reg_519;
                ap_phi_reg_pp0_iter8_p_Val2_5_reg_508 <= ap_phi_reg_pp0_iter7_p_Val2_5_reg_508;
                ap_phi_reg_pp0_iter8_p_Val2_7_reg_497 <= ap_phi_reg_pp0_iter7_p_Val2_7_reg_497;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter9_p_0_0_040786_reg_530 <= ap_phi_reg_pp0_iter8_p_0_0_040786_reg_530;
                ap_phi_reg_pp0_iter9_p_0_0_0407_190_reg_519 <= ap_phi_reg_pp0_iter8_p_0_0_0407_190_reg_519;
                ap_phi_reg_pp0_iter9_p_Val2_5_reg_508 <= ap_phi_reg_pp0_iter8_p_Val2_5_reg_508;
                ap_phi_reg_pp0_iter9_p_Val2_7_reg_497 <= ap_phi_reg_pp0_iter8_p_Val2_7_reg_497;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln394_reg_1629_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1547_reg_1666 <= icmp_ln1547_fu_735_p2;
                indexx_pre_comp_V_reg_1660 <= grp_scaleCompute_17_42_20_48_16_1_s_fu_189_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((ap_const_lv1_1 = and_ln491_reg_1656_pp0_iter15_reg) and (ap_const_lv1_0 = and_ln492_reg_1648_pp0_iter15_reg) and (cmp273 = ap_const_lv1_1)) or ((ap_const_lv1_1 = and_ln492_reg_1648_pp0_iter15_reg) and (icmp_ln494_reg_1652_pp0_iter15_reg = ap_const_lv1_1) and (cmp273 = ap_const_lv1_1))))) then
                icmp_ln902_2_reg_1916 <= icmp_ln902_2_fu_1296_p2;
                icmp_ln902_3_reg_1933 <= icmp_ln902_3_fu_1336_p2;
                icmp_ln902_4_reg_1950 <= icmp_ln902_4_fu_1376_p2;
                ret_V_13_reg_1921 <= ret_V_13_fu_1316_p2;
                ret_V_17_reg_1938 <= ret_V_17_fu_1356_p2;
                ret_V_9_reg_1904 <= ret_V_9_fu_1276_p2;
                trunc_ln882_2_reg_1909 <= ret_V_9_fu_1276_p2(17 downto 10);
                trunc_ln882_3_reg_1926 <= ret_V_13_fu_1316_p2(17 downto 10);
                trunc_ln882_4_reg_1943 <= ret_V_17_fu_1356_p2(17 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln394_reg_1629_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                idx_2_reg_1671 <= idx_2_fu_814_p3;
                not_cmp_i_i175_reg_1677 <= not_cmp_i_i175_fu_848_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((ap_const_lv1_1 = and_ln491_reg_1656_pp0_iter10_reg) and (ap_const_lv1_0 = and_ln492_reg_1648_pp0_iter10_reg) and (cmp273 = ap_const_lv1_1)) or ((ap_const_lv1_1 = and_ln492_reg_1648_pp0_iter10_reg) and (icmp_ln494_reg_1652_pp0_iter10_reg = ap_const_lv1_1) and (cmp273 = ap_const_lv1_1))))) then
                p_Result_4_reg_1810 <= p_Val2_s_fu_930_p3(23 downto 16);
                p_Result_9_reg_1790 <= p_Val2_s_fu_930_p3(15 downto 8);
                trunc_ln674_reg_1763 <= trunc_ln674_fu_937_p1;
                val0_V_1_reg_1795 <= val0_V_1_fu_1090_p2;
                val0_V_2_reg_1815 <= val0_V_2_fu_1188_p2;
                val0_V_reg_1768 <= val0_V_fu_989_p2;
                val2_V_1_reg_1800 <= val2_V_1_fu_1102_p2;
                val2_V_2_reg_1820 <= val2_V_2_fu_1200_p2;
                val2_V_reg_1773 <= val2_V_fu_1001_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln394_fu_612_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                trunc_ln737_reg_1633 <= trunc_ln737_fu_666_p1;
            end if;
        end if;
    end process;
    zext_ln394_1_reg_1624(31 downto 12) <= "00000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    P4_V_1_fu_1302_p3 <= (p_Result_9_reg_1790_pp0_iter15_reg & ap_const_lv10_0);
    P4_V_2_fu_1342_p3 <= (p_Result_4_reg_1810_pp0_iter15_reg & ap_const_lv10_0);
    P4_V_fu_1262_p3 <= (trunc_ln674_reg_1763_pp0_iter15_reg & ap_const_lv10_0);
    Wxy_V_fu_1222_p1 <= grp_fu_1476_p2;
    Wxy_V_fu_1222_p4 <= Wxy_V_fu_1222_p1(21 downto 10);
    Wy_V_fu_906_p4 <= ret_V_4_fu_901_p2(23 downto 12);
    add_ln394_fu_618_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j) + unsigned(ap_const_lv12_1));
    and_ln411_fu_676_p2 <= (icmp_ln413_fu_670_p2 and icmp_ln1076_1);
    and_ln491_fu_710_p2 <= (icmp_ln494_fu_698_p2 and icmp_ln1064_1_fu_704_p2);
    and_ln492_fu_692_p2 <= (icmp_ln1064_fu_686_p2 and cmp277);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter17, src_mat_420_empty_n, ap_predicate_op91_read_state8, dst_mat_421_full_n, ap_predicate_op336_write_state18)
    begin
                ap_block_pp0_stage0_01001 <= (((src_mat_420_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_predicate_op91_read_state8 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_predicate_op336_write_state18 = ap_const_boolean_1) and (dst_mat_421_full_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter17, src_mat_420_empty_n, ap_predicate_op91_read_state8, dst_mat_421_full_n, ap_predicate_op336_write_state18)
    begin
                ap_block_pp0_stage0_11001 <= (((src_mat_420_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_predicate_op91_read_state8 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_predicate_op336_write_state18 = ap_const_boolean_1) and (dst_mat_421_full_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp82_assign_proc : process(ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter17, src_mat_420_empty_n, ap_predicate_op91_read_state8, dst_mat_421_full_n, ap_predicate_op336_write_state18)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp82 <= (((src_mat_420_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_predicate_op91_read_state8 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_predicate_op336_write_state18 = ap_const_boolean_1) and (dst_mat_421_full_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter17, src_mat_420_empty_n, ap_predicate_op91_read_state8, dst_mat_421_full_n, ap_predicate_op336_write_state18)
    begin
                ap_block_pp0_stage0_subdone <= (((src_mat_420_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_predicate_op91_read_state8 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_predicate_op336_write_state18 = ap_const_boolean_1) and (dst_mat_421_full_n = ap_const_logic_0)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_pp0_stage0_iter17_assign_proc : process(dst_mat_421_full_n, ap_predicate_op336_write_state18)
    begin
                ap_block_state18_pp0_stage0_iter17 <= ((ap_predicate_op336_write_state18 = ap_const_boolean_1) and (dst_mat_421_full_n = ap_const_logic_0));
    end process;


    ap_block_state18_pp0_stage0_iter17_ignore_call4_assign_proc : process(dst_mat_421_full_n, ap_predicate_op336_write_state18)
    begin
                ap_block_state18_pp0_stage0_iter17_ignore_call4 <= ((ap_predicate_op336_write_state18 = ap_const_boolean_1) and (dst_mat_421_full_n = ap_const_logic_0));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter7_assign_proc : process(src_mat_420_empty_n, ap_predicate_op91_read_state8)
    begin
                ap_block_state8_pp0_stage0_iter7 <= ((src_mat_420_empty_n = ap_const_logic_0) and (ap_predicate_op91_read_state8 = ap_const_boolean_1));
    end process;


    ap_block_state8_pp0_stage0_iter7_ignore_call4_assign_proc : process(src_mat_420_empty_n, ap_predicate_op91_read_state8)
    begin
                ap_block_state8_pp0_stage0_iter7_ignore_call4 <= ((src_mat_420_empty_n = ap_const_logic_0) and (ap_predicate_op91_read_state8 = ap_const_boolean_1));
    end process;

        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1887_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, icmp_ln394_reg_1629_pp0_iter8_reg)
    begin
                ap_condition_1887 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln394_reg_1629_pp0_iter8_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_1891_assign_proc : process(first_row_index_5_read_reg_1606, icmp_ln1064_reg_1642_pp0_iter8_reg)
    begin
                ap_condition_1891 <= (not((first_row_index_5_read_reg_1606 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1606 = ap_const_lv32_1)) and (icmp_ln1064_reg_1642_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_condition_288_assign_proc : process(icmp_ln394_reg_1629_pp0_iter9_reg, first_row_index_5_read_reg_1606)
    begin
                ap_condition_288 <= (not((first_row_index_5_read_reg_1606 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1606 = ap_const_lv32_1)) and (icmp_ln394_reg_1629_pp0_iter9_reg = ap_const_lv1_1));
    end process;


    ap_condition_99_assign_proc : process(icmp_ln394_reg_1629_pp0_iter6_reg, and_ln411_reg_1638_pp0_iter6_reg, cmp89)
    begin
                ap_condition_99 <= ((cmp89 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln411_reg_1638_pp0_iter6_reg) and (icmp_ln394_reg_1629_pp0_iter6_reg = ap_const_lv1_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln394_fu_612_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln394_fu_612_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter16_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter16_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_phi_mux_flag_write_phi_fu_486_p6 <= ap_phi_reg_pp0_iter8_flag_write_reg_481;
    ap_phi_reg_pp0_iter0_flag_write_reg_481 <= "X";
    ap_phi_reg_pp0_iter0_p_0_0_040786_reg_530 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_0_0_0407_190_reg_519 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_Val2_5_reg_508 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_Val2_7_reg_497 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op336_write_state18_assign_proc : process(and_ln492_reg_1648_pp0_iter16_reg, icmp_ln494_reg_1652_pp0_iter16_reg, and_ln491_reg_1656_pp0_iter16_reg, cmp273)
    begin
                ap_predicate_op336_write_state18 <= (((ap_const_lv1_1 = and_ln491_reg_1656_pp0_iter16_reg) and (ap_const_lv1_0 = and_ln492_reg_1648_pp0_iter16_reg) and (cmp273 = ap_const_lv1_1)) or ((ap_const_lv1_1 = and_ln492_reg_1648_pp0_iter16_reg) and (icmp_ln494_reg_1652_pp0_iter16_reg = ap_const_lv1_1) and (cmp273 = ap_const_lv1_1)));
    end process;


    ap_predicate_op91_read_state8_assign_proc : process(icmp_ln394_reg_1629_pp0_iter6_reg, and_ln411_reg_1638_pp0_iter6_reg, cmp89)
    begin
                ap_predicate_op91_read_state8 <= ((cmp89 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln411_reg_1638_pp0_iter6_reg) and (icmp_ln394_reg_1629_pp0_iter6_reg = ap_const_lv1_1));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, j_2_fu_172)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_j <= ap_const_lv12_0;
        else 
            ap_sig_allocacmp_j <= j_2_fu_172;
        end if; 
    end process;

    cmp273_read_read_fu_270_p2 <= cmp273;
    cmp89_read_read_fu_216_p2 <= cmp89;

    dst_mat_421_blk_n_assign_proc : process(ap_enable_reg_pp0_iter17, dst_mat_421_full_n, ap_predicate_op336_write_state18, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op336_write_state18 = ap_const_boolean_1))) then 
            dst_mat_421_blk_n <= dst_mat_421_full_n;
        else 
            dst_mat_421_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_mat_421_din <= ((ret_V_19_fu_1450_p3 & ret_V_15_fu_1425_p3) & ret_V_11_fu_1400_p3);

    dst_mat_421_write_assign_proc : process(ap_enable_reg_pp0_iter17, ap_predicate_op336_write_state18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op336_write_state18 = ap_const_boolean_1))) then 
            dst_mat_421_write <= ap_const_logic_1;
        else 
            dst_mat_421_write <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_863_p1 <= idx_2_reg_1671(12 - 1 downto 0);
    first_row_index_5_read_reg_1606 <= first_row_index_5;

    grp_fu_1476_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1476_ce <= ap_const_logic_1;
        else 
            grp_fu_1476_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1476_p0 <= grp_fu_1476_p00(12 - 1 downto 0);
    grp_fu_1476_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wx_V_reg_1682_pp0_iter9_reg),24));
    grp_fu_1476_p1 <= grp_fu_1476_p10(12 - 1 downto 0);
    grp_fu_1476_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wy_V_fu_906_p4),24));

    grp_fu_1483_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1483_ce <= ap_const_logic_1;
        else 
            grp_fu_1483_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1483_p0 <= zext_ln1171_fu_1011_p1(12 - 1 downto 0);

    grp_fu_1490_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1490_ce <= ap_const_logic_1;
        else 
            grp_fu_1490_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1490_p0 <= zext_ln1171_fu_1011_p1(12 - 1 downto 0);

    grp_fu_1497_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1497_ce <= ap_const_logic_1;
        else 
            grp_fu_1497_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1497_p0 <= zext_ln1171_fu_1011_p1(12 - 1 downto 0);

    grp_fu_1504_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1504_ce <= ap_const_logic_1;
        else 
            grp_fu_1504_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1504_p0 <= zext_ln1171_1_fu_1213_p1(12 - 1 downto 0);

    grp_fu_1513_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1513_ce <= ap_const_logic_1;
        else 
            grp_fu_1513_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1513_p0 <= zext_ln1171_1_fu_1213_p1(12 - 1 downto 0);

    grp_fu_1522_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1522_ce <= ap_const_logic_1;
        else 
            grp_fu_1522_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1522_p0 <= zext_ln1171_1_fu_1213_p1(12 - 1 downto 0);

    grp_fu_1531_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1531_ce <= ap_const_logic_1;
        else 
            grp_fu_1531_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1531_p0 <= zext_ln717_1_fu_1231_p1(12 - 1 downto 0);

    grp_fu_1540_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1540_ce <= ap_const_logic_1;
        else 
            grp_fu_1540_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1540_p0 <= zext_ln717_1_fu_1231_p1(12 - 1 downto 0);

    grp_fu_1549_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1549_ce <= ap_const_logic_1;
        else 
            grp_fu_1549_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1549_p0 <= zext_ln717_1_fu_1231_p1(12 - 1 downto 0);
    grp_scaleCompute_17_42_20_48_16_1_s_fu_189_p_ce <= grp_scaleCompute_17_42_20_48_16_1_s_fu_541_ap_ce;
    grp_scaleCompute_17_42_20_48_16_1_s_fu_189_p_din1 <= zext_ln394_1_reg_1624;
    grp_scaleCompute_17_42_20_48_16_1_s_fu_189_p_din2 <= trunc_ln3;

    grp_scaleCompute_17_42_20_48_16_1_s_fu_541_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp82)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp82))) then 
            grp_scaleCompute_17_42_20_48_16_1_s_fu_541_ap_ce <= ap_const_logic_1;
        else 
            grp_scaleCompute_17_42_20_48_16_1_s_fu_541_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1064_1_fu_704_p2 <= "1" when (zext_ln1064_fu_682_p1 = op2_assign_1) else "0";
    icmp_ln1064_fu_686_p2 <= "1" when (zext_ln1064_fu_682_p1 = op2_assign) else "0";
    icmp_ln1547_fu_735_p2 <= "1" when (signed(sext_ln1548_fu_731_p1) > signed(shl_i_i_i_i_i)) else "0";
    icmp_ln394_fu_612_p2 <= "1" when (signed(zext_ln394_1_fu_608_p1) < signed(loop_col_count)) else "0";
    icmp_ln413_fu_670_p2 <= "1" when (signed(zext_ln394_1_fu_608_p1) < signed(p_read1)) else "0";
    icmp_ln494_fu_698_p2 <= "1" when (signed(zext_ln394_1_fu_608_p1) < signed(p_read3)) else "0";
    icmp_ln902_1_fu_794_p2 <= "1" when (trunc_ln902_1_fu_790_p1 = ap_const_lv22_0) else "0";
    icmp_ln902_2_fu_1296_p2 <= "1" when (trunc_ln902_2_fu_1292_p1 = ap_const_lv10_0) else "0";
    icmp_ln902_3_fu_1336_p2 <= "1" when (trunc_ln902_3_fu_1332_p1 = ap_const_lv10_0) else "0";
    icmp_ln902_4_fu_1376_p2 <= "1" when (trunc_ln902_4_fu_1372_p1 = ap_const_lv10_0) else "0";
    icmp_ln902_fu_638_p2 <= "1" when (trunc_ln902_fu_634_p1 = ap_const_lv22_0) else "0";
    idx_2_fu_814_p3 <= 
        select_ln901_1_fu_806_p3 when (p_Result_1_fu_782_p3(0) = '1') else 
        trunc_ln882_1_fu_772_p4;
    idx_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_2_fu_814_p3),32));
    idx_nxt_fu_869_p2 <= std_logic_vector(unsigned(empty_fu_863_p1) + unsigned(zext_ln433_fu_866_p1));
    indexx_pre_V_3_fu_759_p3 <= 
        indexx_pre_V_1 when (icmp_ln1547_reg_1666(0) = '1') else 
        indexx_pre_comp_V_reg_1660;
    indexx_pre_V_fu_764_p3 <= 
        ap_const_lv42_0 when (tmp_2_fu_752_p3(0) = '1') else 
        indexx_pre_V_3_fu_759_p3;
    indexy_V_1_out <= tmp_fu_168;

    indexy_V_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln394_reg_1629_pp0_iter15_reg)
    begin
        if (((icmp_ln394_reg_1629_pp0_iter15_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            indexy_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            indexy_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_1_addr_1_gep_fu_443_p3 <= zext_ln436_fu_884_p1(12 - 1 downto 0);
    line_buffer_V_1_addr_gep_fu_435_p3 <= zext_ln435_fu_875_p1(12 - 1 downto 0);
    line_buffer_V_1_address0 <= zext_ln394_fu_746_p1(12 - 1 downto 0);

    line_buffer_V_1_address1_assign_proc : process(first_row_index_5_read_reg_1606, icmp_ln1064_reg_1642_pp0_iter8_reg, line_buffer_V_1_addr_1_gep_fu_443_p3, zext_ln436_fu_884_p1, ap_condition_1887)
    begin
        if ((ap_const_boolean_1 = ap_condition_1887)) then
            if ((first_row_index_5_read_reg_1606 = ap_const_lv32_0)) then 
                line_buffer_V_1_address1 <= line_buffer_V_1_addr_1_gep_fu_443_p3;
            elsif (((icmp_ln1064_reg_1642_pp0_iter8_reg = ap_const_lv1_0) and (first_row_index_5_read_reg_1606 = ap_const_lv32_1))) then 
                line_buffer_V_1_address1 <= zext_ln436_fu_884_p1(12 - 1 downto 0);
            else 
                line_buffer_V_1_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_1_address2_assign_proc : process(first_row_index_5_read_reg_1606, icmp_ln1064_reg_1642_pp0_iter8_reg, line_buffer_V_1_addr_gep_fu_435_p3, zext_ln435_fu_875_p1, ap_condition_1887)
    begin
        if ((ap_const_boolean_1 = ap_condition_1887)) then
            if ((first_row_index_5_read_reg_1606 = ap_const_lv32_0)) then 
                line_buffer_V_1_address2 <= line_buffer_V_1_addr_gep_fu_435_p3;
            elsif (((icmp_ln1064_reg_1642_pp0_iter8_reg = ap_const_lv1_0) and (first_row_index_5_read_reg_1606 = ap_const_lv32_1))) then 
                line_buffer_V_1_address2 <= zext_ln435_fu_875_p1(12 - 1 downto 0);
            else 
                line_buffer_V_1_address2 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_1_address2 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buffer_V_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1606, icmp_ln394_reg_1629_pp0_iter8_reg, icmp_ln1064_reg_1642_pp0_iter8_reg)
    begin
        if ((((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln394_reg_1629_pp0_iter8_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1606 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln1064_reg_1642_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln394_reg_1629_pp0_iter8_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1606 = ap_const_lv32_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_1_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_ce2_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1606, icmp_ln394_reg_1629_pp0_iter8_reg, icmp_ln1064_reg_1642_pp0_iter8_reg)
    begin
        if ((((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln394_reg_1629_pp0_iter8_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1606 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln1064_reg_1642_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln394_reg_1629_pp0_iter8_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1606 = ap_const_lv32_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_1_ce2 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce2 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_1_d0 <= read_pixel_1_out_i;

    line_buffer_V_1_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1606, ap_phi_mux_flag_write_phi_fu_486_p6)
    begin
        if ((not((first_row_index_5_read_reg_1606 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1606 = ap_const_lv32_1)) and (ap_phi_mux_flag_write_phi_fu_486_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buffer_V_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_2_addr_1_gep_fu_458_p3 <= zext_ln436_fu_884_p1(12 - 1 downto 0);
    line_buffer_V_2_addr_gep_fu_451_p3 <= zext_ln435_fu_875_p1(12 - 1 downto 0);
    line_buffer_V_2_address0 <= zext_ln394_fu_746_p1(12 - 1 downto 0);

    line_buffer_V_2_address1_assign_proc : process(first_row_index_5_read_reg_1606, line_buffer_V_2_addr_1_gep_fu_458_p3, zext_ln436_fu_884_p1, ap_condition_1887, ap_condition_1891)
    begin
        if ((ap_const_boolean_1 = ap_condition_1887)) then
            if ((ap_const_boolean_1 = ap_condition_1891)) then 
                line_buffer_V_2_address1 <= line_buffer_V_2_addr_1_gep_fu_458_p3;
            elsif ((first_row_index_5_read_reg_1606 = ap_const_lv32_1)) then 
                line_buffer_V_2_address1 <= zext_ln436_fu_884_p1(12 - 1 downto 0);
            else 
                line_buffer_V_2_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_2_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_2_address2_assign_proc : process(first_row_index_5_read_reg_1606, line_buffer_V_2_addr_gep_fu_451_p3, zext_ln435_fu_875_p1, ap_condition_1887, ap_condition_1891)
    begin
        if ((ap_const_boolean_1 = ap_condition_1887)) then
            if ((ap_const_boolean_1 = ap_condition_1891)) then 
                line_buffer_V_2_address2 <= line_buffer_V_2_addr_gep_fu_451_p3;
            elsif ((first_row_index_5_read_reg_1606 = ap_const_lv32_1)) then 
                line_buffer_V_2_address2 <= zext_ln435_fu_875_p1(12 - 1 downto 0);
            else 
                line_buffer_V_2_address2 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_2_address2 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buffer_V_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1606, icmp_ln394_reg_1629_pp0_iter8_reg, icmp_ln1064_reg_1642_pp0_iter8_reg)
    begin
        if ((((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln394_reg_1629_pp0_iter8_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1606 = ap_const_lv32_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not((first_row_index_5_read_reg_1606 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1606 = ap_const_lv32_1)) and (icmp_ln1064_reg_1642_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln394_reg_1629_pp0_iter8_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_2_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_ce2_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1606, icmp_ln394_reg_1629_pp0_iter8_reg, icmp_ln1064_reg_1642_pp0_iter8_reg)
    begin
        if ((((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln394_reg_1629_pp0_iter8_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1606 = ap_const_lv32_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not((first_row_index_5_read_reg_1606 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1606 = ap_const_lv32_1)) and (icmp_ln1064_reg_1642_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln394_reg_1629_pp0_iter8_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_2_ce2 <= ap_const_logic_1;
        else 
            line_buffer_V_2_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1606, ap_phi_mux_flag_write_phi_fu_486_p6)
    begin
        if (((ap_phi_mux_flag_write_phi_fu_486_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (first_row_index_5_read_reg_1606 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buffer_V_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_addr_1_gep_fu_473_p3 <= zext_ln436_fu_884_p1(12 - 1 downto 0);
    line_buffer_V_addr_gep_fu_465_p3 <= zext_ln435_fu_875_p1(12 - 1 downto 0);
    line_buffer_V_address0 <= zext_ln394_fu_746_p1(12 - 1 downto 0);

    line_buffer_V_address1_assign_proc : process(first_row_index_5_read_reg_1606, icmp_ln1064_reg_1642_pp0_iter8_reg, line_buffer_V_addr_1_gep_fu_473_p3, zext_ln436_fu_884_p1, ap_condition_1887)
    begin
        if ((ap_const_boolean_1 = ap_condition_1887)) then
            if ((not((first_row_index_5_read_reg_1606 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1606 = ap_const_lv32_1)))) then 
                line_buffer_V_address1 <= line_buffer_V_addr_1_gep_fu_473_p3;
            elsif (((icmp_ln1064_reg_1642_pp0_iter8_reg = ap_const_lv1_0) and (first_row_index_5_read_reg_1606 = ap_const_lv32_0))) then 
                line_buffer_V_address1 <= zext_ln436_fu_884_p1(12 - 1 downto 0);
            else 
                line_buffer_V_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_address2_assign_proc : process(first_row_index_5_read_reg_1606, icmp_ln1064_reg_1642_pp0_iter8_reg, line_buffer_V_addr_gep_fu_465_p3, zext_ln435_fu_875_p1, ap_condition_1887)
    begin
        if ((ap_const_boolean_1 = ap_condition_1887)) then
            if ((not((first_row_index_5_read_reg_1606 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1606 = ap_const_lv32_1)))) then 
                line_buffer_V_address2 <= line_buffer_V_addr_gep_fu_465_p3;
            elsif (((icmp_ln1064_reg_1642_pp0_iter8_reg = ap_const_lv1_0) and (first_row_index_5_read_reg_1606 = ap_const_lv32_0))) then 
                line_buffer_V_address2 <= zext_ln435_fu_875_p1(12 - 1 downto 0);
            else 
                line_buffer_V_address2 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_address2 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buffer_V_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1606, icmp_ln394_reg_1629_pp0_iter8_reg, icmp_ln1064_reg_1642_pp0_iter8_reg)
    begin
        if ((((icmp_ln1064_reg_1642_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln394_reg_1629_pp0_iter8_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1606 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not((first_row_index_5_read_reg_1606 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1606 = ap_const_lv32_1)) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln394_reg_1629_pp0_iter8_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_ce2_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1606, icmp_ln394_reg_1629_pp0_iter8_reg, icmp_ln1064_reg_1642_pp0_iter8_reg)
    begin
        if ((((icmp_ln1064_reg_1642_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln394_reg_1629_pp0_iter8_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1606 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not((first_row_index_5_read_reg_1606 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1606 = ap_const_lv32_1)) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln394_reg_1629_pp0_iter8_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_ce2 <= ap_const_logic_1;
        else 
            line_buffer_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_d0 <= read_pixel_1_out_i;

    line_buffer_V_we0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1606, ap_phi_mux_flag_write_phi_fu_486_p6)
    begin
        if (((ap_phi_mux_flag_write_phi_fu_486_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (first_row_index_5_read_reg_1606 = ap_const_lv32_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buffer_V_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    nextYScale_V_1_out <= nextYScale_V_1_fu_164;

    nextYScale_V_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln394_reg_1629_pp0_iter15_reg)
    begin
        if (((icmp_ln394_reg_1629_pp0_iter15_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            nextYScale_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            nextYScale_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    not_cmp_i_i175_fu_848_p2 <= "0" when (idx_fu_844_p1 = tmp_V) else "1";
    p_Result_10_fu_1142_p4 <= ap_phi_reg_pp0_iter11_p_Val2_7_reg_497(23 downto 16);
    p_Result_11_fu_1432_p3 <= ret_V_17_reg_1938(23 downto 23);
    p_Result_1_fu_782_p3 <= indexx_pre_V_fu_764_p3(41 downto 41);
    p_Result_2_fu_1024_p4 <= ap_phi_reg_pp0_iter11_p_Val2_5_reg_508(15 downto 8);
    p_Result_3_fu_1044_p4 <= ap_phi_reg_pp0_iter11_p_Val2_7_reg_497(15 downto 8);
    p_Result_4_fu_1112_p4 <= p_Val2_s_fu_930_p3(23 downto 16);
    p_Result_5_fu_1122_p4 <= ap_phi_reg_pp0_iter11_p_Val2_5_reg_508(23 downto 16);
    p_Result_6_fu_1132_p4 <= p_Val2_6_fu_923_p3(23 downto 16);
    p_Result_7_fu_1382_p3 <= ret_V_9_reg_1904(23 downto 23);
    p_Result_8_fu_1407_p3 <= ret_V_13_reg_1921(23 downto 23);
    p_Result_9_fu_1014_p4 <= p_Val2_s_fu_930_p3(15 downto 8);
    p_Result_read_read_fu_240_p2 <= (0=>p_Result_s, others=>'-');
    p_Result_s_40_fu_1034_p4 <= p_Val2_6_fu_923_p3(15 downto 8);
    p_Val2_6_fu_923_p3 <= 
        ap_phi_reg_pp0_iter11_p_Val2_7_reg_497 when (icmp_ln1064_reg_1642_pp0_iter10_reg(0) = '1') else 
        ap_phi_reg_pp0_iter11_p_0_0_0407_190_reg_519;
    p_Val2_s_fu_930_p3 <= 
        ap_phi_reg_pp0_iter11_p_Val2_5_reg_508 when (icmp_ln1064_reg_1642_pp0_iter10_reg(0) = '1') else 
        ap_phi_reg_pp0_iter11_p_0_0_040786_reg_530;

    read_pixel_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter7, src_mat_420_dout, icmp_ln394_reg_1629_pp0_iter6_reg, and_ln411_reg_1638_pp0_iter6_reg, cmp89, read_pixel_1_out_i, ap_block_pp0_stage0)
    begin
        if (((cmp89 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln411_reg_1638_pp0_iter6_reg) and (icmp_ln394_reg_1629_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            read_pixel_1_out_o <= src_mat_420_dout;
        else 
            read_pixel_1_out_o <= read_pixel_1_out_i;
        end if; 
    end process;


    read_pixel_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, icmp_ln394_reg_1629_pp0_iter6_reg, and_ln411_reg_1638_pp0_iter6_reg, cmp89, ap_block_pp0_stage0_11001)
    begin
        if (((cmp89 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln411_reg_1638_pp0_iter6_reg) and (icmp_ln394_reg_1629_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            read_pixel_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            read_pixel_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_10_fu_1389_p2 <= std_logic_vector(unsigned(trunc_ln882_2_reg_1909) + unsigned(ap_const_lv8_1));
    ret_V_11_fu_1400_p3 <= 
        select_ln901_3_fu_1394_p3 when (p_Result_7_fu_1382_p3(0) = '1') else 
        trunc_ln882_2_reg_1909;
    ret_V_13_fu_1316_p2 <= std_logic_vector(signed(sext_ln1245_4_fu_1309_p1) + signed(zext_ln1245_1_fu_1312_p1));
    ret_V_14_fu_1414_p2 <= std_logic_vector(unsigned(trunc_ln882_3_reg_1926) + unsigned(ap_const_lv8_1));
    ret_V_15_fu_1425_p3 <= 
        select_ln901_4_fu_1419_p3 when (p_Result_8_fu_1407_p3(0) = '1') else 
        trunc_ln882_3_reg_1926;
    ret_V_17_fu_1356_p2 <= std_logic_vector(signed(sext_ln1245_7_fu_1349_p1) + signed(zext_ln1245_2_fu_1352_p1));
    ret_V_18_fu_1439_p2 <= std_logic_vector(unsigned(trunc_ln882_4_reg_1943) + unsigned(ap_const_lv8_1));
    ret_V_19_fu_1450_p3 <= 
        select_ln901_5_fu_1444_p3 when (p_Result_11_fu_1432_p3(0) = '1') else 
        trunc_ln882_4_reg_1943;
    ret_V_20_fu_658_p0 <= (0=>p_Result_s, others=>'-');
    ret_V_20_fu_658_p3 <= 
        select_ln901_fu_650_p3 when (ret_V_20_fu_658_p0(0) = '1') else 
        trunc_ln_fu_624_p4;
    ret_V_4_fu_901_p2 <= std_logic_vector(unsigned(trunc_ln5) - unsigned(rhs_fu_894_p3));
    ret_V_5_fu_800_p2 <= std_logic_vector(unsigned(trunc_ln882_1_fu_772_p4) + unsigned(ap_const_lv17_1));
    ret_V_7_fu_838_p2 <= std_logic_vector(unsigned(trunc_ln712_fu_834_p1) - unsigned(rhs_1_fu_826_p3));
    ret_V_9_fu_1276_p2 <= std_logic_vector(signed(sext_ln1245_1_fu_1269_p1) + signed(zext_ln1245_fu_1272_p1));
    ret_V_fu_644_p2 <= std_logic_vector(unsigned(trunc_ln_fu_624_p4) + unsigned(ap_const_lv17_1));
    rhs_1_fu_826_p3 <= (trunc_ln737_1_fu_822_p1 & ap_const_lv22_0);
    rhs_fu_894_p3 <= (trunc_ln737_reg_1633_pp0_iter9_reg & ap_const_lv22_0);
    select_ln901_1_fu_806_p3 <= 
        trunc_ln882_1_fu_772_p4 when (icmp_ln902_1_fu_794_p2(0) = '1') else 
        ret_V_5_fu_800_p2;
    select_ln901_3_fu_1394_p3 <= 
        trunc_ln882_2_reg_1909 when (icmp_ln902_2_reg_1916(0) = '1') else 
        ret_V_10_fu_1389_p2;
    select_ln901_4_fu_1419_p3 <= 
        trunc_ln882_3_reg_1926 when (icmp_ln902_3_reg_1933(0) = '1') else 
        ret_V_14_fu_1414_p2;
    select_ln901_5_fu_1444_p3 <= 
        trunc_ln882_4_reg_1943 when (icmp_ln902_4_reg_1950(0) = '1') else 
        ret_V_18_fu_1439_p2;
    select_ln901_fu_650_p3 <= 
        trunc_ln_fu_624_p4 when (icmp_ln902_fu_638_p2(0) = '1') else 
        ret_V_fu_644_p2;
        sext_ln1245_1_fu_1269_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1531_p3),24));

        sext_ln1245_4_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1540_p3),24));

        sext_ln1245_7_fu_1349_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1549_p3),24));

    sext_ln1548_fu_731_p0 <= grp_scaleCompute_17_42_20_48_16_1_s_fu_189_p_dout0;
        sext_ln1548_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1548_fu_731_p0),54));

        sext_ln70_1_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln70_4_fu_1074_p2),10));

        sext_ln70_2_fu_1178_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln70_8_fu_1172_p2),10));

        sext_ln70_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln70_fu_973_p2),10));


    src_mat_420_blk_n_assign_proc : process(ap_enable_reg_pp0_iter7, src_mat_420_empty_n, ap_predicate_op91_read_state8, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op91_read_state8 = ap_const_boolean_1))) then 
            src_mat_420_blk_n <= src_mat_420_empty_n;
        else 
            src_mat_420_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_mat_420_read_assign_proc : process(ap_enable_reg_pp0_iter7, ap_predicate_op91_read_state8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op91_read_state8 = ap_const_boolean_1))) then 
            src_mat_420_read <= ap_const_logic_1;
        else 
            src_mat_420_read <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln70_1_fu_983_p2 <= std_logic_vector(signed(sext_ln70_fu_979_p1) - signed(zext_ln1540_3_fu_965_p1));
    sub_ln70_4_fu_1074_p2 <= std_logic_vector(unsigned(zext_ln1540_4_fu_1054_p1) - unsigned(zext_ln1540_6_fu_1062_p1));
    sub_ln70_5_fu_1084_p2 <= std_logic_vector(signed(sext_ln70_1_fu_1080_p1) - signed(zext_ln1540_7_fu_1066_p1));
    sub_ln70_8_fu_1172_p2 <= std_logic_vector(unsigned(zext_ln1540_8_fu_1152_p1) - unsigned(zext_ln1540_10_fu_1160_p1));
    sub_ln70_9_fu_1182_p2 <= std_logic_vector(signed(sext_ln70_2_fu_1178_p1) - signed(zext_ln1540_11_fu_1164_p1));
    sub_ln70_fu_973_p2 <= std_logic_vector(unsigned(zext_ln1540_fu_953_p1) - unsigned(zext_ln1540_2_fu_961_p1));
    tmp_2_fu_752_p3 <= indexx_pre_comp_V_reg_1660(41 downto 41);
    trunc_ln674_1_fu_941_p1 <= ap_phi_reg_pp0_iter11_p_Val2_5_reg_508(8 - 1 downto 0);
    trunc_ln674_2_fu_945_p1 <= p_Val2_6_fu_923_p3(8 - 1 downto 0);
    trunc_ln674_3_fu_949_p1 <= ap_phi_reg_pp0_iter11_p_Val2_7_reg_497(8 - 1 downto 0);
    trunc_ln674_fu_937_p1 <= p_Val2_s_fu_930_p3(8 - 1 downto 0);
    trunc_ln712_fu_834_p1 <= indexx_pre_V_fu_764_p3(24 - 1 downto 0);
    trunc_ln737_1_fu_822_p1 <= idx_2_fu_814_p3(2 - 1 downto 0);
    trunc_ln737_fu_666_p1 <= ret_V_20_fu_658_p3(2 - 1 downto 0);
    trunc_ln882_1_fu_772_p4 <= indexx_pre_V_fu_764_p3(38 downto 22);
    trunc_ln902_1_fu_790_p1 <= indexx_pre_V_fu_764_p3(22 - 1 downto 0);
    trunc_ln902_2_fu_1292_p1 <= ret_V_9_fu_1276_p2(10 - 1 downto 0);
    trunc_ln902_3_fu_1332_p1 <= ret_V_13_fu_1316_p2(10 - 1 downto 0);
    trunc_ln902_4_fu_1372_p1 <= ret_V_17_fu_1356_p2(10 - 1 downto 0);
    trunc_ln902_fu_634_p1 <= indexy_pre_V(22 - 1 downto 0);
    trunc_ln_fu_624_p4 <= indexy_pre_V(38 downto 22);
    val0_V_1_fu_1090_p2 <= std_logic_vector(unsigned(sub_ln70_5_fu_1084_p2) + unsigned(zext_ln1540_5_fu_1058_p1));
    val0_V_2_fu_1188_p2 <= std_logic_vector(unsigned(sub_ln70_9_fu_1182_p2) + unsigned(zext_ln1540_9_fu_1156_p1));
    val0_V_fu_989_p2 <= std_logic_vector(unsigned(sub_ln70_1_fu_983_p2) + unsigned(zext_ln1540_1_fu_957_p1));
    val1_V_1_fu_1096_p2 <= std_logic_vector(unsigned(zext_ln1540_6_fu_1062_p1) - unsigned(zext_ln1540_4_fu_1054_p1));
    val1_V_2_fu_1194_p2 <= std_logic_vector(unsigned(zext_ln1540_10_fu_1160_p1) - unsigned(zext_ln1540_8_fu_1152_p1));
    val1_V_fu_995_p2 <= std_logic_vector(unsigned(zext_ln1540_2_fu_961_p1) - unsigned(zext_ln1540_fu_953_p1));
    val2_V_1_fu_1102_p2 <= std_logic_vector(unsigned(zext_ln70_1_fu_1070_p1) - unsigned(zext_ln1540_4_fu_1054_p1));
    val2_V_2_fu_1200_p2 <= std_logic_vector(unsigned(zext_ln70_2_fu_1168_p1) - unsigned(zext_ln1540_8_fu_1152_p1));
    val2_V_fu_1001_p2 <= std_logic_vector(unsigned(zext_ln70_fu_969_p1) - unsigned(zext_ln1540_fu_953_p1));
    zext_ln1064_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_20_fu_658_p3),32));
    zext_ln1171_1_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wx_V_reg_1682_pp0_iter11_reg),21));
    zext_ln1171_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wy_V_reg_1748),21));
    zext_ln1245_1_fu_1312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P4_V_1_fu_1302_p3),24));
    zext_ln1245_2_fu_1352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P4_V_2_fu_1342_p3),24));
    zext_ln1245_fu_1272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P4_V_fu_1262_p3),24));
    zext_ln1540_10_fu_1160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_5_fu_1122_p4),9));
    zext_ln1540_11_fu_1164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_6_fu_1132_p4),10));
    zext_ln1540_1_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_3_fu_949_p1),10));
    zext_ln1540_2_fu_961_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_1_fu_941_p1),9));
    zext_ln1540_3_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_2_fu_945_p1),10));
    zext_ln1540_4_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_fu_1014_p4),9));
    zext_ln1540_5_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_3_fu_1044_p4),10));
    zext_ln1540_6_fu_1062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_2_fu_1024_p4),9));
    zext_ln1540_7_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_40_fu_1034_p4),10));
    zext_ln1540_8_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_4_fu_1112_p4),9));
    zext_ln1540_9_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_10_fu_1142_p4),10));
    zext_ln1540_fu_953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_fu_937_p1),9));
    zext_ln394_1_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j),32));
    zext_ln394_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_1619_pp0_iter7_reg),64));
    zext_ln433_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(not_cmp_i_i175_reg_1677),12));
    zext_ln435_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_2_reg_1671),64));
    zext_ln436_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_nxt_fu_869_p2),64));
    zext_ln70_1_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_40_fu_1034_p4),9));
    zext_ln70_2_fu_1168_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_6_fu_1132_p4),9));
    zext_ln70_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_2_fu_945_p1),9));
    zext_ln717_1_fu_1231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wxy_V_fu_1222_p4),22));
end behav;
