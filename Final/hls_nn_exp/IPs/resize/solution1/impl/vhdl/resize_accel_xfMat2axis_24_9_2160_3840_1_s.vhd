-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity resize_accel_xfMat2axis_24_9_2160_3840_1_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    img_rows_empty_n : IN STD_LOGIC;
    img_rows_read : OUT STD_LOGIC;
    img_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    img_cols_empty_n : IN STD_LOGIC;
    img_cols_read : OUT STD_LOGIC;
    dst_mat_421_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    dst_mat_421_empty_n : IN STD_LOGIC;
    dst_mat_421_read : OUT STD_LOGIC;
    dst_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    dst_TVALID : OUT STD_LOGIC;
    dst_TREADY : IN STD_LOGIC;
    dst_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    dst_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    dst_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of resize_accel_xfMat2axis_24_9_2160_3840_1_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal img_rows_blk_n : STD_LOGIC;
    signal img_cols_blk_n : STD_LOGIC;
    signal cols_reg_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_reg_163 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_fu_105_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub9_fu_111_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub9_reg_173 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln77_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln77_reg_181 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln70_fu_129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_start : STD_LOGIC;
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_done : STD_LOGIC;
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_idle : STD_LOGIC;
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_ready : STD_LOGIC;
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_mat_421_read : STD_LOGIC;
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TREADY : STD_LOGIC;
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TVALID : STD_LOGIC;
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_fu_66 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_2_fu_134_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal zext_ln70_fu_125_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal regslice_both_dst_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal dst_TVALID_int_regslice : STD_LOGIC;
    signal dst_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_dst_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_id_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_id_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_dest_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component resize_accel_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dst_mat_421_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        dst_mat_421_empty_n : IN STD_LOGIC;
        dst_mat_421_read : OUT STD_LOGIC;
        dst_TREADY : IN STD_LOGIC;
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        sub : IN STD_LOGIC_VECTOR (31 downto 0);
        icmp_ln77 : IN STD_LOGIC_VECTOR (0 downto 0);
        dst_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        dst_TVALID : OUT STD_LOGIC;
        dst_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        dst_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        dst_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component resize_accel_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82 : component resize_accel_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_start,
        ap_done => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_done,
        ap_idle => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_idle,
        ap_ready => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_ready,
        dst_mat_421_dout => dst_mat_421_dout,
        dst_mat_421_empty_n => dst_mat_421_empty_n,
        dst_mat_421_read => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_mat_421_read,
        dst_TREADY => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TREADY,
        cols => cols_reg_158,
        sub => sub_reg_168,
        icmp_ln77 => icmp_ln77_reg_181,
        dst_TDATA => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TDATA,
        dst_TVALID => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TVALID,
        dst_TKEEP => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TKEEP,
        dst_TSTRB => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TSTRB,
        dst_TUSER => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TUSER,
        dst_TLAST => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TLAST,
        dst_TID => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TID,
        dst_TDEST => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TDEST);

    regslice_both_dst_V_data_V_U : component resize_accel_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TDATA,
        vld_in => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TVALID,
        ack_in => dst_TREADY_int_regslice,
        data_out => dst_TDATA,
        vld_out => regslice_both_dst_V_data_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_data_V_U_apdone_blk);

    regslice_both_dst_V_keep_V_U : component resize_accel_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TKEEP,
        vld_in => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TVALID,
        ack_in => regslice_both_dst_V_keep_V_U_ack_in_dummy,
        data_out => dst_TKEEP,
        vld_out => regslice_both_dst_V_keep_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_keep_V_U_apdone_blk);

    regslice_both_dst_V_strb_V_U : component resize_accel_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TSTRB,
        vld_in => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TVALID,
        ack_in => regslice_both_dst_V_strb_V_U_ack_in_dummy,
        data_out => dst_TSTRB,
        vld_out => regslice_both_dst_V_strb_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_strb_V_U_apdone_blk);

    regslice_both_dst_V_user_V_U : component resize_accel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TUSER,
        vld_in => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TVALID,
        ack_in => regslice_both_dst_V_user_V_U_ack_in_dummy,
        data_out => dst_TUSER,
        vld_out => regslice_both_dst_V_user_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_user_V_U_apdone_blk);

    regslice_both_dst_V_last_V_U : component resize_accel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TLAST,
        vld_in => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TVALID,
        ack_in => regslice_both_dst_V_last_V_U_ack_in_dummy,
        data_out => dst_TLAST,
        vld_out => regslice_both_dst_V_last_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_last_V_U_apdone_blk);

    regslice_both_dst_V_id_V_U : component resize_accel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TID,
        vld_in => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TVALID,
        ack_in => regslice_both_dst_V_id_V_U_ack_in_dummy,
        data_out => dst_TID,
        vld_out => regslice_both_dst_V_id_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_id_V_U_apdone_blk);

    regslice_both_dst_V_dest_V_U : component resize_accel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TDEST,
        vld_in => grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TVALID,
        ack_in => regslice_both_dst_V_dest_V_U_ack_in_dummy,
        data_out => dst_TDEST,
        vld_out => regslice_both_dst_V_dest_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln70_fu_129_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_ready = ap_const_logic_1)) then 
                    grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_66_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (img_cols_empty_n = ap_const_logic_0) or (img_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_66 <= ap_const_lv12_0;
            elsif (((icmp_ln70_fu_129_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_fu_66 <= i_2_fu_134_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                cols_reg_158 <= img_cols_dout;
                rows_reg_163 <= img_rows_dout;
                sub9_reg_173 <= sub9_fu_111_p2;
                sub_reg_168 <= sub_fu_105_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln70_fu_129_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln77_reg_181 <= icmp_ln77_fu_140_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, img_rows_empty_n, img_cols_empty_n, ap_CS_fsm_state2, icmp_ln70_fu_129_p2, grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state4, regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (img_cols_empty_n = ap_const_logic_0) or (img_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln70_fu_129_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, img_rows_empty_n, img_cols_empty_n)
    begin
        if (((ap_start = ap_const_logic_0) or (img_cols_empty_n = ap_const_logic_0) or (img_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_done)
    begin
        if ((grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, img_rows_empty_n, img_cols_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (img_cols_empty_n = ap_const_logic_0) or (img_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4, regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4, regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    dst_TVALID <= regslice_both_dst_V_data_V_U_vld_out;
    dst_TVALID_int_regslice <= grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TVALID;

    dst_mat_421_read_assign_proc : process(grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_mat_421_read, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dst_mat_421_read <= grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_mat_421_read;
        else 
            dst_mat_421_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_start <= grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_ap_start_reg;
    grp_xfMat2axis_24_9_2160_3840_1_Pipeline_loop_col_mat2axi_fu_82_dst_TREADY <= (dst_TREADY_int_regslice and ap_CS_fsm_state3);
    i_2_fu_134_p2 <= std_logic_vector(unsigned(i_fu_66) + unsigned(ap_const_lv12_1));
    icmp_ln70_fu_129_p2 <= "1" when (signed(zext_ln70_fu_125_p1) < signed(rows_reg_163)) else "0";
    icmp_ln77_fu_140_p2 <= "1" when (zext_ln70_fu_125_p1 = sub9_reg_173) else "0";

    img_cols_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, img_cols_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_cols_blk_n <= img_cols_empty_n;
        else 
            img_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_cols_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, img_rows_empty_n, img_cols_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (img_cols_empty_n = ap_const_logic_0) or (img_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_cols_read <= ap_const_logic_1;
        else 
            img_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    img_rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, img_rows_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_rows_blk_n <= img_rows_empty_n;
        else 
            img_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, img_rows_empty_n, img_cols_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (img_cols_empty_n = ap_const_logic_0) or (img_rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_rows_read <= ap_const_logic_1;
        else 
            img_rows_read <= ap_const_logic_0;
        end if; 
    end process;

    sub9_fu_111_p2 <= std_logic_vector(unsigned(img_rows_dout) + unsigned(ap_const_lv32_FFFFFFFF));
    sub_fu_105_p2 <= std_logic_vector(unsigned(img_cols_dout) + unsigned(ap_const_lv32_FFFFFFFF));
    zext_ln70_fu_125_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_66),32));
end behav;
